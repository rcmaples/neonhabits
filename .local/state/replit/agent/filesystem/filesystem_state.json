{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Overview\n\nThis is a cyberpunk-themed habit tracking application built as a full-stack web app. The application gamifies habit tracking by treating it like an RPG where users manage a character, complete daily habits and tasks, and earn rewards. The frontend features a futuristic cyberpunk aesthetic with neon colors and sci-fi terminology, while the backend provides a REST API for managing users, characters, habits, todos, and rewards.\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n# System Architecture\n\n## Frontend Architecture\nThe client uses React with TypeScript and Vite as the build tool. The UI is built with shadcn/ui components and styled with Tailwind CSS using a custom cyberpunk color scheme. Key architectural decisions include:\n\n- **Component Structure**: Organized into reusable UI components following the shadcn/ui pattern with custom cyberpunk styling\n- **State Management**: TanStack Query for server state management with custom hooks for data fetching and mutations\n- **Routing**: Wouter for lightweight client-side routing\n- **Styling**: Tailwind CSS with custom CSS variables for the cyberpunk theme, including neon glow effects and grid patterns\n- **Authentication**: Custom auth hook managing user state across components\n\n## Backend Architecture\nThe server is built with Express.js and TypeScript, following a clean separation of concerns:\n\n- **API Layer**: Express routes handling authentication, character management, habits, todos, and rewards\n- **Storage Layer**: Abstract storage interface implemented with Drizzle ORM for database operations\n- **Database**: PostgreSQL with Drizzle ORM for type-safe database queries and migrations\n- **Authentication**: Session-based auth with bcrypt password hashing\n- **Development Setup**: Vite middleware integration for hot reloading during development\n\n## Data Storage\nThe application uses PostgreSQL as the primary database with the following schema design:\n\n- **Users Table**: Email, username, password with unique constraints\n- **Characters Table**: User's RPG character with level, XP, HP, credits, and avatar data\n- **Habits Table**: Repeatable daily/weekly habits with difficulty, rewards, and streak tracking\n- **Todos Table**: One-time tasks with priority levels and completion tracking\n- **Equipment/Rewards Tables**: RPG-style items and rewards system\n- **Habit Completions**: Historical tracking of habit completion events\n\n## External Dependencies\n\n- **Database**: Neon PostgreSQL serverless database\n- **ORM**: Drizzle ORM with Drizzle Kit for migrations\n- **UI Components**: Radix UI primitives via shadcn/ui\n- **Icons**: Lucide React icon library\n- **Fonts**: Satoshi and Fira Code fonts from external CDNs\n- **Authentication**: bcryptjs for password hashing\n- **Session Storage**: connect-pg-simple for PostgreSQL session storage\n- **Development Tools**: Replit-specific Vite plugins for development experience","size_bytes":2938},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n        \"neon-cyan\": \"var(--neon-cyan)\",\n        \"neon-pink\": \"var(--neon-pink)\",\n        \"neon-yellow\": \"var(--neon-yellow)\",\n        \"retro-purple\": \"var(--retro-purple)\",\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n        \"pulse-neon\": {\n          \"0%, 100%\": { opacity: \"1\" },\n          \"50%\": { opacity: \"0.7\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n        \"pulse-neon\": \"pulse-neon 2s infinite\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":3089},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n          await import(\"@replit/vite-plugin-dev-banner\").then((m) =>\n            m.devBanner(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":1080},"attached_assets/colors_1759070852454.css":{"content":"/**\n * Netrunner - Color Definitions\n * Dark-mode native OKLCH color palette with RGB fallbacks\n * \n * Usage:\n * - Import this file in your CSS or include in your build process\n * - Colors automatically fallback to RGB on unsupported browsers\n * - Use semantic color names for consistent theming\n */\n\n:root {\n  /* ===== PRIMARY COLORS (Electric Purple) ===== */\n  --color-primary-50: #faf8ff;\n  --color-primary-100: #f3f0ff;\n  --color-primary-200: #e9e2ff;\n  --color-primary-300: #d6c7ff;\n  --color-primary-400: #b794f6;\n  --color-primary-500: #8b5cf6;\n  --color-primary-600: #7c3aed;\n  --color-primary-700: #6d28d9;\n  --color-primary-800: #5b21b6;\n  --color-primary-900: #4c1d95;\n  --color-primary-950: #2e1065;\n\n  /* ===== ACCENT COLORS (Neo Pink) ===== */\n  --color-accent-50: #fef7ff;\n  --color-accent-100: #fdf2ff;\n  --color-accent-200: #fce7ff;\n  --color-accent-300: #f8ccff;\n  --color-accent-400: #f472b6;\n  --color-accent-500: #ec4899;\n  --color-accent-600: #db2777;\n  --color-accent-700: #be185d;\n  --color-accent-800: #9d174d;\n  --color-accent-900: #831843;\n  --color-accent-950: #500724;\n\n  /* ===== SEMANTIC COLORS ===== */\n  /* Success (Green) */\n  --color-success-50: #f0fdf5;\n  --color-success-100: #dcfce8;\n  --color-success-200: #bbf7d1;\n  --color-success-300: #86efac;\n  --color-success-400: #4ade80;\n  --color-success-500: #22c55e;\n  --color-success-600: #16a34a;\n  --color-success-700: #15803d;\n  --color-success-800: #166534;\n  --color-success-900: #14532d;\n\n  /* Warning (Amber) */\n  --color-warning-50: #fffbeb;\n  --color-warning-100: #fef3c7;\n  --color-warning-200: #fde68a;\n  --color-warning-300: #fcd34d;\n  --color-warning-400: #fbbf24;\n  --color-warning-500: #f59e0b;\n  --color-warning-600: #d97706;\n  --color-warning-700: #b45309;\n  --color-warning-800: #92400e;\n  --color-warning-900: #78350f;\n\n  /* Danger (Red) */\n  --color-danger-50: #fef2f2;\n  --color-danger-100: #fee2e2;\n  --color-danger-200: #fecaca;\n  --color-danger-300: #fca5a5;\n  --color-danger-400: #f87171;\n  --color-danger-500: #ef4444;\n  --color-danger-600: #dc2626;\n  --color-danger-700: #b91c1c;\n  --color-danger-800: #991b1b;\n  --color-danger-900: #7f1d1d;\n\n  /* Info (Blue) */\n  --color-info-50: #eff6ff;\n  --color-info-100: #dbeafe;\n  --color-info-200: #bfdbfe;\n  --color-info-300: #93c5fd;\n  --color-info-400: #60a5fa;\n  --color-info-500: #3b82f6;\n  --color-info-600: #2563eb;\n  --color-info-700: #1d4ed8;\n  --color-info-800: #1e40af;\n  --color-info-900: #1e3a8a;\n\n  /* ===== NEUTRALS (Subtly tinted) ===== */\n  --color-neutral-50: #fafafa;\n  --color-neutral-100: #f5f5f5;\n  --color-neutral-200: #e5e5e5;\n  --color-neutral-300: #d4d4d4;\n  --color-neutral-400: #a3a3a3;\n  --color-neutral-500: #737373;\n  --color-neutral-600: #525252;\n  --color-neutral-700: #404040;\n  --color-neutral-800: #262626;\n  --color-neutral-900: #171717;\n  --color-neutral-950: #0a0a0a;\n\n  /* ===== RETROWAVE ACCENT COLORS (Use sparingly) ===== */\n  --color-retro-solar-flare: #ff901f;     /* Premium highlights */\n  --color-retro-cosmic-punch: #ff2975;    /* Special CTAs */\n  --color-retro-ultraviolet: #f222ff;     /* Marketing gradients */\n  --color-retro-quantum-grape: #8c1eff;   /* Alternative primary */\n  --color-retro-hypersonic-rush: #1b51ff; /* Alternative info */\n  --color-retro-electric-surge: #00eaff;  /* Loading states */\n  --color-retro-neon-drift: #0aff99;      /* Success celebrations */\n  --color-retro-midnight-vortex: #120458; /* Deep backgrounds */\n  --color-retro-quantum-storm: #2c1a94;   /* Alternative surfaces */\n\n  /* ===== SEMANTIC ALIASES ===== */\n  --color-background: var(--color-neutral-950);\n  --color-foreground: var(--color-neutral-50);\n  --color-muted: var(--color-neutral-500);\n  --color-muted-foreground: var(--color-neutral-400);\n  --color-border: var(--color-neutral-800);\n  --color-input: var(--color-neutral-900);\n  --color-ring: var(--color-primary-500);\n}\n\n/* ===== OKLCH COLOR DEFINITIONS (Modern browsers) ===== */\n@supports (color: oklch(0 0 0)) {\n  :root {\n    /* Primary Colors (Electric Purple - hue 285Â°) */\n    --color-primary-50: oklch(0.98 0.02 285);\n    --color-primary-100: oklch(0.95 0.05 285);\n    --color-primary-200: oklch(0.90 0.08 285);\n    --color-primary-300: oklch(0.82 0.12 285);\n    --color-primary-400: oklch(0.70 0.15 285);\n    --color-primary-500: oklch(0.58 0.20 285);\n    --color-primary-600: oklch(0.45 0.18 285);\n    --color-primary-700: oklch(0.35 0.15 285);\n    --color-primary-800: oklch(0.25 0.12 285);\n    --color-primary-900: oklch(0.15 0.08 285);\n    --color-primary-950: oklch(0.09 0.05 285);\n\n    /* Accent Colors (Neo Pink - hue 320Â°) */\n    --color-accent-50: oklch(0.98 0.02 320);\n    --color-accent-100: oklch(0.95 0.05 320);\n    --color-accent-200: oklch(0.90 0.10 320);\n    --color-accent-300: oklch(0.82 0.18 320);\n    --color-accent-400: oklch(0.70 0.25 320);\n    --color-accent-500: oklch(0.58 0.28 320);\n    --color-accent-600: oklch(0.45 0.25 320);\n    --color-accent-700: oklch(0.35 0.20 320);\n    --color-accent-800: oklch(0.25 0.15 320);\n    --color-accent-900: oklch(0.15 0.10 320);\n    --color-accent-950: oklch(0.09 0.06 320);\n\n    /* Semantic Colors */\n    --color-success-400: oklch(0.75 0.15 145);\n    --color-success-500: oklch(0.65 0.18 145);\n    --color-success-600: oklch(0.50 0.15 145);\n\n    --color-warning-400: oklch(0.80 0.12 85);\n    --color-warning-500: oklch(0.70 0.15 85);\n    --color-warning-600: oklch(0.55 0.12 85);\n\n    --color-danger-400: oklch(0.70 0.20 25);\n    --color-danger-500: oklch(0.60 0.22 25);\n    --color-danger-600: oklch(0.45 0.18 25);\n\n    --color-info-400: oklch(0.72 0.15 220);\n    --color-info-500: oklch(0.60 0.18 220);\n    --color-info-600: oklch(0.45 0.15 220);\n\n    /* Neutrals with subtle purple tint */\n    --color-neutral-50: oklch(0.98 0.01 285);\n    --color-neutral-100: oklch(0.95 0.015 285);\n    --color-neutral-200: oklch(0.90 0.02 285);\n    --color-neutral-300: oklch(0.82 0.025 285);\n    --color-neutral-400: oklch(0.70 0.03 285);\n    --color-neutral-500: oklch(0.58 0.035 285);\n    --color-neutral-600: oklch(0.45 0.04 285);\n    --color-neutral-700: oklch(0.35 0.045 285);\n    --color-neutral-800: oklch(0.25 0.05 285);\n    --color-neutral-900: oklch(0.15 0.055 285);\n    --color-neutral-950: oklch(0.09 0.06 285);\n\n    /* RetroWave Accent Colors (OKLCH) */\n    --color-retro-solar-flare: oklch(0.758 0.173 58);\n    --color-retro-cosmic-punch: oklch(0.654 0.243 8);\n    --color-retro-ultraviolet: oklch(0.69 0.308 325);\n    --color-retro-quantum-grape: oklch(0.553 0.285 297);\n    --color-retro-hypersonic-rush: oklch(0.53 0.261 265);\n    --color-retro-electric-surge: oklch(0.856 0.147 206);\n    --color-retro-neon-drift: oklch(0.879 0.213 156);\n    --color-retro-midnight-vortex: oklch(0.225 0.134 275);\n    --color-retro-quantum-storm: oklch(0.344 0.183 277);\n  }\n}\n\n/* ===== COMPONENT-SPECIFIC COLOR UTILITIES ===== */\n.color-scheme-neo-synthwave {\n  color-scheme: dark;\n  --color-primary: var(--color-primary-500);\n  --color-primary-hover: var(--color-primary-400);\n  --color-primary-active: var(--color-primary-600);\n  \n  --color-secondary: var(--color-accent-500);\n  --color-secondary-hover: var(--color-accent-400);\n  --color-secondary-active: var(--color-accent-600);\n  \n  --color-surface: var(--color-neutral-900);\n  --color-surface-elevated: var(--color-neutral-800);\n  --color-surface-overlay: var(--color-neutral-700);\n}\n\n/* ===== GRADIENT UTILITIES ===== */\n.gradient-primary {\n  background: linear-gradient(135deg, \n    var(--color-primary-500), \n    var(--color-accent-500)\n  );\n}\n\n.gradient-retro-special {\n  background: linear-gradient(135deg,\n    var(--color-retro-ultraviolet),\n    var(--color-retro-cosmic-punch),\n    var(--color-retro-electric-surge)\n  );\n}\n\n.gradient-surface {\n  background: linear-gradient(135deg, \n    var(--color-neutral-950), \n    var(--color-neutral-900)\n  );\n}\n\n/* ===== USAGE EXAMPLES ===== */\n/*\nPrimary Button:\n  background: var(--color-primary-500);\n  color: white;\n  \nPrimary Button Hover:\n  background: var(--color-primary-400);\n  \nSuccess Status:\n  background: var(--color-success-500);\n  color: white;\n  \nSpecial Premium CTA:\n  background: var(--color-retro-cosmic-punch);\n  color: white;\n  \nDark Surface:\n  background: var(--color-neutral-900);\n  border: 1px solid var(--color-neutral-800);\n*/","size_bytes":8285},"attached_assets/content-1759070459382.md":{"content":"[Skip to content](https://github.com/habitrpg/habitica#start-of-content)\n\n{{ message }}\n\n[HabitRPG](https://github.com/HabitRPG)/ **[habitica](https://github.com/HabitRPG/habitica)** Public\n\n- [Notifications](https://github.com/login?return_to=%2FHabitRPG%2Fhabitica) You must be signed in to change notification settings\n- [Fork\\\\\n4.3k](https://github.com/login?return_to=%2FHabitRPG%2Fhabitica)\n- [Star\\\\\n13.3k](https://github.com/login?return_to=%2FHabitRPG%2Fhabitica)\n\n\nA habit tracker app which treats your goals like a Role Playing Game.\n\n\n[habitica.com](https://habitica.com/ \"https://habitica.com\")\n\n### License\n\n[View license](https://github.com/HabitRPG/habitica/blob/develop/LICENSE)\n\n[13.3k\\\\\nstars](https://github.com/HabitRPG/habitica/stargazers) [4.3k\\\\\nforks](https://github.com/HabitRPG/habitica/forks) [Branches](https://github.com/HabitRPG/habitica/branches) [Tags](https://github.com/HabitRPG/habitica/tags) [Activity](https://github.com/HabitRPG/habitica/activity)\n\n[Star](https://github.com/login?return_to=%2FHabitRPG%2Fhabitica)\n\n[Notifications](https://github.com/login?return_to=%2FHabitRPG%2Fhabitica) You must be signed in to change notification settings\n\n# HabitRPG/habitica\n\ndevelop\n\n[**48** Branches](https://github.com/HabitRPG/habitica/branches) [**1218** Tags](https://github.com/HabitRPG/habitica/tags)\n\n[Go to Branches page](https://github.com/HabitRPG/habitica/branches)[Go to Tags page](https://github.com/HabitRPG/habitica/tags)\n\nGo to file\n\nCode\n\nOpen more actions menu\n\n## Folders and files\n\n| Name | Name | Last commit message | Last commit date |\n| --- | --- | --- | --- |\n| ## Latest commit<br>## History<br>[25,795 Commits](https://github.com/HabitRPG/habitica/commits/develop/)<br>[View commit history for this file.](https://github.com/HabitRPG/habitica/commits/develop/) |\n| [.ebextensions](https://github.com/HabitRPG/habitica/tree/develop/.ebextensions \".ebextensions\") | [.ebextensions](https://github.com/HabitRPG/habitica/tree/develop/.ebextensions \".ebextensions\") |  |  |\n| [.github](https://github.com/HabitRPG/habitica/tree/develop/.github \".github\") | [.github](https://github.com/HabitRPG/habitica/tree/develop/.github \".github\") |  |  |\n| [.heroku](https://github.com/HabitRPG/habitica/tree/develop/.heroku \".heroku\") | [.heroku](https://github.com/HabitRPG/habitica/tree/develop/.heroku \".heroku\") |  |  |\n| [apidoc](https://github.com/HabitRPG/habitica/tree/develop/apidoc \"apidoc\") | [apidoc](https://github.com/HabitRPG/habitica/tree/develop/apidoc \"apidoc\") |  |  |\n| [database\\_reports](https://github.com/HabitRPG/habitica/tree/develop/database_reports \"database_reports\") | [database\\_reports](https://github.com/HabitRPG/habitica/tree/develop/database_reports \"database_reports\") |  |  |\n| [gulp](https://github.com/HabitRPG/habitica/tree/develop/gulp \"gulp\") | [gulp](https://github.com/HabitRPG/habitica/tree/develop/gulp \"gulp\") |  |  |\n| [habitica-images @ e3215f1](https://github.com/HabitRPG/habitica-images/tree/e3215f16f99f9e33bf218b46862d6b2ad9bd7fec \"habitica-images\") | [habitica-images @ e3215f1](https://github.com/HabitRPG/habitica-images/tree/e3215f16f99f9e33bf218b46862d6b2ad9bd7fec \"habitica-images\") |  |  |\n| [keys/google](https://github.com/HabitRPG/habitica/tree/develop/keys/google \"This path skips through empty directories\") | [keys/google](https://github.com/HabitRPG/habitica/tree/develop/keys/google \"This path skips through empty directories\") |  |  |\n| [kubernetes](https://github.com/HabitRPG/habitica/tree/develop/kubernetes \"kubernetes\") | [kubernetes](https://github.com/HabitRPG/habitica/tree/develop/kubernetes \"kubernetes\") |  |  |\n| [migrations](https://github.com/HabitRPG/habitica/tree/develop/migrations \"migrations\") | [migrations](https://github.com/HabitRPG/habitica/tree/develop/migrations \"migrations\") |  |  |\n| [scripts](https://github.com/HabitRPG/habitica/tree/develop/scripts \"scripts\") | [scripts](https://github.com/HabitRPG/habitica/tree/develop/scripts \"scripts\") |  |  |\n| [test](https://github.com/HabitRPG/habitica/tree/develop/test \"test\") | [test](https://github.com/HabitRPG/habitica/tree/develop/test \"test\") |  |  |\n| [website](https://github.com/HabitRPG/habitica/tree/develop/website \"website\") | [website](https://github.com/HabitRPG/habitica/tree/develop/website \"website\") |  |  |\n| [.babelrc](https://github.com/HabitRPG/habitica/blob/develop/.babelrc \".babelrc\") | [.babelrc](https://github.com/HabitRPG/habitica/blob/develop/.babelrc \".babelrc\") |  |  |\n| [.buildpacks](https://github.com/HabitRPG/habitica/blob/develop/.buildpacks \".buildpacks\") | [.buildpacks](https://github.com/HabitRPG/habitica/blob/develop/.buildpacks \".buildpacks\") |  |  |\n| [.codeclimate.yml](https://github.com/HabitRPG/habitica/blob/develop/.codeclimate.yml \".codeclimate.yml\") | [.codeclimate.yml](https://github.com/HabitRPG/habitica/blob/develop/.codeclimate.yml \".codeclimate.yml\") |  |  |\n| [.dockerignore](https://github.com/HabitRPG/habitica/blob/develop/.dockerignore \".dockerignore\") | [.dockerignore](https://github.com/HabitRPG/habitica/blob/develop/.dockerignore \".dockerignore\") |  |  |\n| [.editorconfig](https://github.com/HabitRPG/habitica/blob/develop/.editorconfig \".editorconfig\") | [.editorconfig](https://github.com/HabitRPG/habitica/blob/develop/.editorconfig \".editorconfig\") |  |  |\n| [.eslintignore](https://github.com/HabitRPG/habitica/blob/develop/.eslintignore \".eslintignore\") | [.eslintignore](https://github.com/HabitRPG/habitica/blob/develop/.eslintignore \".eslintignore\") |  |  |\n| [.eslintrc.js](https://github.com/HabitRPG/habitica/blob/develop/.eslintrc.js \".eslintrc.js\") | [.eslintrc.js](https://github.com/HabitRPG/habitica/blob/develop/.eslintrc.js \".eslintrc.js\") |  |  |\n| [.gitignore](https://github.com/HabitRPG/habitica/blob/develop/.gitignore \".gitignore\") | [.gitignore](https://github.com/HabitRPG/habitica/blob/develop/.gitignore \".gitignore\") |  |  |\n| [.gitmodules](https://github.com/HabitRPG/habitica/blob/develop/.gitmodules \".gitmodules\") | [.gitmodules](https://github.com/HabitRPG/habitica/blob/develop/.gitmodules \".gitmodules\") |  |  |\n| [.nodemonignore](https://github.com/HabitRPG/habitica/blob/develop/.nodemonignore \".nodemonignore\") | [.nodemonignore](https://github.com/HabitRPG/habitica/blob/develop/.nodemonignore \".nodemonignore\") |  |  |\n| [.nvmrc](https://github.com/HabitRPG/habitica/blob/develop/.nvmrc \".nvmrc\") | [.nvmrc](https://github.com/HabitRPG/habitica/blob/develop/.nvmrc \".nvmrc\") |  |  |\n| [.slugignore](https://github.com/HabitRPG/habitica/blob/develop/.slugignore \".slugignore\") | [.slugignore](https://github.com/HabitRPG/habitica/blob/develop/.slugignore \".slugignore\") |  |  |\n| [Dockerfile-Dev](https://github.com/HabitRPG/habitica/blob/develop/Dockerfile-Dev \"Dockerfile-Dev\") | [Dockerfile-Dev](https://github.com/HabitRPG/habitica/blob/develop/Dockerfile-Dev \"Dockerfile-Dev\") |  |  |\n| [LICENSE](https://github.com/HabitRPG/habitica/blob/develop/LICENSE \"LICENSE\") | [LICENSE](https://github.com/HabitRPG/habitica/blob/develop/LICENSE \"LICENSE\") |  |  |\n| [Procfile](https://github.com/HabitRPG/habitica/blob/develop/Procfile \"Procfile\") | [Procfile](https://github.com/HabitRPG/habitica/blob/develop/Procfile \"Procfile\") |  |  |\n| [README.md](https://github.com/HabitRPG/habitica/blob/develop/README.md \"README.md\") | [README.md](https://github.com/HabitRPG/habitica/blob/develop/README.md \"README.md\") |  |  |\n| [config.json.example](https://github.com/HabitRPG/habitica/blob/develop/config.json.example \"config.json.example\") | [config.json.example](https://github.com/HabitRPG/habitica/blob/develop/config.json.example \"config.json.example\") |  |  |\n| [docker-compose.dev.yml](https://github.com/HabitRPG/habitica/blob/develop/docker-compose.dev.yml \"docker-compose.dev.yml\") | [docker-compose.dev.yml](https://github.com/HabitRPG/habitica/blob/develop/docker-compose.dev.yml \"docker-compose.dev.yml\") |  |  |\n| [docker-compose.yml](https://github.com/HabitRPG/habitica/blob/develop/docker-compose.yml \"docker-compose.yml\") | [docker-compose.yml](https://github.com/HabitRPG/habitica/blob/develop/docker-compose.yml \"docker-compose.yml\") |  |  |\n| [gulpfile.js](https://github.com/HabitRPG/habitica/blob/develop/gulpfile.js \"gulpfile.js\") | [gulpfile.js](https://github.com/HabitRPG/habitica/blob/develop/gulpfile.js \"gulpfile.js\") |  |  |\n| [package-lock.json](https://github.com/HabitRPG/habitica/blob/develop/package-lock.json \"package-lock.json\") | [package-lock.json](https://github.com/HabitRPG/habitica/blob/develop/package-lock.json \"package-lock.json\") |  |  |\n| [package.json](https://github.com/HabitRPG/habitica/blob/develop/package.json \"package.json\") | [package.json](https://github.com/HabitRPG/habitica/blob/develop/package.json \"package.json\") |  |  |\n| View all files |\n\n## Repository files navigation\n\n# Habitica [![Build Status](https://github.com/HabitRPG/habitica/workflows/Test/badge.svg)](https://github.com/HabitRPG/habitica/workflows/Test/badge.svg)\n\n[Permalink: Habitica ](https://github.com/habitrpg/habitica#habitica-)\n\n[Habitica](https://habitica.com/) is an open-source habit-building program that treats your life like a role-playing game. Level up as you succeed, lose HP as you fail, and earn Gold to buy weapons and armor!\n\n**Want to contribute code to Habitica?** We're always looking for assistance on any issues in our repo with the \"Help Wanted\" label. The wiki pages below and the additional linked pages will tell you how to start contributing code and where you can seek further help or ask questions:\n\n- [Guidance for Blacksmiths](https://habitica.fandom.com/wiki/Guidance_for_Blacksmiths) \\- an introduction to the technologies used and how the software is organized.\n- [Setting up Habitica Locally](https://github.com/HabitRPG/habitica/wiki/Setting-Up-Habitica-for-Local-Development) \\- how to set up a local install of Habitica for development and testing.\n\n**Interested in contributing to Habitica’s mobile apps?** Visit the links below for our mobile repositories.\n\n- **Android:** [https://github.com/HabitRPG/habitica-android](https://github.com/HabitRPG/habitica-android)\n- **iOS:** [https://github.com/HabitRPG/habitica-ios](https://github.com/HabitRPG/habitica-ios)\n\nHabitica's code is licensed as described at [https://github.com/HabitRPG/habitica/blob/develop/LICENSE](https://github.com/HabitRPG/habitica/blob/develop/LICENSE)\n\n**Found a bug?** Please report it to [admin email](mailto:admin@habitica.com) rather than create an issue (an admin will advise you if a new issue is necessary; usually it is not).\n\n**Creating a third-party tool?** Please review our [API Usage Guidelines](https://github.com/HabitRPG/habitica/wiki/API-Usage-Guidelines) to ensure that your tool is compliant and maintains the best experience for Habitica players.\n\n**Have any questions about Habitica or contributing?** See the links in the [Habitica](https://habitica.com/) website's Help menu. There’s FAQ’s, guides, and the option to reach out to us with any further questions!\n\n## About\n\nA habit tracker app which treats your goals like a Role Playing Game.\n\n\n[habitica.com](https://habitica.com/ \"https://habitica.com\")\n\n### Topics\n\n[nodejs](https://github.com/topics/nodejs \"Topic: nodejs\") [javascript](https://github.com/topics/javascript \"Topic: javascript\") [css](https://github.com/topics/css \"Topic: css\") [html](https://github.com/topics/html \"Topic: html\") [vuejs](https://github.com/topics/vuejs \"Topic: vuejs\") [express](https://github.com/topics/express \"Topic: express\") [node](https://github.com/topics/node \"Topic: node\") [mongodb](https://github.com/topics/mongodb \"Topic: mongodb\") [vue](https://github.com/topics/vue \"Topic: vue\") [habitica](https://github.com/topics/habitica \"Topic: habitica\") [hacktoberfest](https://github.com/topics/hacktoberfest \"Topic: hacktoberfest\")\n\n### Resources\n\n[Readme](https://github.com/habitrpg/habitica#readme-ov-file)\n\n### License\n\n[View license](https://github.com/habitrpg/habitica#License-1-ov-file)\n\n### Contributing\n\n[Contributing](https://github.com/habitrpg/habitica#contributing-ov-file)\n\n[Activity](https://github.com/HabitRPG/habitica/activity)\n\n[Custom properties](https://github.com/HabitRPG/habitica/custom-properties)\n\n### Stars\n\n[**13.3k**\\\\\nstars](https://github.com/HabitRPG/habitica/stargazers)\n\n### Watchers\n\n[**284**\\\\\nwatching](https://github.com/HabitRPG/habitica/watchers)\n\n### Forks\n\n[**4.3k**\\\\\nforks](https://github.com/HabitRPG/habitica/forks)\n\n[Report repository](https://github.com/contact/report-content?content_url=https%3A%2F%2Fgithub.com%2FHabitRPG%2Fhabitica&report=HabitRPG+%28user%29)\n\n## [Releases\\  994](https://github.com/HabitRPG/habitica/releases)\n\n[v5.41.3 Fixes and FAQ Tweaks\\\\\nLatest\\\\\n\\\\\n5 days agoSep 23, 2025](https://github.com/HabitRPG/habitica/releases/tag/v5.41.3)\n\n[\\+ 993 releases](https://github.com/HabitRPG/habitica/releases)\n\n## [Packages](https://github.com/orgs/HabitRPG/packages?repo_name=habitica)\n\nNo packages published\n\n## [Contributors\\  921](https://github.com/HabitRPG/habitica/graphs/contributors)\n\n- [![@SabreCat](https://avatars.githubusercontent.com/u/4501321?s=64&v=4)](https://github.com/SabreCat)\n- [![@lefnire](https://avatars.githubusercontent.com/u/195202?s=64&v=4)](https://github.com/lefnire)\n- [![@paglias](https://avatars.githubusercontent.com/u/589911?s=64&v=4)](https://github.com/paglias)\n- [![@crookedneighbor](https://avatars.githubusercontent.com/u/2916945?s=64&v=4)](https://github.com/crookedneighbor)\n- [![@Alys](https://avatars.githubusercontent.com/u/1495809?s=64&v=4)](https://github.com/Alys)\n- [![@TheHollidayInn](https://avatars.githubusercontent.com/u/1253400?s=64&v=4)](https://github.com/TheHollidayInn)\n- [![@dependabot-preview[bot]](https://avatars.githubusercontent.com/in/2141?s=64&v=4)](https://github.com/apps/dependabot-preview)\n- [![@dependabot[bot]](https://avatars.githubusercontent.com/in/29110?s=64&v=4)](https://github.com/apps/dependabot)\n- [![@phillipthelen](https://avatars.githubusercontent.com/u/298062?s=64&v=4)](https://github.com/phillipthelen)\n- [![@CuriousMagpie](https://avatars.githubusercontent.com/u/78037386?s=64&v=4)](https://github.com/CuriousMagpie)\n- [![@negue](https://avatars.githubusercontent.com/u/842273?s=64&v=4)](https://github.com/negue)\n- [![@gryphonbot](https://avatars.githubusercontent.com/u/48295347?s=64&v=4)](https://github.com/gryphonbot)\n- [![@weblate](https://avatars.githubusercontent.com/u/1607653?s=64&v=4)](https://github.com/weblate)\n- [![@switz](https://avatars.githubusercontent.com/u/990166?s=64&v=4)](https://github.com/switz)\n\n[\\+ 907 contributors](https://github.com/HabitRPG/habitica/graphs/contributors)\n\n## Languages\n\n- [JavaScript52.4%](https://github.com/HabitRPG/habitica/search?l=javascript)\n- [CSS23.7%](https://github.com/HabitRPG/habitica/search?l=css)\n- [Vue23.1%](https://github.com/HabitRPG/habitica/search?l=vue)\n- [SCSS0.7%](https://github.com/HabitRPG/habitica/search?l=scss)\n- [CoffeeScript0.1%](https://github.com/HabitRPG/habitica/search?l=coffeescript)\n- [HTML0.0%](https://github.com/HabitRPG/habitica/search?l=html)","size_bytes":15110},"attached_assets/content-1759071346265.md":{"content":"[![](https://tanstack.com/images/logos/logo-color-100.png)![](https://tanstack.com/images/logos/logo-black.svg)![](https://tanstack.com/images/logos/logo-white.svg)\\\\\n\\\\\nTanStack](https://tanstack.com/)\n\nSearch...\n\n\\+ K\n\n[Follow TanStack on X.com](https://x.com/tan_stack)[Follow TanStack on Bluesky](https://bsky.app/profile/tanstack.com)[Follow TanStack on Instagram](https://instagram.com/tan_stack)\n\nAuto\n\n[Log In](https://tanstack.com/login)\n\n[TanStackStartRC](https://tanstack.com/start)\n\n[Docs](https://tanstack.com/start/latest/docs/framework/react/overview) [Examples](https://tanstack.com/start/latest/docs/framework/react/examples/start-basic) [GitHub](https://github.com/tanstack/router) [Contributors](https://tanstack.com/start/latest/docs/contributors)\n\n[TanStackRouter](https://tanstack.com/router)\n\n[Docs](https://tanstack.com/router/latest/docs/framework/react/overview) [Examples](https://tanstack.com/router/latest/docs/framework/react/examples/kitchen-sink-file-based) [GitHub](https://github.com/tanstack/router) [Contributors](https://tanstack.com/router/latest/docs/contributors)\n\n[TanStackQuery](https://tanstack.com/query)\n\n[Docs](https://tanstack.com/query/latest/docs/framework/react/overview) [Examples](https://tanstack.com/query/latest/docs/framework/react/examples/basic) [GitHub](https://github.com/tanstack/query) [Contributors](https://tanstack.com/query/latest/docs/contributors)\n\n[TanStackTable](https://tanstack.com/table)\n\n[Docs](https://tanstack.com/table/latest/docs/introduction) [Examples](https://tanstack.com/table/latest/docs/framework/react/examples/basic) [Github](https://github.com/tanstack/table) [Contributors](https://tanstack.com/table/latest/docs/contributors)\n\n[TanStackFormnew](https://tanstack.com/form)\n\n[Docs](https://tanstack.com/form/latest/docs) [Examples](https://tanstack.com/form/latest/docs/framework/react/examples/simple) [Github](https://github.com/tanstack/form) [Contributors](https://tanstack.com/form/latest/docs/contributors)\n\n[TanStackDBbeta](https://tanstack.com/db)\n\n[Docs](https://tanstack.com/db/latest/docs) [Github](https://github.com/tanstack/db) [Contributors](https://tanstack.com/db/latest/docs/contributors)\n\n[TanStackVirtual](https://tanstack.com/virtual)\n\n[Docs](https://tanstack.com/virtual/latest/docs/introduction) [Examples](https://tanstack.com/virtual/latest/docs/framework/react/examples/dynamic) [Github](https://github.com/tanstack/virtual) [Contributors](https://tanstack.com/virtual/latest/docs/contributors)\n\n[TanStackPaceralpha](https://tanstack.com/pacer)\n\n[Docs](https://tanstack.com/pacer/latest/docs) [Examples](https://tanstack.com/pacer/latest/docs/framework/react/examples/debounce) [Github](https://github.com/tanstack/pacer) [Contributors](https://tanstack.com/pacer/latest/docs/contributors)\n\n[TanStackStorealpha](https://tanstack.com/store)\n\n[Docs](https://tanstack.com/store/latest/docs) [Examples](https://tanstack.com/store/latest/docs/framework/react/examples/simple) [Github](https://github.com/tanstack/store) [Contributors](https://tanstack.com/store/latest/docs/contributors)\n\n[TanStackRanger](https://tanstack.com/ranger)\n\n[Docs](https://tanstack.com/ranger/latest/docs/overview) [Examples](https://tanstack.com/ranger/latest/docs/framework/react/examples/basic) [Github](https://github.com/tanstack/ranger) [Contributors](https://tanstack.com/ranger/latest/docs/contributors)\n\n[TanStackConfig](https://tanstack.com/config)\n\n[Docs](https://tanstack.com/config/latest/docs) [Github](https://github.com/tanstack/config) [Contributors](https://tanstack.com/config/latest/docs/contributors)\n\n[TanStackDevtoolsalpha](https://tanstack.com/devtools)\n\n[Docs](https://tanstack.com/devtools/latest/docs) [Github](https://github.com/tanstack/devtools) [Contributors](https://tanstack.com/devtools/latest/docs/contributors)\n\n[Maintainers](https://tanstack.com/maintainers) [Partners](https://tanstack.com/partners) [Support](https://tanstack.com/support) [Learn](https://tanstack.com/learn) [StatsBETA](https://tanstack.com/stats/npm) [Discord](https://tlinz.com/discord) [Merch](https://cottonbureau.com/people/tanstack) [Blog](https://tanstack.com/blog) [GitHub](https://github.com/tanstack) [Ethos](https://tanstack.com/ethos) [Brand Guide](https://tanstack.com/brand-guide)\n\n![TanStack Logo](https://tanstack.com/images/logos/splash-light.png)![TanStack Logo](https://tanstack.com/images/logos/splash-dark.png)\n\n# TanStack\n\n## High-quality open-source software forweb developers.\n\nHeadless, type-safe, & powerful utilities for Web Applications, Routing, State Management, Data Visualization, Datagrids/Tables, and more.\n\n[88888888880123456789,012345678901234567890123456789,012345678901234567890123456789,012345678901234567890123456789\\\\\n\\\\\nNPM Downloads](https://www.npmjs.com/org/tanstack) [012345678901234567890123456789,012345678901234567890123456789110,420\\\\\n\\\\\nStars on Github](https://github.com/orgs/TanStack/repositories?q=sort:stars)\n\n0123456789,0123456789012345678901234567892,694\n\nContributors on GitHub\n\n0123456789,012345678901234567890123456789,0123456789012345678901234567891,297,085\n\nDependents on GitHub\n\n[Powered by![Convex Logo](data:image/svg+xml,%3csvg%20height='88.59'%20viewBox='0%200%20516.8%2088.59'%20width='516.8'%20xmlns='http://www.w3.org/2000/svg'%3e%3cg%20fill='%23333'%3e%3cpath%20d='m467.88%2044.55-22.19-29.38h25.72l45.39%2059.77h-25.97l-10.09-13.37-10.09%2013.37h-25.85z'/%3e%3cpath%20d='m490.26%2015.17h25.6l-19.65%2026.17-13-16.77z'/%3e%3cpath%20d='m115.27%2068.32c-6.18-5.25-9.27-13.01-9.27-23.26s3.15-18.01%209.46-23.26c6.3-5.25%2014.92-7.88%2025.85-7.88%204.54%200%208.55.31%2012.04.95%203.49.63%206.83%201.7%2010.02%203.22v16.63c-4.96-2.35-10.59-3.53-16.89-3.53-5.55%200-9.65%201.05-12.29%203.15-2.65%202.1-3.97%205.67-3.97%2010.72s1.3%208.41%203.91%2010.59c2.6%202.19%206.72%203.28%2012.36%203.28%205.97%200%2011.64-1.39%2017.02-4.16v17.4c-5.97%202.69-13.41%204.03-22.32%204.03-11.11%200-19.74-2.63-25.92-7.88z'/%3e%3cpath%20d='m168.89%2045.05c0-10.17%202.9-17.9%208.7-23.2s14.54-7.94%2026.23-7.94%2020.57%202.65%2026.42%207.94c5.84%205.29%208.76%2013.03%208.76%2023.2%200%2020.76-11.73%2031.14-35.18%2031.14-23.29.01-34.93-10.37-34.93-31.14zm43.32%2010.6c1.72-2.19%202.58-5.72%202.58-10.59s-.86-8.3-2.58-10.53-4.52-3.34-8.39-3.34-6.52%201.12-8.2%203.34c-1.68%202.23-2.52%205.74-2.52%2010.53s.84%208.41%202.52%2010.59c1.68%202.19%204.41%203.28%208.2%203.28%203.87%200%206.66-1.1%208.39-3.28z'/%3e%3cpath%20d='m244.52%2015.17h22.19l.63%204.54c2.44-1.68%205.55-3.07%209.33-4.16s7.69-1.64%2011.73-1.64c7.48%200%2012.94%201.85%2016.39%205.55s5.17%209.41%205.17%2017.15v38.33h-23.7v-35.94c0-2.69-.61-4.62-1.83-5.8s-3.26-1.76-6.12-1.76c-1.76%200-3.57.4-5.42%201.2s-3.4%201.83-4.67%203.09v39.21h-23.7z'/%3e%3cpath%20d='m310.03%2015.17h24.71l11.35%2035.05%2011.35-35.05h24.71l-23.58%2059.77h-24.97z'/%3e%3cpath%20d='m389.61%2069.8c-7.12-5.34-10.45-14.61-10.45-24.62s2.65-17.78%208.7-23.33%2015.27-7.94%2026.91-7.94c10.71%200%2019.13%202.48%2025.28%207.44%206.14%204.96%209.22%2011.73%209.22%2020.3v10.47h-45.07c1.12%203.11%202.54%205.36%206.03%206.75s8.36%202.08%2014.59%202.08c3.72%200%207.52-.29%2011.38-.88%201.36-.21%203.6-.54%204.78-.79v14.53c-5.89%201.6-13.74%202.4-22.59%202.4-11.91-.01-21.66-1.07-28.78-6.41zm34.76-30.54c0-2.96-3.41-9.33-10.26-9.33-6.18%200-10.26%206.27-10.26%209.33z'/%3e%3cpath%20d='m55.59%2069.82c13.1-1.43%2025.45-8.29%2032.25-19.74-3.22%2028.32-34.73%2046.22-60.45%2035.23-2.37-1.01-4.41-2.69-5.81-4.85-5.78-8.92-7.68-20.27-4.95-30.57%207.8%2013.23%2023.66%2021.34%2038.96%2019.93z'/%3e%3cpath%20d='m16.15%2041.58c-5.31%2012.06-5.54%2026.18.97%2037.8-22.91-16.94-22.66-53.19-.28-69.96%202.07-1.55%204.53-2.47%207.11-2.61%2010.61-.55%2021.39%203.48%2028.95%2010.99-15.36.15-30.32%209.82-36.75%2023.78z'/%3e%3cpath%20d='m60.31%2021.51c-7.75-10.62-19.88-17.85-33.17-18.07%2025.69-11.46%2057.29%207.12%2060.73%2034.59.32%202.55-.1%205.15-1.25%207.45-4.8%209.58-13.7%2017.01-24.1%2019.76%207.62-13.89%206.68-30.86-2.21-43.73z'/%3e%3c/g%3e%3c/svg%3e)![Convex Logo](data:image/svg+xml,%3csvg%20height='88.59'%20viewBox='0%200%20516.8%2088.59'%20width='516.8'%20xmlns='http://www.w3.org/2000/svg'%3e%3cg%20fill='%23fff'%3e%3cpath%20d='m467.88%2044.55-22.19-29.38h25.72l45.39%2059.77h-25.97l-10.09-13.37-10.09%2013.37h-25.85z'/%3e%3cpath%20d='m490.26%2015.17h25.6l-19.65%2026.17-13-16.77z'/%3e%3cpath%20d='m115.27%2068.32c-6.18-5.25-9.27-13.01-9.27-23.26s3.15-18.01%209.46-23.26c6.3-5.25%2014.92-7.88%2025.85-7.88%204.54%200%208.55.31%2012.04.95%203.49.63%206.83%201.7%2010.02%203.22v16.63c-4.96-2.35-10.59-3.53-16.89-3.53-5.55%200-9.65%201.05-12.29%203.15-2.65%202.1-3.97%205.67-3.97%2010.72s1.3%208.41%203.91%2010.59c2.6%202.19%206.72%203.28%2012.36%203.28%205.97%200%2011.64-1.39%2017.02-4.16v17.4c-5.97%202.69-13.41%204.03-22.32%204.03-11.11%200-19.74-2.63-25.92-7.88z'/%3e%3cpath%20d='m168.89%2045.05c0-10.17%202.9-17.9%208.7-23.2s14.54-7.94%2026.23-7.94%2020.57%202.65%2026.42%207.94c5.84%205.29%208.76%2013.03%208.76%2023.2%200%2020.76-11.73%2031.14-35.18%2031.14-23.29.01-34.93-10.37-34.93-31.14zm43.32%2010.6c1.72-2.19%202.58-5.72%202.58-10.59s-.86-8.3-2.58-10.53-4.52-3.34-8.39-3.34-6.52%201.12-8.2%203.34c-1.68%202.23-2.52%205.74-2.52%2010.53s.84%208.41%202.52%2010.59c1.68%202.19%204.41%203.28%208.2%203.28%203.87%200%206.66-1.1%208.39-3.28z'/%3e%3cpath%20d='m244.52%2015.17h22.19l.63%204.54c2.44-1.68%205.55-3.07%209.33-4.16s7.69-1.64%2011.73-1.64c7.48%200%2012.94%201.85%2016.39%205.55s5.17%209.41%205.17%2017.15v38.33h-23.7v-35.94c0-2.69-.61-4.62-1.83-5.8s-3.26-1.76-6.12-1.76c-1.76%200-3.57.4-5.42%201.2s-3.4%201.83-4.67%203.09v39.21h-23.7z'/%3e%3cpath%20d='m310.03%2015.17h24.71l11.35%2035.05%2011.35-35.05h24.71l-23.58%2059.77h-24.97z'/%3e%3cpath%20d='m389.61%2069.8c-7.12-5.34-10.45-14.61-10.45-24.62s2.65-17.78%208.7-23.33%2015.27-7.94%2026.91-7.94c10.71%200%2019.13%202.48%2025.28%207.44%206.14%204.96%209.22%2011.73%209.22%2020.3v10.47h-45.07c1.12%203.11%202.54%205.36%206.03%206.75s8.36%202.08%2014.59%202.08c3.72%200%207.52-.29%2011.38-.88%201.36-.21%203.6-.54%204.78-.79v14.53c-5.89%201.6-13.74%202.4-22.59%202.4-11.91-.01-21.66-1.07-28.78-6.41zm34.76-30.54c0-2.96-3.41-9.33-10.26-9.33-6.18%200-10.26%206.27-10.26%209.33z'/%3e%3cpath%20d='m55.59%2069.82c13.1-1.43%2025.45-8.29%2032.25-19.74-3.22%2028.32-34.73%2046.22-60.45%2035.23-2.37-1.01-4.41-2.69-5.81-4.85-5.78-8.92-7.68-20.27-4.95-30.57%207.8%2013.23%2023.66%2021.34%2038.96%2019.93z'/%3e%3cpath%20d='m16.15%2041.58c-5.31%2012.06-5.54%2026.18.97%2037.8-22.91-16.94-22.66-53.19-.28-69.96%202.07-1.55%204.53-2.47%207.11-2.61%2010.61-.55%2021.39%203.48%2028.95%2010.99-15.36.15-30.32%209.82-36.75%2023.78z'/%3e%3cpath%20d='m60.31%2021.51c-7.75-10.62-19.88-17.85-33.17-18.07%2025.69-11.46%2057.29%207.12%2060.73%2034.59.32%202.55-.1%205.15-1.25%207.45-4.8%209.58-13.7%2017.01-24.1%2019.76%207.62-13.89%206.68-30.86-2.21-43.73z'/%3e%3c/g%3e%3c/svg%3e)](https://www.convex.dev/?utm_source=tanstack)\n\n### Open Source Libraries\n\n#### Data and State Management\n\n[TanStackStart\\\\\n\\\\\nFull-stack Framework powered by TanStack Router for React and Solid\\\\\n\\\\\nFull-document SSR, Streaming, Server Functions, bundling and more, powered by TanStack Router and Vite - Ready to deploy to your favorite hosting provider.\\\\\n\\\\\nFull-document SSR, Streaming, Server Functions, bundling and more, powered by TanStack Router and Vite - Ready to deploy to your favorite hosting provider.\\\\\n\\\\\nClick to learn more\\\\\n\\\\\nRC](https://tanstack.com/start) [TanStackRouter\\\\\n\\\\\nType-safe Routing for React and Solid applications\\\\\n\\\\\nA powerful React router for client-side and full-stack react applications. Fully type-safe APIs, first-class search-params for managing state in the URL and seamless integration with the existing React ecosystem.\\\\\n\\\\\nA powerful React router for client-side and full-stack react applications. Fully type-safe APIs, first-class search-params for managing state in the URL and seamless integration with the existing React ecosystem.\\\\\n\\\\\nClick to learn more](https://tanstack.com/router) [TanStackQuery\\\\\n\\\\\nPowerful asynchronous state management, server-state utilities and data fetching\\\\\n\\\\\nPowerful asynchronous state management, server-state utilities and data fetching. Fetch, cache, update, and wrangle all forms of async data in your TS/JS, React, Vue, Solid, Svelte & Angular applications all without touching any \"global state\"\\\\\n\\\\\nPowerful asynchronous state management, server-state utilities and data fetching. Fetch, cache, update, and wrangle all forms of async data in your TS/JS, React, Vue, Solid, Svelte & Angular applications all without touching any \"global state\"\\\\\n\\\\\nClick to learn more](https://tanstack.com/query) [TanStackDB\\\\\n\\\\\nA reactive client store for building super fast apps on sync\\\\\n\\\\\nTanStack DB extends TanStack Query with collections, live queries and optimistic mutations that keep your UI reactive, consistent and blazing fast 🔥\\\\\n\\\\\nTanStack DB extends TanStack Query with collections, live queries and optimistic mutations that keep your UI reactive, consistent and blazing fast 🔥\\\\\n\\\\\nClick to learn more\\\\\n\\\\\nbeta](https://tanstack.com/db) [TanStackStore\\\\\n\\\\\nFramework agnostic data store with reactive framework adapters\\\\\n\\\\\nThe immutable-reactive data store that powers the core of TanStack libraries and their framework adapters.\\\\\n\\\\\nThe immutable-reactive data store that powers the core of TanStack libraries and their framework adapters.\\\\\n\\\\\nClick to learn more\\\\\n\\\\\nalpha](https://tanstack.com/store) [TanStackPacer\\\\\n\\\\\nFramework agnostic debouncing, throttling, rate limiting, queuing, and batching utilities\\\\\n\\\\\nOptimize your application's performance with TanStack Pacer's core primitives: Debouncing, Throttling, Rate Limiting, Queuing, and Batching.\\\\\n\\\\\nOptimize your application's performance with TanStack Pacer's core primitives: Debouncing, Throttling, Rate Limiting, Queuing, and Batching.\\\\\n\\\\\nClick to learn more\\\\\n\\\\\nalpha](https://tanstack.com/pacer)\n\n#### Headless UI\n\n[TanStackTable\\\\\n\\\\\nHeadless UI for building powerful tables & datagrids\\\\\n\\\\\nSupercharge your tables or build a datagrid from scratch for TS/JS, React, Vue, Solid, Svelte, Qwik, Angular, and Lit while retaining 100% control over markup and styles.\\\\\n\\\\\nSupercharge your tables or build a datagrid from scratch for TS/JS, React, Vue, Solid, Svelte, Qwik, Angular, and Lit while retaining 100% control over markup and styles.\\\\\n\\\\\nClick to learn more](https://tanstack.com/table) [TanStackForm\\\\\n\\\\\nHeadless UI for building performant and type-safe forms\\\\\n\\\\\nHeadless, performant, and type-safe form state management for TS/JS, React, Vue, Angular, Solid, Lit and Svelte.\\\\\n\\\\\nHeadless, performant, and type-safe form state management for TS/JS, React, Vue, Angular, Solid, Lit and Svelte.\\\\\n\\\\\nClick to learn more\\\\\n\\\\\nnew](https://tanstack.com/form) [TanStackVirtual\\\\\n\\\\\nHeadless UI for Virtualizing Large Element Lists\\\\\n\\\\\nVirtualize only the visible content for massive scrollable DOM nodes at 60FPS in TS/JS, React, Vue, Solid, Svelte, Lit & Angular while retaining 100% control over markup and styles.\\\\\n\\\\\nVirtualize only the visible content for massive scrollable DOM nodes at 60FPS in TS/JS, React, Vue, Solid, Svelte, Lit & Angular while retaining 100% control over markup and styles.\\\\\n\\\\\nClick to learn more](https://tanstack.com/virtual) [TanStackRanger\\\\\n\\\\\nHeadless range and multi-range slider utilities.\\\\\n\\\\\nHeadless, lightweight, and extensible primitives for building range and multi-range sliders.\\\\\n\\\\\nHeadless, lightweight, and extensible primitives for building range and multi-range sliders.\\\\\n\\\\\nClick to learn more](https://tanstack.com/ranger)\n\n#### Other\n\n[TanStackDevtools\\\\\n\\\\\nCentralized devtools panel for TanStack libraries and other custom devtools\\\\\n\\\\\nA unified devtools panel that houses all TanStack devtools and allows you to create and integrate your own custom devtools.\\\\\n\\\\\nA unified devtools panel that houses all TanStack devtools and allows you to create and integrate your own custom devtools.\\\\\n\\\\\nClick to learn more\\\\\n\\\\\nalpha](https://tanstack.com/devtools) [TanStackConfig\\\\\n\\\\\nConfiguration and tools for publishing and maintaining high-quality JavaScript packages\\\\\n\\\\\nOpinionated tooling to lint, build, test, version, and publish JS/TS packages — minimal config, consistent results.\\\\\n\\\\\nOpinionated tooling to lint, build, test, version, and publish JS/TS packages — minimal config, consistent results.\\\\\n\\\\\nClick to learn more](https://tanstack.com/config)\n\n### Partners\n\n[![Code Rabbit](https://tanstack.com/assets/coderabbit-light-DVMJ2jHi.svg)![Code Rabbit](https://tanstack.com/assets/coderabbit-dark-CMcuvjEy.svg)](https://coderabbit.link/tanstack?utm_source=tanstack&via=tanstack)[![Cloudflare](https://tanstack.com/assets/cloudflare-black-CPufaW0B.svg)![Cloudflare](https://tanstack.com/assets/cloudflare-white-DQDB7UaL.svg)](https://www.cloudflare.com/?utm_source=tanstack)[![AG Grid](data:image/svg+xml,%3csvg%20clip-rule='evenodd'%20fill-rule='evenodd'%20stroke-linejoin='round'%20stroke-miterlimit='2'%20viewBox='0%200%20235%2040'%20xmlns='http://www.w3.org/2000/svg'%3e%3cg%20transform='matrix(.635723%200%200%20.635723%20-492.921%20-323.608)'%3e%3cg%20fill-rule='nonzero'%3e%3cpath%20d='m1099.4%20549.4v-12.5h-21.3l-12.5%2012.5z'%20fill='%23ff8b00'/%3e%3cpath%20d='m1123.4%20518.4h-26.7l-12.6%2012.5h39.3z'%20fill='%2355b2c6'/%3e%3cpath%20d='m1053.2%20561.9%206.4-6.4h21.6v12.5h-28z'%20fill='%23f00'/%3e%3cpath%20d='m1057.9%20543.3h13.8l12.6-12.5h-26.4z'%20fill='%23b4bbbf'/%3e%3cpath%20d='m1042.8%20561.9h10.4l12.4-12.5h-22.8z'%20fill='%23b4bbbf'/%3e%3cpath%20d='m1096.7%20518.4-6.4%206.4h-40.8v-12.5h47.2z'%20fill='%23b4bbbf'/%3e%3cpath%20d='m828.6%20559.7h-19.6l-3.4%208.4h-8.6l18.1-42.4h7.5l18.1%2042.4h-8.7zm-2.7-6.7-7.1-17.3-7.1%2017.3z'%20fill='%23031c4c'/%3e%3cpath%20d='m960.1%20541.3c2.5-3.7%208.8-4.1%2011.4-4.1v7.2c-3.2%200-6.4.1-8.3%201.5s-2.9%203.3-2.9%205.6v16.6h-7.8v-30.9h7.5z'%20fill='%23031c4c'/%3e%3c/g%3e%3cpath%20d='m975.8%20537.2h7.8v30.9h-7.8z'%20fill='%23031c4c'/%3e%3cpath%20d='m975.8%20523.4h7.8v9.2h-7.8z'%20fill='%23031c4c'/%3e%3cpath%20d='m1022.3%20523.4v44.7h-7.5l-.2-4.7c-1.1%201.6-2.5%202.9-4.2%203.9-1.7.9-3.8%201.4-6.2%201.4-2.1%200-4.1-.4-5.8-1.1-1.8-.8-3.4-1.8-4.7-3.2s-2.4-3.1-3.1-5c-.8-1.9-1.1-4.1-1.1-6.5s.4-4.6%201.1-6.6c.8-2%201.8-3.7%203.1-5.1s2.9-2.5%204.7-3.3%203.7-1.2%205.8-1.2c2.4%200%204.4.4%206.1%201.3s3.1%202.1%204.2%203.8v-18.3h7.8zm-16.4%2038.6c2.6%200%204.6-.9%206.2-2.6s2.4-4%202.4-6.8-.8-5-2.4-6.8c-1.6-1.7-3.6-2.6-6.2-2.6-2.5%200-4.6.9-6.1%202.6-1.6%201.7-2.4%204-2.4%206.8s.8%205%202.4%206.7c1.6%201.8%203.6%202.7%206.1%202.7'%20fill='%23031c4c'%20fill-rule='nonzero'/%3e%3cpath%20d='m885.8%20544.2h-19.3v6.7h11c-.3%203.4-1.6%206-3.8%208.1-2.2%202-5%203-8.6%203-2%200-3.9-.4-5.5-1.1-1.7-.7-3.1-1.7-4.3-3.1-1.2-1.3-2.1-2.9-2.8-4.8s-1-3.9-1-6.2.3-4.3%201-6.2c.6-1.9%201.6-3.4%202.8-4.8%201.2-1.3%202.6-2.3%204.3-3.1%201.7-.7%203.5-1.1%205.6-1.1%204.2%200%207.4%201%209.6%203l5.2-5.2c-3.9-3-8.9-4.6-14.8-4.6-3.3%200-6.3.5-9%201.6s-5%202.5-6.9%204.4-3.4%204.2-4.4%206.9-1.5%205.7-1.5%208.9.5%206.2%201.6%208.9%202.5%205%204.4%206.9%204.2%203.4%206.9%204.4c2.7%201.1%205.7%201.6%208.9%201.6s6.1-.5%208.7-1.6%204.8-2.5%206.6-4.4%203.2-4.2%204.2-6.9%201.5-5.7%201.5-8.9v-1.3c-.3-.2-.4-.7-.4-1.1'%20fill='%23031c4c'%20fill-rule='nonzero'/%3e%3cpath%20d='m946.8%20544.2h-19.3v6.7h11c-.3%203.4-1.6%206-3.8%208.1-2.2%202-5%203-8.6%203-2%200-3.9-.4-5.5-1.1-1.7-.7-3.1-1.7-4.3-3.1-1.2-1.3-2.1-2.9-2.8-4.8s-1-3.9-1-6.2.3-4.3%201-6.2c.6-1.9%201.6-3.4%202.8-4.8%201.2-1.3%202.6-2.3%204.3-3.1%201.7-.7%203.5-1.1%205.6-1.1%204.2%200%207.4%201%209.6%203l5.2-5.2c-3.9-3-8.9-4.6-14.8-4.6-3.3%200-6.3.5-9%201.6s-5%202.5-6.9%204.4-3.4%204.2-4.4%206.9-1.5%205.7-1.5%208.9.5%206.2%201.6%208.9%202.5%205%204.4%206.9%204.2%203.4%206.9%204.4c2.7%201.1%205.7%201.6%208.9%201.6s6.1-.5%208.7-1.6%204.8-2.5%206.6-4.4%203.2-4.2%204.2-6.9%201.5-5.7%201.5-8.9v-1.3c-.3-.2-.4-.7-.4-1.1'%20fill='%23031c4c'%20fill-rule='nonzero'/%3e%3c/g%3e%3c/svg%3e)![AG Grid](data:image/svg+xml,%3csvg%20clip-rule='evenodd'%20fill-rule='evenodd'%20stroke-linejoin='round'%20stroke-miterlimit='2'%20viewBox='0%200%20235%2040'%20xmlns='http://www.w3.org/2000/svg'%3e%3cg%20transform='matrix(.635723%200%200%20.635723%20-492.921%20-323.608)'%3e%3cg%20fill-rule='nonzero'%3e%3cpath%20d='m1099.4%20549.4v-12.5h-21.3l-12.5%2012.5z'%20fill='%23ff8b00'/%3e%3cpath%20d='m1123.4%20518.4h-26.7l-12.6%2012.5h39.3z'%20fill='%2355b2c6'/%3e%3cpath%20d='m1053.2%20561.9%206.4-6.4h21.6v12.5h-28z'%20fill='%23f00'/%3e%3cpath%20d='m1057.9%20543.3h13.8l12.6-12.5h-26.4z'%20fill='%23b4bbbf'/%3e%3cpath%20d='m1042.8%20561.9h10.4l12.4-12.5h-22.8z'%20fill='%23b4bbbf'/%3e%3cpath%20d='m1096.7%20518.4-6.4%206.4h-40.8v-12.5h47.2z'%20fill='%23b4bbbf'/%3e%3cpath%20d='m828.6%20559.7h-19.6l-3.4%208.4h-8.6l18.1-42.4h7.5l18.1%2042.4h-8.7zm-2.7-6.7-7.1-17.3-7.1%2017.3z'%20fill='%23fff'/%3e%3cpath%20d='m960.1%20541.3c2.5-3.7%208.8-4.1%2011.4-4.1v7.2c-3.2%200-6.4.1-8.3%201.5s-2.9%203.3-2.9%205.6v16.6h-7.8v-30.9h7.5z'%20fill='%23fff'/%3e%3c/g%3e%3cpath%20d='m975.8%20537.2h7.8v30.9h-7.8z'%20fill='%23fff'/%3e%3cpath%20d='m975.8%20523.4h7.8v9.2h-7.8z'%20fill='%23fff'/%3e%3cpath%20d='m1022.3%20523.4v44.7h-7.5l-.2-4.7c-1.1%201.6-2.5%202.9-4.2%203.9-1.7.9-3.8%201.4-6.2%201.4-2.1%200-4.1-.4-5.8-1.1-1.8-.8-3.4-1.8-4.7-3.2s-2.4-3.1-3.1-5c-.8-1.9-1.1-4.1-1.1-6.5s.4-4.6%201.1-6.6c.8-2%201.8-3.7%203.1-5.1s2.9-2.5%204.7-3.3%203.7-1.2%205.8-1.2c2.4%200%204.4.4%206.1%201.3s3.1%202.1%204.2%203.8v-18.3h7.8zm-16.4%2038.6c2.6%200%204.6-.9%206.2-2.6s2.4-4%202.4-6.8-.8-5-2.4-6.8c-1.6-1.7-3.6-2.6-6.2-2.6-2.5%200-4.6.9-6.1%202.6-1.6%201.7-2.4%204-2.4%206.8s.8%205%202.4%206.7c1.6%201.8%203.6%202.7%206.1%202.7'%20fill='%23fff'%20fill-rule='nonzero'/%3e%3cpath%20d='m885.8%20544.2h-19.3v6.7h11c-.3%203.4-1.6%206-3.8%208.1-2.2%202-5%203-8.6%203-2%200-3.9-.4-5.5-1.1-1.7-.7-3.1-1.7-4.3-3.1-1.2-1.3-2.1-2.9-2.8-4.8s-1-3.9-1-6.2.3-4.3%201-6.2c.6-1.9%201.6-3.4%202.8-4.8%201.2-1.3%202.6-2.3%204.3-3.1%201.7-.7%203.5-1.1%205.6-1.1%204.2%200%207.4%201%209.6%203l5.2-5.2c-3.9-3-8.9-4.6-14.8-4.6-3.3%200-6.3.5-9%201.6s-5%202.5-6.9%204.4-3.4%204.2-4.4%206.9-1.5%205.7-1.5%208.9.5%206.2%201.6%208.9%202.5%205%204.4%206.9%204.2%203.4%206.9%204.4c2.7%201.1%205.7%201.6%208.9%201.6s6.1-.5%208.7-1.6%204.8-2.5%206.6-4.4%203.2-4.2%204.2-6.9%201.5-5.7%201.5-8.9v-1.3c-.3-.2-.4-.7-.4-1.1'%20fill='%23fff'%20fill-rule='nonzero'/%3e%3cpath%20d='m946.8%20544.2h-19.3v6.7h11c-.3%203.4-1.6%206-3.8%208.1-2.2%202-5%203-8.6%203-2%200-3.9-.4-5.5-1.1-1.7-.7-3.1-1.7-4.3-3.1-1.2-1.3-2.1-2.9-2.8-4.8s-1-3.9-1-6.2.3-4.3%201-6.2c.6-1.9%201.6-3.4%202.8-4.8%201.2-1.3%202.6-2.3%204.3-3.1%201.7-.7%203.5-1.1%205.6-1.1%204.2%200%207.4%201%209.6%203l5.2-5.2c-3.9-3-8.9-4.6-14.8-4.6-3.3%200-6.3.5-9%201.6s-5%202.5-6.9%204.4-3.4%204.2-4.4%206.9-1.5%205.7-1.5%208.9.5%206.2%201.6%208.9%202.5%205%204.4%206.9%204.2%203.4%206.9%204.4c2.7%201.1%205.7%201.6%208.9%201.6s6.1-.5%208.7-1.6%204.8-2.5%206.6-4.4%203.2-4.2%204.2-6.9%201.5-5.7%201.5-8.9v-1.3c-.3-.2-.4-.7-.4-1.1'%20fill='%23fff'%20fill-rule='nonzero'/%3e%3c/g%3e%3c/svg%3e)](https://ag-grid.com/react-data-grid/?utm_source=reacttable&utm_campaign=githubreacttable)[![Netlify](data:image/svg+xml,%3csvg%20width='512'%20height='209'%20viewBox='0%200%20512%20209'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cg%20clip-path='url(%23clip0_235_8)'%3e%3cpath%20d='M117.436%20207.036V154.604L118.529%20153.51H129.452L130.545%20154.604V207.036L129.452%20208.13H118.529L117.436%20207.036Z'%20fill='%2305BDBA'/%3e%3cpath%20d='M117.436%2053.5225V1.09339L118.529%200H129.452L130.545%201.09339V53.5225L129.452%2054.6159H118.529L117.436%2053.5225Z'%20fill='%2305BDBA'/%3e%3cpath%20d='M69.9539%20169.238H68.4094L60.6869%20161.512V159.967L78.7201%20141.938L86.8976%20141.942L87.9948%20143.031V151.209L69.9539%20169.238Z'%20fill='%2305BDBA'/%3e%3cpath%20d='M69.9462%2038.8917H68.4017L60.6792%2046.6181V48.1626L78.7124%2066.192L86.8899%2066.1882L87.9871%2065.0986V56.9212L69.9462%2038.8917Z'%20fill='%2305BDBA'/%3e%3cpath%20d='M1.09339%2097.5104H75.3711L76.4645%2098.6038V109.526L75.3711%20110.62H1.09339L0%20109.526V98.6038L1.09339%2097.5104Z'%20fill='%2305BDBA'/%3e%3cpath%20d='M440.999%2097.5104H510.91L512.004%2098.6038V109.526L510.91%20110.62H436.633L435.539%20109.526L439.905%2098.6038L440.999%2097.5104Z'%20fill='%2305BDBA'/%3e%3cpath%20d='M212.056%20108.727L210.963%20109.821H177.079L175.986%20110.914C175.986%20113.101%20178.173%20119.657%20186.916%20119.657C190.196%20119.657%20193.472%20118.564%20194.566%20116.377L195.659%20115.284H208.776L209.869%20116.377C208.776%20122.934%20203.313%20132.774%20186.916%20132.774C168.336%20132.774%20159.589%20119.657%20159.589%20104.357C159.589%2089.0576%20168.332%2075.9408%20185.822%2075.9408C203.313%2075.9408%20212.056%2089.0576%20212.056%20104.357V108.731V108.727ZM195.659%2097.7971C195.659%2096.7037%20194.566%2089.0538%20185.822%2089.0538C177.079%2089.0538%20175.986%2096.7037%20175.986%2097.7971L177.079%2098.8905H194.566L195.659%2097.7971Z'%20fill='%23014847'/%3e%3cpath%20d='M242.66%20115.284C242.66%20117.47%20243.753%20118.564%20245.94%20118.564H255.776L256.87%20119.657V130.587L255.776%20131.681H245.94C236.103%20131.681%20227.36%20127.307%20227.36%20115.284V91.2368L226.266%2090.1434H218.617L217.523%2089.05V78.1199L218.617%2077.0265H226.266L227.36%2075.9332V66.0965L228.453%2065.0031H241.57L242.663%2066.0965V75.9332L243.757%2077.0265H255.78L256.874%2078.1199V89.05L255.78%2090.1434H243.757L242.663%2091.2368V115.284H242.66Z'%20fill='%23014847'/%3e%3cpath%20d='M283.1%20131.681H269.983L268.889%20130.587V56.2636L269.983%2055.1702H283.1L284.193%2056.2636V130.587L283.1%20131.681Z'%20fill='%23014847'/%3e%3cpath%20d='M312.61%2068.2871H299.493L298.399%2067.1937V56.2636L299.493%2055.1702H312.61L313.703%2056.2636V67.1937L312.61%2068.2871ZM312.61%20131.681H299.493L298.399%20130.587V78.1237L299.493%2077.0304H312.61L313.703%2078.1237V130.587L312.61%20131.681Z'%20fill='%23014847'/%3e%3cpath%20d='M363.98%2056.2636V67.1937L362.886%2068.2871H353.05C350.863%2068.2871%20349.769%2069.3805%20349.769%2071.5672V75.9408L350.863%2077.0342H361.793L362.886%2078.1276V89.0576L361.793%2090.151H350.863L349.769%2091.2444V130.591L348.676%20131.684H335.559L334.466%20130.591V91.2444L333.372%2090.151H325.723L324.629%2089.0576V78.1276L325.723%2077.0342H333.372L334.466%2075.9408V71.5672C334.466%2059.5438%20343.209%2055.1702%20353.046%2055.1702H362.882L363.976%2056.2636H363.98Z'%20fill='%23014847'/%3e%3cpath%20d='M404.42%20132.774C400.046%20143.704%20395.677%20150.261%20380.373%20150.261H374.906L373.813%20149.167V138.237L374.906%20137.144H380.373C385.836%20137.144%20386.929%20136.05%20388.023%20132.77V131.677L370.536%2089.05V78.1199L371.63%2077.0265H381.466L382.56%2078.1199L395.677%20115.284H396.77L409.887%2078.1199L410.98%2077.0265H420.817L421.91%2078.1199V89.05L404.424%20132.77L404.42%20132.774Z'%20fill='%23014847'/%3e%3cpath%20d='M135.454%20131.681L134.361%20130.587L134.368%2098.9172C134.368%2093.4541%20132.22%2089.2182%20125.625%2089.0806C122.234%2088.9926%20118.354%2089.0729%20114.209%2089.2488L113.59%2089.8834L113.598%20130.587L112.504%20131.681H99.3913L98.2979%20130.587V77.5388L99.3913%2076.4454L128.901%2076.1778C143.685%2076.1778%20149.668%2086.3356%20149.668%2097.8009V130.587L148.575%20131.681H135.454Z'%20fill='%23014847'/%3e%3c/g%3e%3cdefs%3e%3cclipPath%20id='clip0_235_8'%3e%3crect%20width='512'%20height='208.126'%20fill='white'/%3e%3c/clipPath%3e%3c/defs%3e%3c/svg%3e)![Netlify](data:image/svg+xml,%3csvg%20width='512'%20height='209'%20viewBox='0%200%20512%20209'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cg%20clip-path='url(%23clip0_235_26)'%3e%3cpath%20d='M117.436%20207.036V154.604L118.529%20153.51H129.452L130.545%20154.604V207.036L129.452%20208.13H118.529L117.436%20207.036Z'%20fill='%2332E6E2'/%3e%3cpath%20d='M117.436%2053.5225V1.09339L118.529%200H129.452L130.545%201.09339V53.5225L129.452%2054.6159H118.529L117.436%2053.5225Z'%20fill='%2332E6E2'/%3e%3cpath%20d='M69.9539%20169.238H68.4094L60.6869%20161.512V159.967L78.7201%20141.938L86.8976%20141.942L87.9948%20143.031V151.209L69.9539%20169.238Z'%20fill='%2332E6E2'/%3e%3cpath%20d='M69.9462%2038.8917H68.4017L60.6792%2046.6181V48.1626L78.7124%2066.192L86.8899%2066.1882L87.9871%2065.0986V56.9212L69.9462%2038.8917Z'%20fill='%2332E6E2'/%3e%3cpath%20d='M1.09339%2097.5104H75.3711L76.4645%2098.6038V109.526L75.3711%20110.62H1.09339L0%20109.526V98.6038L1.09339%2097.5104Z'%20fill='%2332E6E2'/%3e%3cpath%20d='M440.999%2097.5104H510.91L512.004%2098.6038V109.526L510.91%20110.62H436.633L435.539%20109.526L439.905%2098.6038L440.999%2097.5104Z'%20fill='%2332E6E2'/%3e%3cpath%20d='M212.056%20108.727L210.963%20109.821H177.079L175.986%20110.914C175.986%20113.101%20178.173%20119.657%20186.916%20119.657C190.196%20119.657%20193.472%20118.564%20194.566%20116.377L195.659%20115.284H208.776L209.869%20116.377C208.776%20122.934%20203.313%20132.774%20186.916%20132.774C168.336%20132.774%20159.589%20119.657%20159.589%20104.357C159.589%2089.0576%20168.332%2075.9408%20185.822%2075.9408C203.313%2075.9408%20212.056%2089.0576%20212.056%20104.357V108.731V108.727ZM195.659%2097.7971C195.659%2096.7037%20194.566%2089.0538%20185.822%2089.0538C177.079%2089.0538%20175.986%2096.7037%20175.986%2097.7971L177.079%2098.8905H194.566L195.659%2097.7971Z'%20fill='white'/%3e%3cpath%20d='M242.66%20115.284C242.66%20117.47%20243.753%20118.564%20245.94%20118.564H255.776L256.87%20119.657V130.587L255.776%20131.681H245.94C236.103%20131.681%20227.36%20127.307%20227.36%20115.284V91.2368L226.266%2090.1434H218.617L217.523%2089.05V78.1199L218.617%2077.0265H226.266L227.36%2075.9332V66.0965L228.453%2065.0031H241.57L242.663%2066.0965V75.9332L243.757%2077.0265H255.78L256.874%2078.1199V89.05L255.78%2090.1434H243.757L242.663%2091.2368V115.284H242.66Z'%20fill='white'/%3e%3cpath%20d='M283.1%20131.681H269.983L268.889%20130.587V56.2636L269.983%2055.1702H283.1L284.193%2056.2636V130.587L283.1%20131.681Z'%20fill='white'/%3e%3cpath%20d='M312.61%2068.2871H299.493L298.399%2067.1937V56.2636L299.493%2055.1702H312.61L313.703%2056.2636V67.1937L312.61%2068.2871ZM312.61%20131.681H299.493L298.399%20130.587V78.1237L299.493%2077.0304H312.61L313.703%2078.1237V130.587L312.61%20131.681Z'%20fill='white'/%3e%3cpath%20d='M363.98%2056.2636V67.1937L362.886%2068.2871H353.05C350.863%2068.2871%20349.769%2069.3805%20349.769%2071.5672V75.9408L350.863%2077.0342H361.793L362.886%2078.1276V89.0576L361.793%2090.151H350.863L349.769%2091.2444V130.591L348.676%20131.684H335.559L334.466%20130.591V91.2444L333.372%2090.151H325.723L324.629%2089.0576V78.1276L325.723%2077.0342H333.372L334.466%2075.9408V71.5672C334.466%2059.5438%20343.209%2055.1702%20353.046%2055.1702H362.882L363.976%2056.2636H363.98Z'%20fill='white'/%3e%3cpath%20d='M404.42%20132.774C400.046%20143.704%20395.677%20150.261%20380.373%20150.261H374.906L373.813%20149.167V138.237L374.906%20137.144H380.373C385.836%20137.144%20386.929%20136.05%20388.023%20132.77V131.677L370.536%2089.05V78.1199L371.63%2077.0265H381.466L382.56%2078.1199L395.677%20115.284H396.77L409.887%2078.1199L410.98%2077.0265H420.817L421.91%2078.1199V89.05L404.424%20132.77L404.42%20132.774Z'%20fill='white'/%3e%3cpath%20d='M135.454%20131.681L134.361%20130.587L134.368%2098.9172C134.368%2093.4541%20132.22%2089.2182%20125.625%2089.0806C122.234%2088.9926%20118.354%2089.0729%20114.209%2089.2488L113.59%2089.8834L113.598%20130.587L112.504%20131.681H99.3913L98.2979%20130.587V77.5388L99.3913%2076.4454L128.901%2076.1778C143.685%2076.1778%20149.668%2086.3356%20149.668%2097.8009V130.587L148.575%20131.681H135.454Z'%20fill='white'/%3e%3c/g%3e%3cdefs%3e%3cclipPath%20id='clip0_235_26'%3e%3crect%20width='512'%20height='208.126'%20fill='white'/%3e%3c/clipPath%3e%3c/defs%3e%3c/svg%3e)](https://netlify.com/?utm_source=tanstack)[![Neon](data:image/svg+xml,%3csvg%20width='158'%20height='44'%20viewBox='0%200%20158%2044'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cg%20clip-path='url(%23clip0_8138_23)'%3e%3cpath%20fill-rule='evenodd'%20clip-rule='evenodd'%20d='M0%207.58621C0%203.39646%203.44137%200%207.68651%200H36.8952C41.1404%200%2044.5817%203.39646%2044.5817%207.58621V32.104C44.5817%2036.4386%2039.0241%2038.3197%2036.3287%2034.8976L27.902%2024.1991V37.1724C27.902%2040.9432%2024.8048%2044%2020.9842%2044H7.68651C3.44137%2044%200%2040.6035%200%2036.4138V7.58621ZM7.68651%206.06897C6.83748%206.06897%206.14921%206.74826%206.14921%207.58621V36.4138C6.14921%2037.2517%206.83748%2037.931%207.68651%2037.931H21.2148C21.6393%2037.931%2021.7528%2037.5914%2021.7528%2037.1724V19.7752C21.7528%2015.4407%2027.3104%2013.5594%2030.0059%2016.9816L38.4325%2027.6801V7.58621C38.4325%206.74826%2038.5129%206.06897%2037.6639%206.06897H7.68651Z'%20fill='%2332C0ED'/%3e%3cpath%20fill-rule='evenodd'%20clip-rule='evenodd'%20d='M0%207.58621C0%203.39646%203.44137%200%207.68651%200H36.8952C41.1404%200%2044.5817%203.39646%2044.5817%207.58621V32.104C44.5817%2036.4386%2039.0241%2038.3197%2036.3287%2034.8976L27.902%2024.1991V37.1724C27.902%2040.9432%2024.8048%2044%2020.9842%2044H7.68651C3.44137%2044%200%2040.6035%200%2036.4138V7.58621ZM7.68651%206.06897C6.83748%206.06897%206.14921%206.74826%206.14921%207.58621V36.4138C6.14921%2037.2517%206.83748%2037.931%207.68651%2037.931H21.2148C21.6393%2037.931%2021.7528%2037.5914%2021.7528%2037.1724V19.7752C21.7528%2015.4407%2027.3104%2013.5594%2030.0059%2016.9816L38.4325%2027.6801V7.58621C38.4325%206.74826%2038.5129%206.06897%2037.6639%206.06897H7.68651Z'%20fill='url(%23paint0_linear_8138_23)'/%3e%3cpath%20fill-rule='evenodd'%20clip-rule='evenodd'%20d='M0%207.58621C0%203.39646%203.44137%200%207.68651%200H36.8952C41.1404%200%2044.5817%203.39646%2044.5817%207.58621V32.104C44.5817%2036.4386%2039.0241%2038.3197%2036.3287%2034.8976L27.902%2024.1991V37.1724C27.902%2040.9432%2024.8048%2044%2020.9842%2044H7.68651C3.44137%2044%200%2040.6035%200%2036.4138V7.58621ZM7.68651%206.06897C6.83748%206.06897%206.14921%206.74826%206.14921%207.58621V36.4138C6.14921%2037.2517%206.83748%2037.931%207.68651%2037.931H21.2148C21.6393%2037.931%2021.7528%2037.5914%2021.7528%2037.1724V19.7752C21.7528%2015.4407%2027.3104%2013.5594%2030.0059%2016.9816L38.4325%2027.6801V7.58621C38.4325%206.74826%2038.5129%206.06897%2037.6639%206.06897H7.68651Z'%20fill='url(%23paint1_linear_8138_23)'%20fill-opacity='0.35'/%3e%3cpath%20d='M36.8954%200C41.1406%200%2044.5819%203.39646%2044.5819%207.58621V32.104C44.5819%2036.4386%2039.0243%2038.3197%2036.3289%2034.8976L27.9022%2024.1991V37.1724C27.9022%2040.9432%2024.805%2044%2020.9844%2044C21.4089%2044%2021.753%2043.6604%2021.753%2043.2414V19.7752C21.753%2015.4407%2027.3106%2013.5594%2030.0061%2016.9816L38.4327%2027.6801V1.51724C38.4327%200.679292%2037.7445%200%2036.8954%200Z'%20fill='%2363F655'/%3e%3cpath%20d='M75.1561%2012.9622V24.4706L63.8496%2012.9622H57.9648V31.7844H63.332V19.4155L75.6465%2031.7844H80.5232V12.9622H75.1561Z'%20fill='%231A1A1A'/%3e%3cpath%20d='M90.4724%2027.5898V24.2555H102.487V20.2491H90.4724V17.1569H105.048V12.9622H84.9963V31.7844H105.348V27.5898H90.4724Z'%20fill='%231A1A1A'/%3e%3cpath%20d='M119.61%2032.4029C127.157%2032.4029%20132.061%2028.746%20132.061%2022.3733C132.061%2016.0006%20127.157%2012.3438%20119.61%2012.3438C112.063%2012.3438%20107.187%2016.0006%20107.187%2022.3733C107.187%2028.746%20112.063%2032.4029%20119.61%2032.4029ZM119.61%2027.9393C115.415%2027.9393%20112.826%2025.9226%20112.826%2022.3733C112.826%2018.824%20115.442%2016.8073%20119.61%2016.8073C123.806%2016.8073%20126.394%2018.824%20126.394%2022.3733C126.394%2025.9226%20123.806%2027.9393%20119.61%2027.9393Z'%20fill='%231A1A1A'/%3e%3cpath%20d='M152.632%2012.9622V24.4706L141.326%2012.9622H135.441V31.7844H140.808V19.4155L153.123%2031.7844H157.999V12.9622H152.632Z'%20fill='%231A1A1A'/%3e%3c/g%3e%3cdefs%3e%3clinearGradient%20id='paint0_linear_8138_23'%20x1='44.5818'%20y1='44'%20x2='5.96033'%20y2='-0.503114'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20stop-color='%232EF51C'/%3e%3cstop%20offset='1'%20stop-color='%232EF51C'%20stop-opacity='0'/%3e%3c/linearGradient%3e%3clinearGradient%20id='paint1_linear_8138_23'%20x1='44.5817'%20y1='44'%20x2='18.194'%20y2='33.6003'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20stop-opacity='0.9'/%3e%3cstop%20offset='1'%20stop-color='%231A1A1A'%20stop-opacity='0'/%3e%3c/linearGradient%3e%3cclipPath%20id='clip0_8138_23'%3e%3crect%20width='158'%20height='44'%20fill='white'/%3e%3c/clipPath%3e%3c/defs%3e%3c/svg%3e)![Neon](data:image/svg+xml,%3csvg%20width='158'%20height='44'%20viewBox='0%200%20158%2044'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20fill-rule='evenodd'%20clip-rule='evenodd'%20d='M0%207.58621C0%203.39646%203.44137%200%207.68651%200H36.8952C41.1404%200%2044.5817%203.39646%2044.5817%207.58621V32.104C44.5817%2036.4386%2039.0241%2038.3197%2036.3287%2034.8976L27.902%2024.1991V37.1724C27.902%2040.9432%2024.8048%2044%2020.9842%2044H7.68651C3.44137%2044%200%2040.6035%200%2036.4138V7.58621ZM7.68651%206.06897C6.83748%206.06897%206.14921%206.74826%206.14921%207.58621V36.4138C6.14921%2037.2517%206.83748%2037.931%207.68651%2037.931H21.2148C21.6393%2037.931%2021.7528%2037.5914%2021.7528%2037.1724V19.7752C21.7528%2015.4407%2027.3104%2013.5594%2030.0059%2016.9816L38.4325%2027.6801V7.58621C38.4325%206.74826%2038.5129%206.06897%2037.6639%206.06897H7.68651Z'%20fill='%2312FFF7'/%3e%3cpath%20fill-rule='evenodd'%20clip-rule='evenodd'%20d='M0%207.58621C0%203.39646%203.44137%200%207.68651%200H36.8952C41.1404%200%2044.5817%203.39646%2044.5817%207.58621V32.104C44.5817%2036.4386%2039.0241%2038.3197%2036.3287%2034.8976L27.902%2024.1991V37.1724C27.902%2040.9432%2024.8048%2044%2020.9842%2044H7.68651C3.44137%2044%200%2040.6035%200%2036.4138V7.58621ZM7.68651%206.06897C6.83748%206.06897%206.14921%206.74826%206.14921%207.58621V36.4138C6.14921%2037.2517%206.83748%2037.931%207.68651%2037.931H21.2148C21.6393%2037.931%2021.7528%2037.5914%2021.7528%2037.1724V19.7752C21.7528%2015.4407%2027.3104%2013.5594%2030.0059%2016.9816L38.4325%2027.6801V7.58621C38.4325%206.74826%2038.5129%206.06897%2037.6639%206.06897H7.68651Z'%20fill='url(%23paint0_linear_10558_11751)'/%3e%3cpath%20fill-rule='evenodd'%20clip-rule='evenodd'%20d='M0%207.58621C0%203.39646%203.44137%200%207.68651%200H36.8952C41.1404%200%2044.5817%203.39646%2044.5817%207.58621V32.104C44.5817%2036.4386%2039.0241%2038.3197%2036.3287%2034.8976L27.902%2024.1991V37.1724C27.902%2040.9432%2024.8048%2044%2020.9842%2044H7.68651C3.44137%2044%200%2040.6035%200%2036.4138V7.58621ZM7.68651%206.06897C6.83748%206.06897%206.14921%206.74826%206.14921%207.58621V36.4138C6.14921%2037.2517%206.83748%2037.931%207.68651%2037.931H21.2148C21.6393%2037.931%2021.7528%2037.5914%2021.7528%2037.1724V19.7752C21.7528%2015.4407%2027.3104%2013.5594%2030.0059%2016.9816L38.4325%2027.6801V7.58621C38.4325%206.74826%2038.5129%206.06897%2037.6639%206.06897H7.68651Z'%20fill='url(%23paint1_linear_10558_11751)'/%3e%3cpath%20d='M36.8954%200C41.1406%200%2044.5819%203.39646%2044.5819%207.58621V32.104C44.5819%2036.4386%2039.0243%2038.3197%2036.3289%2034.8976L27.9022%2024.1991V37.1724C27.9022%2040.9432%2024.805%2044%2020.9844%2044C21.4089%2044%2021.753%2043.6604%2021.753%2043.2414V19.7752C21.753%2015.4407%2027.3106%2013.5594%2030.0061%2016.9816L38.4327%2027.6801V1.51724C38.4327%200.679292%2037.7445%200%2036.8954%200Z'%20fill='%23B9FFB3'/%3e%3cpath%20d='M75.1561%2012.9622V24.4706L63.8496%2012.9622H57.9648V31.7844H63.332V19.4155L75.6465%2031.7844H80.5232V12.9622H75.1561Z'%20fill='white'/%3e%3cpath%20d='M90.4725%2027.5898V24.2555H102.487V20.2491H90.4725V17.1569H105.048V12.9622H84.9964V31.7844H105.348V27.5898H90.4725Z'%20fill='white'/%3e%3cpath%20d='M119.61%2032.4029C127.157%2032.4029%20132.061%2028.746%20132.061%2022.3733C132.061%2016.0006%20127.157%2012.3438%20119.61%2012.3438C112.063%2012.3438%20107.187%2016.0006%20107.187%2022.3733C107.187%2028.746%20112.063%2032.4029%20119.61%2032.4029ZM119.61%2027.9393C115.415%2027.9393%20112.826%2025.9226%20112.826%2022.3733C112.826%2018.824%20115.442%2016.8073%20119.61%2016.8073C123.806%2016.8073%20126.394%2018.824%20126.394%2022.3733C126.394%2025.9226%20123.806%2027.9393%20119.61%2027.9393Z'%20fill='white'/%3e%3cpath%20d='M152.632%2012.9622V24.4706L141.326%2012.9622H135.441V31.7844H140.808V19.4155L153.123%2031.7844H157.999V12.9622H152.632Z'%20fill='white'/%3e%3cdefs%3e%3clinearGradient%20id='paint0_linear_10558_11751'%20x1='44.5818'%20y1='44'%20x2='5.96033'%20y2='-0.503116'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20stop-color='%23B9FFB3'/%3e%3cstop%20offset='1'%20stop-color='%23B9FFB3'%20stop-opacity='0'/%3e%3c/linearGradient%3e%3clinearGradient%20id='paint1_linear_10558_11751'%20x1='44.5817'%20y1='44'%20x2='18.194'%20y2='33.6003'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20stop-color='%231A1A1A'%20stop-opacity='0.9'/%3e%3cstop%20offset='1'%20stop-color='%231A1A1A'%20stop-opacity='0'/%3e%3c/linearGradient%3e%3c/defs%3e%3c/svg%3e)](https://neon.tech/?utm_source=tanstack)[![WorkOS](https://tanstack.com/assets/workos-black-DnPI5Ve5.svg)![WorkOS](data:image/svg+xml,%3csvg%20width='880'%20height='168'%20viewBox='0%200%20880%20168'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cg%20clip-path='url(%23clip0_1647_45)'%3e%3cpath%20d='M255.264%2025.3765H279.579L297.086%2097.519C300.332%20111.135%20300.976%20119.244%20300.976%20119.244H301.304C301.304%20119.244%20302.435%20111.306%20305.681%2097.519L322.373%2025.3765H349.934L367.599%2097.519C371.003%20111.622%20371.818%20119.244%20371.818%20119.244H372.304C372.304%20119.244%20372.632%20111.622%20375.866%2097.519L392.729%2025.3765H417.043L386.249%20143.717H359.174L340.536%2072.0612C336.646%2056.4997%20336.318%2049.5334%20336.318%2049.5334H335.99C335.99%2049.5334%20335.661%2056.4997%20332.099%2072.0612L314.592%20143.717H286.715L255.264%2025.3765Z'%20fill='white'/%3e%3cpath%20d='M412.984%20100.726C412.984%2073.6509%20430.491%2056.1442%20456.921%2056.1442C483.181%2056.1442%20500.688%2073.6509%20500.688%20100.726C500.688%20127.958%20483.181%20145.635%20456.921%20145.635C430.503%20145.623%20412.984%20127.958%20412.984%20100.726ZM477.99%20100.726C477.99%2083.2189%20469.565%2073.3227%20456.921%2073.3227C443.305%2073.3227%20435.682%2084.3495%20435.682%20100.726C435.682%20118.561%20444.107%20128.445%20456.921%20128.445C470.537%20128.445%20477.99%20117.418%20477.99%20100.726Z'%20fill='white'/%3e%3cpath%20d='M511.545%2057.4711H533.101V73.3609H533.587C537.319%2065.0938%20546.231%2056.8267%20561.464%2056.8267C564.054%2056.8267%20565.683%2057.155%20566.813%2057.4711V79.0263H566.169C566.169%2079.0263%20564.224%2078.3819%20558.875%2078.3819C542.182%2078.3819%20533.101%2088.266%20533.101%20106.745V143.704H511.545V57.4711Z'%20fill='white'/%3e%3cpath%20d='M576.868%2025.3765H598.423V63.3079C598.423%2085.6776%20598.095%2089.7261%20598.095%2089.7261H598.423L630.519%2057.4723H657.424L619.833%2094.7592L663.442%20143.717H637.984L606.532%20108.047L598.423%20115.986V143.705H576.868V25.3765Z'%20fill='white'/%3e%3cpath%20d='M663.757%2084.9796C663.757%2048.5072%20686.455%2024.1923%20720.496%2024.1923C754.537%2024.1923%20777.235%2048.5072%20777.235%2084.9796C777.235%20121.452%20754.537%20145.767%20720.496%20145.767C686.455%20145.767%20663.757%20121.452%20663.757%2084.9796ZM753.722%2084.9796C753.722%2060.1784%20740.434%2043.474%20720.483%2043.474C700.533%2043.474%20687.257%2060.1784%20687.257%2084.9796C687.257%20109.781%20700.545%20126.485%20720.483%20126.485C740.422%20126.485%20753.722%20109.781%20753.722%2084.9796Z'%20fill='white'/%3e%3cpath%20d='M785.488%20104.326H810.131C810.131%20118.271%20819.699%20126.052%20834.288%20126.052C846.603%20126.052%20855.041%20119.888%20855.041%20111.135C855.041%20101.25%20848.561%2098.6488%20827.966%2094.6003C809.158%2090.868%20789.22%2084.5461%20789.22%2059.9029C789.22%2039.3203%20806.727%2023.7587%20833.473%2023.7587C861.35%2023.7587%20878.541%2038.3477%20878.541%2060.3892H853.898C853.898%2049.6906%20845.631%2043.0405%20833.473%2043.0405C821.158%2043.0405%20813.535%2049.0341%20813.535%2057.7875C813.535%2067.0272%20818.884%2070.5893%20835.419%2073.9934C859.892%2079.1847%20880%2081.9323%20880%20109.165C880%20130.745%20861.192%20145.333%20833.473%20145.333C805.268%20145.333%20785.488%20128.957%20785.488%20104.326Z'%20fill='white'/%3e%3cpath%20d='M0%2084.0003C0%2087.6782%200.967855%2091.356%202.83904%2094.5177L36.7785%20153.299C40.2628%20159.299%2045.5537%20164.203%2052.1351%20166.397C65.1044%20170.72%2078.5253%20165.171%2084.9131%20154.073L93.1076%20139.878L60.7813%2084.0003L94.9143%2024.8321L103.109%2010.6369C105.561%206.37836%20108.851%202.89408%20112.723%200.119568H109.174H60.0715C50.8446%200.119568%2042.3275%205.02337%2037.7463%2013.0243L2.83904%2073.483C0.967855%2076.6446%200%2080.3225%200%2084.0003Z'%20fill='white'/%3e%3cpath%20d='M193.571%2083.9997C193.571%2080.3219%20192.603%2076.644%20190.732%2073.4824L156.341%2013.9271C149.953%202.89352%20136.532%20-2.65551%20123.563%201.60305C116.982%203.79685%20111.691%208.70065%20108.206%2014.7013L100.464%2028.0577L132.79%2083.9997L98.6569%20143.168L90.4624%20157.363C88.0105%20161.557%2084.7198%20165.106%2080.8484%20167.88H84.3972H133.5C142.727%20167.88%20151.244%20162.977%20155.825%20154.976L190.732%2094.5171C192.603%2091.3554%20193.571%2087.6776%20193.571%2083.9997Z'%20fill='white'/%3e%3c/g%3e%3cdefs%3e%3cclipPath%20id='clip0_1647_45'%3e%3crect%20width='880'%20height='168'%20fill='white'/%3e%3c/clipPath%3e%3c/defs%3e%3c/svg%3e)](https://workos.com/?utm_source=tanstack)[![Clerk](https://tanstack.com/assets/clerk-logo-light-BYN-U_0H.svg)![Clerk](https://tanstack.com/assets/clerk-logo-dark-CRE22T_2.svg)](https://go.clerk.com/wOwHtuJ)[![Convex](data:image/svg+xml,%3csvg%20height='88.59'%20viewBox='0%200%20516.8%2088.59'%20width='516.8'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='m467.88%2044.55-22.19-29.38h25.72l45.39%2059.77h-25.97l-10.09-13.37-10.09%2013.37h-25.85z'/%3e%3cpath%20d='m490.26%2015.17h25.6l-19.65%2026.17-13-16.77z'/%3e%3cpath%20d='m115.27%2068.32c-6.18-5.25-9.27-13.01-9.27-23.26s3.15-18.01%209.46-23.26c6.3-5.25%2014.92-7.88%2025.85-7.88%204.54%200%208.55.31%2012.04.95%203.49.63%206.83%201.7%2010.02%203.22v16.63c-4.96-2.35-10.59-3.53-16.89-3.53-5.55%200-9.65%201.05-12.29%203.15-2.65%202.1-3.97%205.67-3.97%2010.72s1.3%208.41%203.91%2010.59c2.6%202.19%206.72%203.28%2012.36%203.28%205.97%200%2011.64-1.39%2017.02-4.16v17.4c-5.97%202.69-13.41%204.03-22.32%204.03-11.11%200-19.74-2.63-25.92-7.88z'/%3e%3cpath%20d='m168.89%2045.05c0-10.17%202.9-17.9%208.7-23.2s14.54-7.94%2026.23-7.94%2020.57%202.65%2026.42%207.94c5.84%205.29%208.76%2013.03%208.76%2023.2%200%2020.76-11.73%2031.14-35.18%2031.14-23.29.01-34.93-10.37-34.93-31.14zm43.32%2010.6c1.72-2.19%202.58-5.72%202.58-10.59s-.86-8.3-2.58-10.53-4.52-3.34-8.39-3.34-6.52%201.12-8.2%203.34c-1.68%202.23-2.52%205.74-2.52%2010.53s.84%208.41%202.52%2010.59c1.68%202.19%204.41%203.28%208.2%203.28%203.87%200%206.66-1.1%208.39-3.28z'/%3e%3cpath%20d='m244.52%2015.17h22.19l.63%204.54c2.44-1.68%205.55-3.07%209.33-4.16s7.69-1.64%2011.73-1.64c7.48%200%2012.94%201.85%2016.39%205.55s5.17%209.41%205.17%2017.15v38.33h-23.7v-35.94c0-2.69-.61-4.62-1.83-5.8s-3.26-1.76-6.12-1.76c-1.76%200-3.57.4-5.42%201.2s-3.4%201.83-4.67%203.09v39.21h-23.7z'/%3e%3cpath%20d='m310.03%2015.17h24.71l11.35%2035.05%2011.35-35.05h24.71l-23.58%2059.77h-24.97z'/%3e%3cpath%20d='m389.61%2069.8c-7.12-5.34-10.45-14.61-10.45-24.62s2.65-17.78%208.7-23.33%2015.27-7.94%2026.91-7.94c10.71%200%2019.13%202.48%2025.28%207.44%206.14%204.96%209.22%2011.73%209.22%2020.3v10.47h-45.07c1.12%203.11%202.54%205.36%206.03%206.75s8.36%202.08%2014.59%202.08c3.72%200%207.52-.29%2011.38-.88%201.36-.21%203.6-.54%204.78-.79v14.53c-5.89%201.6-13.74%202.4-22.59%202.4-11.91-.01-21.66-1.07-28.78-6.41zm34.76-30.54c0-2.96-3.41-9.33-10.26-9.33-6.18%200-10.26%206.27-10.26%209.33z'/%3e%3cpath%20d='m55.59%2069.82c13.1-1.43%2025.45-8.29%2032.25-19.74-3.22%2028.32-34.73%2046.22-60.45%2035.23-2.37-1.01-4.41-2.69-5.81-4.85-5.78-8.92-7.68-20.27-4.95-30.57%207.8%2013.23%2023.66%2021.34%2038.96%2019.93z'%20fill='%23f3b01c'/%3e%3cpath%20d='m16.15%2041.58c-5.31%2012.06-5.54%2026.18.97%2037.8-22.91-16.94-22.66-53.19-.28-69.96%202.07-1.55%204.53-2.47%207.11-2.61%2010.61-.55%2021.39%203.48%2028.95%2010.99-15.36.15-30.32%209.82-36.75%2023.78z'%20fill='%238d2676'/%3e%3cpath%20d='m60.31%2021.51c-7.75-10.62-19.88-17.85-33.17-18.07%2025.69-11.46%2057.29%207.12%2060.73%2034.59.32%202.55-.1%205.15-1.25%207.45-4.8%209.58-13.7%2017.01-24.1%2019.76%207.62-13.89%206.68-30.86-2.21-43.73z'%20fill='%23ee342f'/%3e%3c/svg%3e)![Convex](data:image/svg+xml,%3csvg%20height='88.59'%20viewBox='0%200%20516.8%2088.59'%20width='516.8'%20xmlns='http://www.w3.org/2000/svg'%3e%3cg%20fill='%23fff'%3e%3cpath%20d='m467.88%2044.55-22.19-29.38h25.72l45.39%2059.77h-25.97l-10.09-13.37-10.09%2013.37h-25.85z'/%3e%3cpath%20d='m490.26%2015.17h25.6l-19.65%2026.17-13-16.77z'/%3e%3cpath%20d='m115.27%2068.32c-6.18-5.25-9.27-13.01-9.27-23.26s3.15-18.01%209.46-23.26c6.3-5.25%2014.92-7.88%2025.85-7.88%204.54%200%208.55.31%2012.04.95%203.49.63%206.83%201.7%2010.02%203.22v16.63c-4.96-2.35-10.59-3.53-16.89-3.53-5.55%200-9.65%201.05-12.29%203.15-2.65%202.1-3.97%205.67-3.97%2010.72s1.3%208.41%203.91%2010.59c2.6%202.19%206.72%203.28%2012.36%203.28%205.97%200%2011.64-1.39%2017.02-4.16v17.4c-5.97%202.69-13.41%204.03-22.32%204.03-11.11%200-19.74-2.63-25.92-7.88z'/%3e%3cpath%20d='m168.89%2045.05c0-10.17%202.9-17.9%208.7-23.2s14.54-7.94%2026.23-7.94%2020.57%202.65%2026.42%207.94c5.84%205.29%208.76%2013.03%208.76%2023.2%200%2020.76-11.73%2031.14-35.18%2031.14-23.29.01-34.93-10.37-34.93-31.14zm43.32%2010.6c1.72-2.19%202.58-5.72%202.58-10.59s-.86-8.3-2.58-10.53-4.52-3.34-8.39-3.34-6.52%201.12-8.2%203.34c-1.68%202.23-2.52%205.74-2.52%2010.53s.84%208.41%202.52%2010.59c1.68%202.19%204.41%203.28%208.2%203.28%203.87%200%206.66-1.1%208.39-3.28z'/%3e%3cpath%20d='m244.52%2015.17h22.19l.63%204.54c2.44-1.68%205.55-3.07%209.33-4.16s7.69-1.64%2011.73-1.64c7.48%200%2012.94%201.85%2016.39%205.55s5.17%209.41%205.17%2017.15v38.33h-23.7v-35.94c0-2.69-.61-4.62-1.83-5.8s-3.26-1.76-6.12-1.76c-1.76%200-3.57.4-5.42%201.2s-3.4%201.83-4.67%203.09v39.21h-23.7z'/%3e%3cpath%20d='m310.03%2015.17h24.71l11.35%2035.05%2011.35-35.05h24.71l-23.58%2059.77h-24.97z'/%3e%3cpath%20d='m389.61%2069.8c-7.12-5.34-10.45-14.61-10.45-24.62s2.65-17.78%208.7-23.33%2015.27-7.94%2026.91-7.94c10.71%200%2019.13%202.48%2025.28%207.44%206.14%204.96%209.22%2011.73%209.22%2020.3v10.47h-45.07c1.12%203.11%202.54%205.36%206.03%206.75s8.36%202.08%2014.59%202.08c3.72%200%207.52-.29%2011.38-.88%201.36-.21%203.6-.54%204.78-.79v14.53c-5.89%201.6-13.74%202.4-22.59%202.4-11.91-.01-21.66-1.07-28.78-6.41zm34.76-30.54c0-2.96-3.41-9.33-10.26-9.33-6.18%200-10.26%206.27-10.26%209.33z'/%3e%3cpath%20d='m55.59%2069.82c13.1-1.43%2025.45-8.29%2032.25-19.74-3.22%2028.32-34.73%2046.22-60.45%2035.23-2.37-1.01-4.41-2.69-5.81-4.85-5.78-8.92-7.68-20.27-4.95-30.57%207.8%2013.23%2023.66%2021.34%2038.96%2019.93z'/%3e%3cpath%20d='m16.15%2041.58c-5.31%2012.06-5.54%2026.18.97%2037.8-22.91-16.94-22.66-53.19-.28-69.96%202.07-1.55%204.53-2.47%207.11-2.61%2010.61-.55%2021.39%203.48%2028.95%2010.99-15.36.15-30.32%209.82-36.75%2023.78z'/%3e%3cpath%20d='m60.31%2021.51c-7.75-10.62-19.88-17.85-33.17-18.07%2025.69-11.46%2057.29%207.12%2060.73%2034.59.32%202.55-.1%205.15-1.25%207.45-4.8%209.58-13.7%2017.01-24.1%2019.76%207.62-13.89%206.68-30.86-2.21-43.73z'/%3e%3c/g%3e%3c/svg%3e)](https://convex.dev/?utm_source=tanstack)[![Electric](https://tanstack.com/assets/electric-light-C-5MDda4.svg)![Electric](https://tanstack.com/assets/electric-dark-Bfu2Vl2j.svg)](https://electric-sql.com/)[![Sentry](data:image/svg+xml,%3csvg%20height='119'%20viewBox='0%200%20222%2066'%20width='400'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='m29%202.26a4.67%204.67%200%200%200%20-8%200l-6.58%2011.27a32.21%2032.21%200%200%201%2017.75%2026.66h-4.62a27.68%2027.68%200%200%200%20-15.46-22.72l-6.09%2010.53a15.92%2015.92%200%200%201%209.23%2012.17h-10.61a.76.76%200%200%201%20-.62-1.11l2.94-5a10.74%2010.74%200%200%200%20-3.36-1.9l-2.91%205a4.54%204.54%200%200%200%201.69%206.24%204.66%204.66%200%200%200%202.26.6h14.53a19.4%2019.4%200%200%200%20-8-17.31l2.31-4a23.87%2023.87%200%200%201%2010.3%2021.31h12.31a35.88%2035.88%200%200%200%20-16.41-31.8l4.67-8a.77.77%200%200%201%201.05-.27c.53.29%2020.29%2034.77%2020.66%2035.17a.76.76%200%200%201%20-.68%201.13h-4.76q.09%201.91%200%203.81h4.78a4.59%204.59%200%200%200%204.62-4.61%204.49%204.49%200%200%200%20-.62-2.28zm95.32%2026.02-14.76-19.06h-3.68v25.55h3.73v-19.58l15.18%2019.58h3.26v-25.55h-3.73zm-37.17-4.74h13.23v-3.32h-13.24v-7.69h14.93v-3.32h-18.73v25.56h18.92v-3.32h-15.12zm-15.56-3.24c-5.15-1.24-6.59-2.22-6.59-4.6%200-2.14%201.89-3.59%204.71-3.59a12.06%2012.06%200%200%201%207.07%202.55l2-2.83a14.1%2014.1%200%200%200%20-9-3c-5.06%200-8.59%203-8.59%207.27%200%204.6%203%206.19%208.46%207.52%204.86%201.12%206.35%202.16%206.35%204.49s-2%203.77-5.09%203.77a12.34%2012.34%200%200%201%20-8.3-3.26l-2.25%202.69a15.94%2015.94%200%200%200%2010.42%203.85c5.48%200%209-2.95%209-7.51-.03-3.86-2.31-5.93-8.19-7.35zm124.11-11.08-7.69%2012-7.64-12h-4.46l10.09%2015.45v10.11h3.84v-10.23l10.16-15.33zm-64.63%203.46h8.37v22.1h3.84v-22.1h8.37v-3.46h-20.57zm38.34%2012.12c3.86-1.07%206-3.77%206-7.63%200-4.91-3.59-8-9.38-8h-11.36v25.59h3.8v-9.18h6.45l6.48%209.2h4.44l-7-9.82zm-10.95-2.5v-9.7h7.17c3.74%200%205.88%201.77%205.88%204.84s-2.29%204.86-5.84%204.86z'%20fill='%23362d59'%20transform='translate(11%2011)'/%3e%3c/svg%3e)![Sentry](data:image/svg+xml,%3csvg%20height='119'%20viewBox='0%200%20222%2066'%20width='400'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='m29%202.26a4.67%204.67%200%200%200%20-8%200l-6.58%2011.27a32.21%2032.21%200%200%201%2017.75%2026.66h-4.62a27.68%2027.68%200%200%200%20-15.46-22.72l-6.09%2010.53a15.92%2015.92%200%200%201%209.23%2012.17h-10.61a.76.76%200%200%201%20-.62-1.11l2.94-5a10.74%2010.74%200%200%200%20-3.36-1.9l-2.91%205a4.54%204.54%200%200%200%201.69%206.24%204.66%204.66%200%200%200%202.26.6h14.53a19.4%2019.4%200%200%200%20-8-17.31l2.31-4a23.87%2023.87%200%200%201%2010.3%2021.31h12.31a35.88%2035.88%200%200%200%20-16.41-31.8l4.67-8a.77.77%200%200%201%201.05-.27c.53.29%2020.29%2034.77%2020.66%2035.17a.76.76%200%200%201%20-.68%201.13h-4.76q.09%201.91%200%203.81h4.78a4.59%204.59%200%200%200%204.62-4.61%204.49%204.49%200%200%200%20-.62-2.28zm95.32%2026.02-14.76-19.06h-3.68v25.55h3.73v-19.58l15.18%2019.58h3.26v-25.55h-3.73zm-37.17-4.74h13.23v-3.32h-13.24v-7.69h14.93v-3.32h-18.73v25.56h18.92v-3.32h-15.12zm-15.56-3.24c-5.15-1.24-6.59-2.22-6.59-4.6%200-2.14%201.89-3.59%204.71-3.59a12.06%2012.06%200%200%201%207.07%202.55l2-2.83a14.1%2014.1%200%200%200%20-9-3c-5.06%200-8.59%203-8.59%207.27%200%204.6%203%206.19%208.46%207.52%204.86%201.12%206.35%202.16%206.35%204.49s-2%203.77-5.09%203.77a12.34%2012.34%200%200%201%20-8.3-3.26l-2.25%202.69a15.94%2015.94%200%200%200%2010.42%203.85c5.48%200%209-2.95%209-7.51-.03-3.86-2.31-5.93-8.19-7.35zm124.11-11.08-7.69%2012-7.64-12h-4.46l10.09%2015.45v10.11h3.84v-10.23l10.16-15.33zm-64.63%203.46h8.37v22.1h3.84v-22.1h8.37v-3.46h-20.57zm38.34%2012.12c3.86-1.07%206-3.77%206-7.63%200-4.91-3.59-8-9.38-8h-11.36v25.59h3.8v-9.18h6.45l6.48%209.2h4.44l-7-9.82zm-10.95-2.5v-9.7h7.17c3.74%200%205.88%201.77%205.88%204.84s-2.29%204.86-5.84%204.86z'%20fill='%23fff'%20transform='translate(11%2011)'/%3e%3c/svg%3e)](https://sentry.io/?utm_source=tanstack)[![Prisma](https://tanstack.com/assets/prisma-light-Cloa3Onm.svg)![Prisma](https://tanstack.com/assets/prisma-dark-DwgDxLwn.svg)](https://www.prisma.io/?utm_source=tanstack&via=tanstack)[![Strapi](https://tanstack.com/assets/strapi-light-6x7linao.svg)![Strapi](https://tanstack.com/assets/strapi-dark-CQ84tQTk.svg)](https://strapi.link/tanstack-start)[![Unkey](data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='93'%20height='40'%20viewBox='0%200%2093%2040'%20%3e%3cpath%20d='M10.8%2030.3C4.8%2030.3%201.38%2027.12%201.38%2021.66V9.9H4.59V21.45C4.59%2025.5%206.39%2027.18%2010.8%2027.18C15.21%2027.18%2017.01%2025.5%2017.01%2021.45V9.9H20.25V21.66C20.25%2027.12%2016.83%2030.3%2010.8%2030.3ZM26.3611%2030H23.1211V15.09H26.0911V19.71H26.3011C26.7511%2017.19%2028.7311%2014.79%2032.5111%2014.79C36.6511%2014.79%2038.6911%2017.58%2038.6911%2021.03V30H35.4511V21.9C35.4511%2019.11%2034.1911%2017.7%2031.1011%2017.7C27.8311%2017.7%2026.3611%2019.38%2026.3611%2022.62V30ZM44.8181%2030H41.5781V9.9H44.8181V21H49.0781L53.5481%2015.09H57.3281L51.7181%2022.26L57.2981%2030H53.4881L49.0781%2023.91H44.8181V30ZM66.4219%2030.3C61.5319%2030.3%2058.3219%2027.54%2058.3219%2022.56C58.3219%2017.91%2061.5019%2014.79%2066.3619%2014.79C70.9819%2014.79%2074.1319%2017.34%2074.1319%2021.87C74.1319%2022.41%2074.1019%2022.83%2074.0119%2023.28H61.3519C61.4719%2026.16%2062.8819%2027.69%2066.3319%2027.69C69.4519%2027.69%2070.7419%2026.67%2070.7419%2024.9V24.66H73.9819V24.93C73.9819%2028.11%2070.8619%2030.3%2066.4219%2030.3ZM66.3019%2017.34C63.0019%2017.34%2061.5619%2018.81%2061.3819%2021.48H71.0719V21.42C71.0719%2018.66%2069.4819%2017.34%2066.3019%2017.34ZM78.9586%2035.1H76.8286V32.16H79.7386C81.0586%2032.16%2081.5986%2031.8%2082.0486%2030.78L82.4086%2030L75.0586%2015.09H78.6886L82.4986%2023.01L83.9686%2026.58H84.2086L85.6186%2022.98L89.1286%2015.09H92.6986L84.9286%2031.62C83.6986%2034.29%2082.0186%2035.1%2078.9586%2035.1Z'%20fill='black'%20/%3e%3c/svg%3e)![Unkey](data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='93'%20height='40'%20viewBox='0%200%2093%2040'%20%3e%3cpath%20d='M10.8%2030.3C4.8%2030.3%201.38%2027.12%201.38%2021.66V9.9H4.59V21.45C4.59%2025.5%206.39%2027.18%2010.8%2027.18C15.21%2027.18%2017.01%2025.5%2017.01%2021.45V9.9H20.25V21.66C20.25%2027.12%2016.83%2030.3%2010.8%2030.3ZM26.3611%2030H23.1211V15.09H26.0911V19.71H26.3011C26.7511%2017.19%2028.7311%2014.79%2032.5111%2014.79C36.6511%2014.79%2038.6911%2017.58%2038.6911%2021.03V30H35.4511V21.9C35.4511%2019.11%2034.1911%2017.7%2031.1011%2017.7C27.8311%2017.7%2026.3611%2019.38%2026.3611%2022.62V30ZM44.8181%2030H41.5781V9.9H44.8181V21H49.0781L53.5481%2015.09H57.3281L51.7181%2022.26L57.2981%2030H53.4881L49.0781%2023.91H44.8181V30ZM66.4219%2030.3C61.5319%2030.3%2058.3219%2027.54%2058.3219%2022.56C58.3219%2017.91%2061.5019%2014.79%2066.3619%2014.79C70.9819%2014.79%2074.1319%2017.34%2074.1319%2021.87C74.1319%2022.41%2074.1019%2022.83%2074.0119%2023.28H61.3519C61.4719%2026.16%2062.8819%2027.69%2066.3319%2027.69C69.4519%2027.69%2070.7419%2026.67%2070.7419%2024.9V24.66H73.9819V24.93C73.9819%2028.11%2070.8619%2030.3%2066.4219%2030.3ZM66.3019%2017.34C63.0019%2017.34%2061.5619%2018.81%2061.3819%2021.48H71.0719V21.42C71.0719%2018.66%2069.4819%2017.34%2066.3019%2017.34ZM78.9586%2035.1H76.8286V32.16H79.7386C81.0586%2032.16%2081.5986%2031.8%2082.0486%2030.78L82.4086%2030L75.0586%2015.09H78.6886L82.4986%2023.01L83.9686%2026.58H84.2086L85.6186%2022.98L89.1286%2015.09H92.6986L84.9286%2031.62C83.6986%2034.29%2082.0186%2035.1%2078.9586%2035.1Z'%20fill='white'%20/%3e%3c/svg%3e)](https://www.unkey.com/?utm_source=tanstack)[![UI.dev](https://tanstack.com/assets/bytes-uidotdev-BrGiV4zs.png)](https://bytes.dev/?utm_source-tanstack&utm_campaign=tanstack)[![Nozzle.io](https://tanstack.com/assets/nozzle-BGvMJZhc.png)](https://nozzle.io/?utm_source=tanstack&utm_campaign=tanstack)\n\n[View Previous Partners →](https://tanstack.com/partners?status=inactive)\n\n### Courses\n\n[The Official TanStack React Query Course\\\\\n\\\\\nLearn how to build enterprise quality apps with TanStack's React Query the easy way with our brand new course.\\\\\n\\\\\nCheck it out →](https://query.gg/?s=tanstack)\n\n### OSS Sponsors\n\n[Become a Sponsor!](https://github.com/sponsors/tannerlinsley)\n\nSponsors get special perks like **private discord channels, priority issue requests, direct support and even course vouchers**!\n\n### Core Maintainers\n\n[![Avatar of Tanner Linsley](https://github.com/tannerlinsley.png)\\\\\n\\\\\nReactSolid\\\\\n\\\\\nArchitectureCore APIDocumentation](https://github.com/tannerlinsley)\n\nTanner Linsley\n\n[🌴 Start](https://tanstack.com/start/latest/docs/contributors \"View all contributors for TanStack Start\") [🌴 Router](https://tanstack.com/router/latest/docs/contributors \"View all contributors for TanStack Router\") +8 more\n\n[github](https://github.com/tannerlinsley)[twitter](https://x.com/tannerlinsley)[bluesky](https://bsky.app/profile/tannerlinsley.com)[website](https://tannerlinsley.com/)\n\n[![Avatar of Dominik Dorfmeister](https://github.com/tkdodo.png)\\\\\n\\\\\nReact\\\\\n\\\\\nCore APITypeScriptDocumentation](https://github.com/tkdodo)\n\nDominik Dorfmeister\n\n[🌴 Query](https://tanstack.com/query/latest/docs/contributors \"View all contributors for TanStack Query\")\n\n[github](https://github.com/tkdodo)[bluesky](https://bsky.app/profile/tkdodo.eu)[website](https://tkdodo.eu/)\n\n[![Avatar of Corbin Crutchley](https://github.com/crutchcorn.png)\\\\\n\\\\\nReactSolidVueAngular\\\\\n\\\\\nFormsValidationState Management](https://github.com/crutchcorn)\n\nCorbin Crutchley\n\n[🌴 Form](https://tanstack.com/form/latest/docs/contributors \"View all contributors for TanStack Form\") [🌴 Store](https://tanstack.com/store/latest/docs/contributors \"View all contributors for TanStack Store\") +1 more\n\n[github](https://github.com/crutchcorn)[twitter](https://x.com/crutchcorn)[bluesky](https://bsky.app/profile/crutchcorn.dev)[website](https://playfulprogramming.com/people/crutchcorn)\n\n[![Avatar of Manuel Schiller](https://github.com/schiller-manuel.png)\\\\\n\\\\\nReact\\\\\n\\\\\nArchitectureCore APIDocumentation](https://github.com/schiller-manuel)\n\nManuel Schiller\n\n[🌴 Start](https://tanstack.com/start/latest/docs/contributors \"View all contributors for TanStack Start\") [🌴 Router](https://tanstack.com/router/latest/docs/contributors \"View all contributors for TanStack Router\")\n\n[github](https://github.com/schiller-manuel)[twitter](https://x.com/schanuelmiller)[bluesky](https://bsky.app/profile/manuelschiller.bsky.social)\n\n[![Avatar of Kevin Van Cott](https://github.com/kevinvandy.png)\\\\\n\\\\\nReactSolidSvelte\\\\\n\\\\\nTablesData GridsDashboards](https://github.com/kevinvandy)\n\nKevin Van Cott\n\n[🌴 Pacer](https://tanstack.com/pacer/latest/docs/contributors \"View all contributors for TanStack Pacer\") [🌴 Table](https://tanstack.com/table/latest/docs/contributors \"View all contributors for TanStack Table\")\n\n[github](https://github.com/kevinvandy)[twitter](https://x.com/kevinvancott)[bluesky](https://bsky.app/profile/kevinvancott.dev)[website](https://kevinvancott.dev/)\n\n[![Avatar of Jack Herrington](https://github.com/jherr.png)\\\\\n\\\\\nReact\\\\\n\\\\\nTemplates](https://github.com/jherr)\n\nJack Herrington\n\nCreate TS Router App\n\n[github](https://github.com/jherr)\n\n[![Avatar of Sean Cassiere](https://github.com/seancassiere.png)\\\\\n\\\\\nReact\\\\\n\\\\\nArchitectureCore APIDocumentation](https://github.com/seancassiere)\n\nSean Cassiere\n\n[🌴 Start](https://tanstack.com/start/latest/docs/contributors \"View all contributors for TanStack Start\") [🌴 Router](https://tanstack.com/router/latest/docs/contributors \"View all contributors for TanStack Router\")\n\n[github](https://github.com/seancassiere)[twitter](https://x.com/seancassiere)[bluesky](https://bsky.app/profile/seancassiere.com)[website](https://seancassiere.com/)\n\n[![Avatar of Chris Horobin](https://github.com/chorobin.png)\\\\\n\\\\\nReact\\\\\n\\\\\nTypeScript](https://github.com/chorobin)\n\nChris Horobin\n\n[🌴 Start](https://tanstack.com/start/latest/docs/contributors \"View all contributors for TanStack Start\") [🌴 Router](https://tanstack.com/router/latest/docs/contributors \"View all contributors for TanStack Router\")\n\n[github](https://github.com/chorobin)[twitter](https://x.com/c_horobin)[bluesky](https://bsky.app/profile/chorobin.bsky.social)\n\n[![Avatar of Damian Pieczynski](https://github.com/piecyk.png)\\\\\n\\\\\nReact\\\\\n\\\\\nVirtualizationPerformance](https://github.com/piecyk)\n\nDamian Pieczynski\n\n[🌴 Virtual](https://tanstack.com/virtual/latest/docs/contributors \"View all contributors for TanStack Virtual\")\n\n[github](https://github.com/piecyk)\n\n[![Avatar of Kyle Mathews](https://github.com/KyleAMathews.png)\\\\\n\\\\\nReact\\\\\n\\\\\nSync Engines](https://github.com/KyleAMathews)\n\nKyle Mathews\n\n[🌴 DB](https://tanstack.com/db/latest/docs/contributors \"View all contributors for TanStack DB\")\n\n[github](https://github.com/KyleAMathews)\n\n[![Avatar of Lachlan Collins](https://github.com/lachlancollins.png)\\\\\n\\\\\nReactSvelte\\\\\n\\\\\nArchitecture](https://github.com/lachlancollins)\n\nLachlan Collins\n\n[🌴 Config](https://tanstack.com/config/latest/docs/contributors \"View all contributors for TanStack Config\") [🌴 Query](https://tanstack.com/query/latest/docs/contributors \"View all contributors for TanStack Query\")\n\n[github](https://github.com/lachlancollins)\n\n[![Avatar of Sam Willis](https://github.com/samwillis.png)\\\\\n\\\\\nReact\\\\\n\\\\\nSync EnginesIncremental View Maintenance](https://github.com/samwillis)\n\nSam Willis\n\n[🌴 DB](https://tanstack.com/db/latest/docs/contributors \"View all contributors for TanStack DB\")\n\n[github](https://github.com/samwillis)\n\nAn ad on an open source project?What is this, 1999?\n\nPlease... TanStack is 100% privately owned, with no paid products, venture capital, or acquisition plans. We're a small team dedicated to creating software used by millions daily. What did you expect?\n\n[Check out our ethos](https://tanstack.com/ethos) to learn more about how we plan on sticking around (and staying relevant) for the long-haul.\n\n![Discord Logo](data:image/svg+xml,%3csvg%20height='200'%20viewBox='0%200%20175%20200'%20width='175'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='m154.5%200c11.3%200%2020.5%209.2%2020.5%2020.6v179.4l-21.5-19-12.1-11.2-12.8-11.9%205.3%2018.5h-113.4c-11.3%200-20.5-9.2-20.5-20.6v-135.2c0-11.4%209.2-20.6%2020.5-20.6zm-82.3%2046.599169s-13.7-.299169-28.1%2010.500831c0%200-14.4%2026.1-14.4%2058.3%200%200%208.4%2014.5%2030.5%2015.2%200%200%203.7-4.5%206.7-8.3-12.4046512-3.711628-17.2724716-11.430178-17.492173-11.787173l-.007827-.012827s1%20.7%202.8%201.7c.1.1.2.2.4.3.3.2.6.3.9.5%202.5%201.4%205%202.5%207.3%203.4%204.1%201.6%209%203.2%2014.7%204.3%207.5%201.4%2016.3%201.9%2025.9.1%204.7-.8%209.5-2.2%2014.5-4.3%203.5-1.3%207.4-3.2%2011.5-5.9%200%200-5%208.2-18.1%2011.9%203%203.8%206.6%208.1%206.6%208.1%2022.1-.7%2030.6-15.2%2030.6-15.2%200-32.2-14.4-58.3-14.4-58.3-14.4-10.8-28.1-10.500831-28.1-10.500831l-1.4%201.600831c16.653061%205.0938776%2024.573761%2012.3948355%2024.890119%2012.6907122l.009881.0092878c-10.4-5.7-20.6-8.5-30.1-9.6-7.2-.8-14.1-.6-20.2.2-.6%200-1.1.1-1.7.2-3.5.3-12%201.6-22.7%206.3-3.7%201.7-5.9%202.9-5.9%202.9s8.3-7.9%2026.3-13.1zm-2.8%2037.300831c5.7%200%2010.3%205%2010.2%2011.1%200%206.1-4.5%2011.1-10.2%2011.1-5.6%200-10.2-5-10.2-11.1s4.5-11.1%2010.2-11.1zm36.5%200c5.7%200%2010.2%205%2010.2%2011.1s-4.5%2011.1-10.2%2011.1c-5.6%200-10.2-5-10.2-11.1s4.5-11.1%2010.2-11.1z'%20fill='%23fff'/%3e%3c/svg%3e)\n\n### TanStack on Discord\n\nThe official TanStack community to ask questions, network and make new friends and get lightning fast news about what's coming next for TanStack!\n\n[Join TanStack Discord](https://discord.com/invite/WrRKjPJ)\n\n### Subscribe to Bytes\n\n![Bytes Logo](https://tanstack.com/assets/bytes-DmvnG3ZO.svg)\n\n### The Best JavaScript Newsletter\n\nSubscribe\n\nJoin over 100,000 devs\n\n[Blog](https://tanstack.com/blog)\n\n[@Tan\\_Stack on X.com](https://x.com/tan_stack)\n\n[@TannerLinsley on X.com](https://twitter.com/tannerlinsley)\n\n[GitHub](https://github.com/tanstack)\n\n[Youtube](https://www.youtube.com/user/tannerlinsley)\n\n[Nozzle.io - Keyword Rank Tracker](https://nozzle.io/)\n\n[Privacy Policy](https://tanstack.com/privacy)\n\n[Terms of Service](https://tanstack.com/terms)\n\n© 2025 TanStack LLC","size_bytes":67504},"attached_assets/typography_1759070852456.css":{"content":"/**\n * Netrunner Typography System\n * Enhanced Satoshi + Fira Code with fluid scaling and creative hierarchy\n * \n * Dependencies:\n * - Satoshi font family (300-900 weights)\n * - Fira Code font family (300-600 weights)\n * \n * Import URLs:\n * @import url('https://api.fontshare.com/v2/css?f[]=satoshi@300,400,500,600,700,800,900&display=swap');\n * @import url('https://fonts.googleapis.com/css2?family=Fira+Code:wght@300;400;500;600&display=swap');\n */\n\n:root {\n  /* ===== FONT FAMILIES ===== */\n  --font-family-sans: 'Satoshi', -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;\n  --font-family-mono: 'Fira Code', 'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', Consolas, 'Courier New', monospace;\n\n  /* ===== TYPE SCALE (Major Third - 1.25 ratio) ===== */\n  --type-scale-ratio: 1.25;\n  \n  /* Base font sizes with fluid scaling (16px mobile → 18px desktop) */\n  --font-size-base: clamp(1rem, 0.875rem + 0.5vw, 1.125rem);\n  \n  /* Mathematical scale progression */\n  --font-size-xs: calc(var(--font-size-base) / var(--type-scale-ratio) / var(--type-scale-ratio));  /* ~0.64rem */\n  --font-size-sm: calc(var(--font-size-base) / var(--type-scale-ratio));                           /* ~0.8rem */\n  --font-size-base: var(--font-size-base);                                                         /* 1rem - 1.125rem */\n  --font-size-lg: calc(var(--font-size-base) * var(--type-scale-ratio));                          /* ~1.25rem */\n  --font-size-xl: calc(var(--font-size-base) * var(--type-scale-ratio) * var(--type-scale-ratio)); /* ~1.56rem */\n  --font-size-2xl: calc(var(--font-size-xl) * var(--type-scale-ratio));                          /* ~1.95rem */\n  --font-size-3xl: calc(var(--font-size-2xl) * var(--type-scale-ratio));                         /* ~2.44rem */\n  --font-size-4xl: calc(var(--font-size-3xl) * var(--type-scale-ratio));                         /* ~3.05rem */\n  \n  /* Enhanced display sizes for hero/marketing moments */\n  --font-size-display-sm: clamp(2.5rem, 4vw, 3.5rem);\n  --font-size-display-md: clamp(3rem, 5vw, 4.5rem);\n  --font-size-display-lg: clamp(3.5rem, 6vw, 6rem);\n  --font-size-display-xl: clamp(4rem, 8vw, 8rem);\n\n  /* ===== FONT WEIGHTS ===== */\n  --font-weight-light: 300;\n  --font-weight-normal: 400;\n  --font-weight-medium: 500;\n  --font-weight-semibold: 600;\n  --font-weight-bold: 700;\n  --font-weight-extrabold: 800;\n  --font-weight-black: 900;\n\n  /* ===== LINE HEIGHTS ===== */\n  --line-height-tight: 1.1;    /* Display text, large headings */\n  --line-height-snug: 1.2;     /* Headings */\n  --line-height-normal: 1.4;   /* UI text, small text */\n  --line-height-relaxed: 1.6;  /* Body text, optimal reading */\n  --line-height-loose: 1.8;    /* Long-form content */\n\n  /* ===== LETTER SPACING ===== */\n  --letter-spacing-tighter: -0.05em;  /* Very large display text */\n  --letter-spacing-tight: -0.025em;   /* Large headings */\n  --letter-spacing-normal: 0em;       /* Default */\n  --letter-spacing-wide: 0.025em;     /* Small text, labels */\n  --letter-spacing-wider: 0.05em;     /* Buttons, badges */\n  --letter-spacing-widest: 0.1em;     /* All caps, metadata */\n\n  /* ===== SEMANTIC TEXT STYLES ===== */\n  /* Pre-composed font shorthand values for consistent application */\n  --text-display-xl: var(--font-weight-black) var(--font-size-display-xl)/var(--line-height-tight) var(--font-family-sans);\n  --text-display-lg: var(--font-weight-extrabold) var(--font-size-display-lg)/var(--line-height-tight) var(--font-family-sans);\n  --text-display-md: var(--font-weight-extrabold) var(--font-size-display-md)/var(--line-height-tight) var(--font-family-sans);\n  --text-display-sm: var(--font-weight-bold) var(--font-size-display-sm)/var(--line-height-snug) var(--font-family-sans);\n\n  --text-heading-4xl: var(--font-weight-extrabold) var(--font-size-4xl)/var(--line-height-tight) var(--font-family-sans);\n  --text-heading-3xl: var(--font-weight-bold) var(--font-size-3xl)/var(--line-height-tight) var(--font-family-sans);\n  --text-heading-2xl: var(--font-weight-bold) var(--font-size-2xl)/var(--line-height-snug) var(--font-family-sans);\n  --text-heading-xl: var(--font-weight-semibold) var(--font-size-xl)/var(--line-height-snug) var(--font-family-sans);\n  --text-heading-lg: var(--font-weight-medium) var(--font-size-lg)/var(--line-height-normal) var(--font-family-sans);\n\n  --text-body-lg: var(--font-weight-medium) var(--font-size-lg)/var(--line-height-relaxed) var(--font-family-sans);\n  --text-body-base: var(--font-weight-normal) var(--font-size-base)/var(--line-height-relaxed) var(--font-family-sans);\n  --text-body-sm: var(--font-weight-normal) var(--font-size-sm)/var(--line-height-normal) var(--font-family-sans);\n  --text-body-xs: var(--font-weight-normal) var(--font-size-xs)/var(--line-height-normal) var(--font-family-sans);\n}\n\n/* ===== BASE TYPOGRAPHY CLASSES ===== */\n\n/* Display Text - Hero sections, marketing moments */\n.text-display-xl {\n  font: var(--text-display-xl);\n  letter-spacing: var(--letter-spacing-tighter);\n}\n\n.text-display-lg {\n  font: var(--text-display-lg);\n  letter-spacing: var(--letter-spacing-tighter);\n}\n\n.text-display-md {\n  font: var(--text-display-md);\n  letter-spacing: var(--letter-spacing-tight);\n}\n\n.text-display-sm {\n  font: var(--text-display-sm);\n  letter-spacing: var(--letter-spacing-tight);\n}\n\n/* Heading Hierarchy */\n.text-4xl {\n  font: var(--text-heading-4xl);\n  letter-spacing: var(--letter-spacing-tight);\n}\n\n.text-3xl {\n  font: var(--text-heading-3xl);\n  letter-spacing: var(--letter-spacing-tight);\n}\n\n.text-2xl {\n  font: var(--text-heading-2xl);\n  letter-spacing: var(--letter-spacing-normal);\n}\n\n.text-xl {\n  font: var(--text-heading-xl);\n  letter-spacing: var(--letter-spacing-normal);\n}\n\n.text-lg {\n  font: var(--text-heading-lg);\n  letter-spacing: var(--letter-spacing-normal);\n}\n\n/* Body Text */\n.text-base {\n  font: var(--text-body-base);\n}\n\n.text-sm {\n  font: var(--text-body-sm);\n}\n\n.text-xs {\n  font: var(--text-body-xs);\n  letter-spacing: var(--letter-spacing-wide);\n}\n\n/* Emphasis variants */\n.text-lg-emphasis {\n  font: var(--text-body-lg);\n}\n\n/* Monospace Typography */\n.text-mono {\n  font-family: var(--font-family-mono);\n  font-feature-settings: 'liga' 1, 'calt' 1; /* Enable programming ligatures */\n  font-size: 0.9em; /* Slightly smaller than surrounding text */\n}\n\n.text-mono-lg {\n  font-family: var(--font-family-mono);\n  font-feature-settings: 'liga' 1, 'calt' 1;\n  font-size: var(--font-size-lg);\n  font-weight: var(--font-weight-medium);\n}\n\n.text-mono-sm {\n  font-family: var(--font-family-mono);\n  font-feature-settings: 'liga' 1, 'calt' 1;\n  font-size: var(--font-size-sm);\n}\n\n.text-mono-xs {\n  font-family: var(--font-family-mono);\n  font-feature-settings: 'liga' 1, 'calt' 1;\n  font-size: var(--font-size-xs);\n}\n\n/* ===== FONT WEIGHT UTILITIES ===== */\n.font-light { font-weight: var(--font-weight-light); }\n.font-normal { font-weight: var(--font-weight-normal); }\n.font-medium { font-weight: var(--font-weight-medium); }\n.font-semibold { font-weight: var(--font-weight-semibold); }\n.font-bold { font-weight: var(--font-weight-bold); }\n.font-extrabold { font-weight: var(--font-weight-extrabold); }\n.font-black { font-weight: var(--font-weight-black); }\n\n/* ===== LETTER SPACING UTILITIES ===== */\n.tracking-tighter { letter-spacing: var(--letter-spacing-tighter); }\n.tracking-tight { letter-spacing: var(--letter-spacing-tight); }\n.tracking-normal { letter-spacing: var(--letter-spacing-normal); }\n.tracking-wide { letter-spacing: var(--letter-spacing-wide); }\n.tracking-wider { letter-spacing: var(--letter-spacing-wider); }\n.tracking-widest { letter-spacing: var(--letter-spacing-widest); }\n\n/* ===== LINE HEIGHT UTILITIES ===== */\n.leading-tight { line-height: var(--line-height-tight); }\n.leading-snug { line-height: var(--line-height-snug); }\n.leading-normal { line-height: var(--line-height-normal); }\n.leading-relaxed { line-height: var(--line-height-relaxed); }\n.leading-loose { line-height: var(--line-height-loose); }\n\n/* ===== SEMANTIC TYPOGRAPHY COMPONENTS ===== */\n\n/* Code blocks */\n.code-block {\n  font-family: var(--font-family-mono);\n  font-feature-settings: 'liga' 1, 'calt' 1;\n  font-size: var(--font-size-sm);\n  line-height: var(--line-height-relaxed);\n}\n\n/* Inline code */\n.code-inline {\n  font-family: var(--font-family-mono);\n  font-feature-settings: 'liga' 1, 'calt' 1;\n  font-size: 0.875em;\n  padding: 0.125rem 0.25rem;\n  border-radius: 0.25rem;\n}\n\n/* Labels and metadata */\n.text-label {\n  font-family: var(--font-family-sans);\n  font-size: var(--font-size-xs);\n  font-weight: var(--font-weight-medium);\n  letter-spacing: var(--letter-spacing-widest);\n  text-transform: uppercase;\n}\n\n/* Button text */\n.text-button {\n  font-family: var(--font-family-sans);\n  font-size: var(--font-size-sm);\n  font-weight: var(--font-weight-semibold);\n  letter-spacing: var(--letter-spacing-wide);\n  line-height: 1;\n}\n\n.text-button-lg {\n  font-family: var(--font-family-sans);\n  font-size: var(--font-size-base);\n  font-weight: var(--font-weight-semibold);\n  letter-spacing: var(--letter-spacing-wide);\n  line-height: 1;\n}\n\n/* Navigation text */\n.text-nav {\n  font-family: var(--font-family-sans);\n  font-size: var(--font-size-sm);\n  font-weight: var(--font-weight-medium);\n  letter-spacing: var(--letter-spacing-normal);\n  line-height: var(--line-height-normal);\n}\n\n/* ===== RESPONSIVE TYPOGRAPHY UTILITIES ===== */\n\n/* Responsive display text - scales more aggressively on larger screens */\n.text-display-responsive {\n  font-family: var(--font-family-sans);\n  font-weight: var(--font-weight-extrabold);\n  font-size: clamp(2rem, 6vw, 6rem);\n  line-height: var(--line-height-tight);\n  letter-spacing: var(--letter-spacing-tight);\n}\n\n/* Responsive heading - moderate scaling */\n.text-heading-responsive {\n  font-family: var(--font-family-sans);\n  font-weight: var(--font-weight-bold);\n  font-size: clamp(1.5rem, 3vw, 2.5rem);\n  line-height: var(--line-height-snug);\n  letter-spacing: var(--letter-spacing-normal);\n}\n\n/* ===== ACCESSIBILITY & PERFORMANCE ===== */\n\n/* Ensure proper font loading */\n.font-loading-optimal {\n  font-display: swap;\n}\n\n/* Reduced motion support */\n@media (prefers-reduced-motion: reduce) {\n  * {\n    font-variation-settings: normal !important;\n  }\n}\n\n/* High contrast mode support */\n@media (prefers-contrast: high) {\n  :root {\n    --letter-spacing-tight: 0em;\n    --letter-spacing-tighter: 0em;\n  }\n  \n  .text-display-xl,\n  .text-display-lg,\n  .text-display-md,\n  .text-4xl,\n  .text-3xl {\n    letter-spacing: var(--letter-spacing-normal);\n  }\n}\n\n/* ===== USAGE EXAMPLES IN COMMENTS ===== */\n\n/*\nUSAGE EXAMPLES:\n\nHero Section:\n<h1 class=\"text-display-lg\">Ship Creative Code</h1>\n<p class=\"text-lg-emphasis\">Professional developer tools with a creative edge</p>\n\nPage Structure:\n<h1 class=\"text-4xl\">Documentation</h1>\n<h2 class=\"text-2xl\">Getting Started</h2>\n<h3 class=\"text-xl\">Installation</h3>\n\nBody Content:\n<p class=\"text-base\">This is the optimal reading size for body text...</p>\n<p class=\"text-sm\">Secondary information or captions</p>\n<span class=\"text-xs text-label\">Metadata • Published 2 days ago</span>\n\nCode Examples:\n<pre class=\"code-block\">const config = { theme: 'neo-synthwave' };</pre>\n<code class=\"code-inline\">npm install</code>\n\nButtons:\n<button class=\"text-button\">Primary Action</button>\n<button class=\"text-button-lg\">Hero CTA</button>\n\nNavigation:\n<nav class=\"text-nav\">\n  <a href=\"#\">Projects</a>\n  <a href=\"#\">Documentation</a>\n</nav>\n*/","size_bytes":11453},"server/index.ts":{"content":"// Handle SSL certificate issues in development\nif (process.env.NODE_ENV === 'development') {\n  process.env.NODE_TLS_REJECT_UNAUTHORIZED = '0';\n}\n\nimport express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2213},"server/replitAuth.ts":{"content":"import * as client from \"openid-client\";\nimport { Strategy, type VerifyFunction } from \"openid-client/passport\";\n\nimport passport from \"passport\";\nimport session from \"express-session\";\nimport type { Express, RequestHandler } from \"express\";\nimport memoize from \"memoizee\";\nimport connectPg from \"connect-pg-simple\";\nimport { storage } from \"./storage\";\n\nif (!process.env.REPLIT_DOMAINS) {\n  throw new Error(\"Environment variable REPLIT_DOMAINS not provided\");\n}\n\nconst getOidcConfig = memoize(\n  async () => {\n    return await client.discovery(\n      new URL(process.env.ISSUER_URL ?? \"https://replit.com/oidc\"),\n      process.env.REPL_ID!\n    );\n  },\n  { maxAge: 3600 * 1000 }\n);\n\nexport function getSession() {\n  const sessionTtl = 7 * 24 * 60 * 60 * 1000; // 1 week\n  const pgStore = connectPg(session);\n  const sessionStore = new pgStore({\n    conString: process.env.DATABASE_URL,\n    createTableIfMissing: false,\n    ttl: sessionTtl,\n    tableName: \"sessions\",\n  });\n  return session({\n    secret: process.env.SESSION_SECRET!,\n    store: sessionStore,\n    resave: false,\n    saveUninitialized: false,\n    cookie: {\n      httpOnly: true,\n      secure: true,\n      maxAge: sessionTtl,\n    },\n  });\n}\n\nfunction updateUserSession(\n  user: any,\n  tokens: client.TokenEndpointResponse & client.TokenEndpointResponseHelpers\n) {\n  user.claims = tokens.claims();\n  user.access_token = tokens.access_token;\n  user.refresh_token = tokens.refresh_token;\n  user.expires_at = user.claims?.exp;\n}\n\nasync function upsertUser(\n  claims: any,\n) {\n  await storage.upsertUser({\n    id: claims[\"sub\"],\n    email: claims[\"email\"],\n    firstName: claims[\"first_name\"],\n    lastName: claims[\"last_name\"],\n    profileImageUrl: claims[\"profile_image_url\"],\n  });\n}\n\nexport async function setupAuth(app: Express) {\n  app.set(\"trust proxy\", 1);\n  app.use(getSession());\n  app.use(passport.initialize());\n  app.use(passport.session());\n\n  const config = await getOidcConfig();\n\n  const verify: VerifyFunction = async (\n    tokens: client.TokenEndpointResponse & client.TokenEndpointResponseHelpers,\n    verified: passport.AuthenticateCallback\n  ) => {\n    const user = {};\n    updateUserSession(user, tokens);\n    await upsertUser(tokens.claims());\n    verified(null, user);\n  };\n\n  for (const domain of process.env\n    .REPLIT_DOMAINS!.split(\",\")) {\n    const strategy = new Strategy(\n      {\n        name: `replitauth:${domain}`,\n        config,\n        scope: \"openid email profile offline_access\",\n        callbackURL: `https://${domain}/api/callback`,\n      },\n      verify,\n    );\n    passport.use(strategy);\n  }\n\n  passport.serializeUser((user: Express.User, cb) => cb(null, user));\n  passport.deserializeUser((user: Express.User, cb) => cb(null, user));\n\n  app.get(\"/api/login\", (req, res, next) => {\n    passport.authenticate(`replitauth:${req.hostname}`, {\n      prompt: \"login consent\",\n      scope: [\"openid\", \"email\", \"profile\", \"offline_access\"],\n    })(req, res, next);\n  });\n\n  app.get(\"/api/callback\", (req, res, next) => {\n    passport.authenticate(`replitauth:${req.hostname}`, {\n      successReturnToOrRedirect: \"/\",\n      failureRedirect: \"/api/login\",\n    })(req, res, next);\n  });\n\n  app.get(\"/api/logout\", (req, res) => {\n    req.logout(() => {\n      res.redirect(\n        client.buildEndSessionUrl(config, {\n          client_id: process.env.REPL_ID!,\n          post_logout_redirect_uri: `${req.protocol}://${req.hostname}`,\n        }).href\n      );\n    });\n  });\n}\n\nexport const isAuthenticated: RequestHandler = async (req, res, next) => {\n  const user = req.user as any;\n\n  if (!req.isAuthenticated() || !user.expires_at) {\n    return res.status(401).json({ message: \"Unauthorized\" });\n  }\n\n  const now = Math.floor(Date.now() / 1000);\n  if (now <= user.expires_at) {\n    return next();\n  }\n\n  const refreshToken = user.refresh_token;\n  if (!refreshToken) {\n    res.status(401).json({ message: \"Unauthorized\" });\n    return;\n  }\n\n  try {\n    const config = await getOidcConfig();\n    const tokenResponse = await client.refreshTokenGrant(config, refreshToken);\n    updateUserSession(user, tokenResponse);\n    \n    // Critical: Persist the updated tokens back to the session\n    (req.session as any).passport.user = user;\n    req.session.save((err) => {\n      if (err) {\n        console.error('Failed to save session after token refresh:', err);\n        res.status(401).json({ message: \"Unauthorized\" });\n        return;\n      }\n      return next();\n    });\n  } catch (error) {\n    console.error('Token refresh failed:', error);\n    res.status(401).json({ message: \"Unauthorized\" });\n    return;\n  }\n};","size_bytes":4604},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { z } from \"zod\";\nimport { storage } from \"./storage\";\nimport { insertHabitSchema, insertTodoSchema, insertDailySchema, insertRewardSchema, insertEquipmentSchema } from \"@shared/schema\";\nimport { setupAuth, isAuthenticated } from \"./replitAuth\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Set up Replit Auth\n  await setupAuth(app);\n\n  // Auth routes\n  app.get('/api/auth/user', isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n      const user = await storage.getUser(userId);\n      \n      if (!user) {\n        return res.status(404).json({ message: \"User not found\" });\n      }\n      \n      // Get character data\n      const character = await storage.getCharacter(userId);\n      \n      res.json({ \n        user: { \n          id: user.id, \n          email: user.email, \n          username: user.username,\n          firstName: user.firstName,\n          lastName: user.lastName,\n          profileImageUrl: user.profileImageUrl\n        }, \n        character \n      });\n    } catch (error) {\n      console.error(\"Error fetching user:\", error);\n      res.status(500).json({ message: \"Failed to fetch user\" });\n    }\n  });\n\n  // Character setup for new users\n  app.post(\"/api/setup-character\", isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n      const { username, specialization, appearance } = z.object({\n        username: z.string().min(3).max(20),\n        specialization: z.enum([\"netrunner\", \"street_samurai\", \"techie\", \"solo\"]).default(\"netrunner\"),\n        appearance: z.object({\n          avatar: z.enum([\"cyber_punk\", \"neon_ghost\", \"data_warrior\", \"code_ninja\"]).default(\"cyber_punk\"),\n          primaryColor: z.enum([\"neon_blue\", \"electric_purple\", \"cyber_yellow\", \"matrix_green\"]).default(\"neon_blue\"),\n        }).default({ avatar: \"cyber_punk\", primaryColor: \"neon_blue\" }),\n      }).parse(req.body);\n\n      // Check if username is already taken\n      const existingUser = await storage.getUserByUsername(username);\n      if (existingUser) {\n        return res.status(400).json({ message: \"Username already taken\" });\n      }\n\n      // Update user with username\n      await storage.upsertUser({\n        id: userId,\n        username: username,\n      });\n\n      // Check if character already exists\n      const existingCharacter = await storage.getCharacter(userId);\n      if (existingCharacter) {\n        return res.status(400).json({ message: \"Character already exists\" });\n      }\n\n      // Calculate starting bonuses based on specialization\n      const getSpecializationBonuses = (spec: string) => {\n        switch (spec) {\n          case \"netrunner\":\n            return { hp: 100, maxHp: 100, credits: 0 };\n          case \"street_samurai\":\n            return { hp: 110, maxHp: 110, credits: 0 };\n          case \"techie\":\n            return { hp: 100, maxHp: 100, credits: 25 };\n          case \"solo\":\n            return { hp: 105, maxHp: 105, credits: 10 };\n          default:\n            return { hp: 100, maxHp: 100, credits: 0 };\n        }\n      };\n\n      const bonuses = getSpecializationBonuses(specialization);\n\n      // Create character with specialization and appearance\n      const character = await storage.createCharacter({\n        userId: userId,\n        name: `CYBER-${username.toUpperCase()}`,\n        specialization: specialization,\n        hp: bonuses.hp,\n        maxHp: bonuses.maxHp,\n        credits: bonuses.credits,\n        avatarData: {\n          avatar: appearance.avatar,\n          primaryColor: appearance.primaryColor,\n        },\n      });\n\n      // Create specialization-specific equipment\n      const getSpecializationEquipment = (spec: string) => {\n        switch (spec) {\n          case \"netrunner\":\n            return {\n              name: \"Neural Interface v2.0\",\n              description: \"+15 XP gain • +5 Focus\",\n              stats: { xpBonus: 15, focus: 5 },\n              icon: \"cpu\",\n            };\n          case \"street_samurai\":\n            return {\n              name: \"Combat Exoskeleton\",\n              description: \"+20 Defense • +5 Strength\",\n              stats: { defense: 20, strength: 5 },\n              icon: \"shield\",\n            };\n          case \"techie\":\n            return {\n              name: \"Multi-Tool Implant\",\n              description: \"+10 Defense • +30₡ on tasks\",\n              stats: { defense: 10, creditsBonus: 30 },\n              icon: \"wrench\",\n            };\n          case \"solo\":\n            return {\n              name: \"Tactical Processor\",\n              description: \"+12 Defense • 2x Daily Streaks\",\n              stats: { defense: 12, streakMultiplier: 2 },\n              icon: \"target\",\n            };\n          default:\n            return {\n              name: \"Neural Firewall v1.0\",\n              description: \"+10 Defense • +3 Focus\",\n              stats: { defense: 10, focus: 3 },\n              icon: \"shield\",\n            };\n        }\n      };\n\n      const equipment = getSpecializationEquipment(specialization);\n      await storage.createEquipment({\n        userId: userId,\n        name: equipment.name,\n        type: \"armor\",\n        description: equipment.description,\n        stats: equipment.stats,\n        icon: equipment.icon,\n        isEquipped: true,\n        cost: 0,\n      });\n\n      res.json({ character });\n    } catch (error) {\n      console.error(\"Character setup error:\", error);\n      res.status(400).json({ message: \"Character setup failed\" });\n    }\n  });\n\n  // Character routes\n  app.get(\"/api/character\", isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n\n      const character = await storage.getCharacter(userId);\n      if (!character) return res.status(404).json({ message: \"Character not found\" });\n\n      res.json(character);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch character\" });\n    }\n  });\n\n  // Habits routes\n  app.get(\"/api/habits\", isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n\n      const habits = await storage.getHabits(userId);\n      res.json(habits);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch habits\" });\n    }\n  });\n\n  app.post(\"/api/habits\", isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n\n      const habitData = insertHabitSchema.parse({ ...req.body, userId });\n      \n      // Set XP and credits based on difficulty\n      const difficultyMultipliers = { easy: 1, medium: 1.5, hard: 2 };\n      const multiplier = difficultyMultipliers[habitData.difficulty as keyof typeof difficultyMultipliers] || 1;\n      \n      const habit = await storage.createHabit({\n        ...habitData,\n        xpReward: Math.floor(25 * multiplier),\n        creditsReward: Math.floor(10 * multiplier),\n      });\n\n      res.json(habit);\n    } catch (error) {\n      res.status(400).json({ message: \"Failed to create habit\" });\n    }\n  });\n\n  app.post(\"/api/habits/:id/complete\", isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n\n      const { id } = req.params;\n      const completion = await storage.completeHabit(id, userId);\n      res.json(completion);\n    } catch (error) {\n      res.status(400).json({ message: \"Failed to complete habit\" });\n    }\n  });\n\n  // Todos routes\n  app.get(\"/api/todos\", isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n\n      const todos = await storage.getTodos(userId);\n      res.json(todos);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch todos\" });\n    }\n  });\n\n  app.post(\"/api/todos\", isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n\n      const todoData = insertTodoSchema.parse({ ...req.body, userId });\n      \n      // Set XP and credits based on priority\n      const priorityMultipliers = { low: 1, medium: 1.5, high: 2 };\n      const multiplier = priorityMultipliers[todoData.priority as keyof typeof priorityMultipliers] || 1;\n      \n      const todo = await storage.createTodo({\n        ...todoData,\n        xpReward: Math.floor(50 * multiplier),\n        creditsReward: Math.floor(25 * multiplier),\n      });\n\n      res.json(todo);\n    } catch (error) {\n      console.error(\"Todo creation error:\", error);\n      res.status(400).json({ \n        message: \"Failed to create todo\",\n        error: error instanceof Error ? error.message : \"Unknown error\" \n      });\n    }\n  });\n\n  app.post(\"/api/todos/:id/complete\", isAuthenticated, async (req: any, res) => {\n    try {\n      const { id } = req.params;\n      const todo = await storage.completeTodo(id);\n      res.json(todo);\n    } catch (error) {\n      res.status(400).json({ message: \"Failed to complete todo\" });\n    }\n  });\n\n  // Dailies routes\n  app.get(\"/api/dailies\", isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n\n      const dailies = await storage.getDailies(userId);\n      res.json(dailies);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch dailies\" });\n    }\n  });\n\n  app.post(\"/api/dailies\", isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n\n      const dailyData = insertDailySchema.parse({ ...req.body, userId });\n      \n      // Set XP and credits based on difficulty\n      const difficultyMultipliers = { easy: 1, medium: 1.5, hard: 2 };\n      const multiplier = difficultyMultipliers[dailyData.difficulty as keyof typeof difficultyMultipliers] || 1;\n      \n      const daily = await storage.createDaily({\n        ...dailyData,\n        xpReward: Math.floor(20 * multiplier),\n        creditsReward: Math.floor(8 * multiplier),\n      });\n\n      res.json(daily);\n    } catch (error) {\n      res.status(400).json({ message: \"Failed to create daily\" });\n    }\n  });\n\n  app.post(\"/api/dailies/:id/complete\", isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n\n      const { id } = req.params;\n      const daily = await storage.completeDaily(id, userId);\n      res.json(daily);\n    } catch (error) {\n      res.status(400).json({ message: error instanceof Error ? error.message : \"Failed to complete daily\" });\n    }\n  });\n\n  // Rewards routes\n  app.get(\"/api/rewards\", isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n\n      const rewards = await storage.getRewards(userId);\n      res.json(rewards);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch rewards\" });\n    }\n  });\n\n  app.post(\"/api/rewards\", isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n\n      const rewardData = insertRewardSchema.parse({ ...req.body, userId });\n      const reward = await storage.createReward(rewardData);\n      res.json(reward);\n    } catch (error) {\n      res.status(400).json({ message: \"Failed to create reward\" });\n    }\n  });\n\n  app.post(\"/api/rewards/:id/purchase\", isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n\n      const { id } = req.params;\n      const success = await storage.purchaseReward(id, userId);\n      \n      if (!success) {\n        return res.status(400).json({ message: \"Insufficient credits or reward not available\" });\n      }\n\n      res.json({ success: true });\n    } catch (error) {\n      res.status(400).json({ message: \"Failed to purchase reward\" });\n    }\n  });\n\n  // Equipment routes\n  app.get(\"/api/equipment\", isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n\n      const equipment = await storage.getEquipment(userId);\n      res.json(equipment);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch equipment\" });\n    }\n  });\n\n  app.post(\"/api/equipment/:id/equip\", isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n\n      const { id } = req.params;\n      const equipment = await storage.equipItem(id, userId);\n      res.json(equipment);\n    } catch (error) {\n      res.status(400).json({ message: \"Failed to equip item\" });\n    }\n  });\n\n  // Achievements routes\n  app.get(\"/api/achievements\", isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n\n      const achievements = await storage.getAchievements(userId);\n      res.json(achievements);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch achievements\" });\n    }\n  });\n\n  // Stats routes\n  app.get(\"/api/stats\", isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n\n      const habits = await storage.getHabits(userId);\n      const todos = await storage.getTodos(userId);\n      const completions = await storage.getHabitCompletions(userId, new Date());\n      const character = await storage.getCharacter(userId);\n\n      const stats = {\n        totalHabits: habits.length,\n        activeTodos: todos.filter(t => !t.isCompleted).length,\n        completedToday: completions.length,\n        streak: character?.streak || 0,\n      };\n\n      res.json(stats);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch stats\" });\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":13500},"server/storage.ts":{"content":"import { eq, desc, and } from \"drizzle-orm\";\nimport { drizzle } from \"drizzle-orm/neon-http\";\nimport { neon } from \"@neondatabase/serverless\";\nimport * as schema from \"@shared/schema\";\nimport type {\n  User,\n  InsertUser,\n  UpsertUser,\n  Character,\n  InsertCharacter,\n  Habit,\n  InsertHabit,\n  HabitCompletion,\n  Todo,\n  InsertTodo,\n  Daily,\n  InsertDaily,\n  Reward,\n  InsertReward,\n  Equipment,\n  InsertEquipment,\n  Achievement,\n} from \"@shared/schema\";\n\nconst sql = neon(process.env.DATABASE_URL!, {\n  fetchOptions: {\n    cache: 'no-store',\n  },\n});\nconst db = drizzle(sql, { schema });\n\n\nexport interface IStorage {\n  // Users\n  getUser(id: string): Promise<User | undefined>;\n  getUserByEmail(email: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n  // Replit Auth required method\n  upsertUser(user: UpsertUser): Promise<User>;\n\n  // Characters\n  getCharacter(userId: string): Promise<Character | undefined>;\n  createCharacter(character: InsertCharacter): Promise<Character>;\n  updateCharacter(userId: string, updates: Partial<Character>): Promise<Character>;\n\n  // Habits\n  getHabits(userId: string): Promise<Habit[]>;\n  createHabit(habit: InsertHabit): Promise<Habit>;\n  updateHabit(habitId: string, updates: Partial<Habit>): Promise<Habit>;\n  deleteHabit(habitId: string): Promise<void>;\n  completeHabit(habitId: string, userId: string): Promise<HabitCompletion>;\n  getHabitCompletions(userId: string, date?: Date): Promise<HabitCompletion[]>;\n\n  // Todos\n  getTodos(userId: string): Promise<Todo[]>;\n  createTodo(todo: InsertTodo): Promise<Todo>;\n  updateTodo(todoId: string, updates: Partial<Todo>): Promise<Todo>;\n  deleteTodo(todoId: string): Promise<void>;\n  completeTodo(todoId: string): Promise<Todo>;\n\n  // Dailies\n  getDailies(userId: string): Promise<Daily[]>;\n  createDaily(daily: InsertDaily): Promise<Daily>;\n  updateDaily(dailyId: string, updates: Partial<Daily>): Promise<Daily>;\n  deleteDaily(dailyId: string): Promise<void>;\n  completeDaily(dailyId: string, userId: string): Promise<Daily>;\n  resetDailies(userId: string): Promise<void>;\n\n  // Rewards\n  getRewards(userId: string): Promise<Reward[]>;\n  createReward(reward: InsertReward): Promise<Reward>;\n  purchaseReward(rewardId: string, userId: string): Promise<boolean>;\n\n  // Equipment\n  getEquipment(userId: string): Promise<Equipment[]>;\n  createEquipment(equipment: InsertEquipment): Promise<Equipment>;\n  equipItem(equipmentId: string, userId: string): Promise<Equipment>;\n\n  // Achievements\n  getAchievements(userId: string): Promise<Achievement[]>;\n  unlockAchievement(userId: string, name: string, description: string): Promise<Achievement>;\n}\n\nexport class DatabaseStorage implements IStorage {\n  async getUser(id: string): Promise<User | undefined> {\n    const result = await db.select().from(schema.users).where(eq(schema.users.id, id)).limit(1);\n    return result[0];\n  }\n\n  async getUserByEmail(email: string): Promise<User | undefined> {\n    const result = await db.select().from(schema.users).where(eq(schema.users.email, email)).limit(1);\n    return result[0];\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    const result = await db.select().from(schema.users).where(eq(schema.users.username, username)).limit(1);\n    return result[0];\n  }\n\n  async createUser(user: InsertUser): Promise<User> {\n    const result = await db.insert(schema.users).values(user).returning();\n    return result[0];\n  }\n\n  // Replit Auth required method\n  async upsertUser(userData: UpsertUser): Promise<User> {\n    const [user] = await db\n      .insert(schema.users)\n      .values(userData)\n      .onConflictDoUpdate({\n        target: schema.users.id,\n        set: {\n          ...userData,\n          updatedAt: new Date(),\n        },\n      })\n      .returning();\n    return user;\n  }\n\n  async getCharacter(userId: string): Promise<Character | undefined> {\n    const result = await db.select().from(schema.characters).where(eq(schema.characters.userId, userId)).limit(1);\n    return result[0];\n  }\n\n  async createCharacter(character: InsertCharacter): Promise<Character> {\n    const result = await db.insert(schema.characters).values(character).returning();\n    return result[0];\n  }\n\n  async updateCharacter(userId: string, updates: Partial<Character>): Promise<Character> {\n    const result = await db.update(schema.characters)\n      .set(updates)\n      .where(eq(schema.characters.userId, userId))\n      .returning();\n    return result[0];\n  }\n\n  async getHabits(userId: string): Promise<Habit[]> {\n    return await db.select().from(schema.habits)\n      .where(and(eq(schema.habits.userId, userId), eq(schema.habits.isActive, true)))\n      .orderBy(desc(schema.habits.createdAt));\n  }\n\n  async createHabit(habit: InsertHabit): Promise<Habit> {\n    const result = await db.insert(schema.habits).values(habit).returning();\n    return result[0];\n  }\n\n  async updateHabit(habitId: string, updates: Partial<Habit>): Promise<Habit> {\n    const result = await db.update(schema.habits)\n      .set(updates)\n      .where(eq(schema.habits.id, habitId))\n      .returning();\n    return result[0];\n  }\n\n  async deleteHabit(habitId: string): Promise<void> {\n    await db.update(schema.habits)\n      .set({ isActive: false })\n      .where(eq(schema.habits.id, habitId));\n  }\n\n  async completeHabit(habitId: string, userId: string): Promise<HabitCompletion> {\n    const habit = await db.select().from(schema.habits).where(eq(schema.habits.id, habitId)).limit(1);\n    if (!habit[0]) throw new Error(\"Habit not found\");\n\n    const now = new Date();\n    const updatedHabit = await db.update(schema.habits)\n      .set({ \n        streak: habit[0].streak + 1,\n        lastCompleted: now\n      })\n      .where(eq(schema.habits.id, habitId))\n      .returning();\n\n    const completion = await db.insert(schema.habitCompletions).values({\n      habitId,\n      userId,\n      xpGained: habit[0].xpReward,\n      creditsGained: habit[0].creditsReward,\n    }).returning();\n\n    // Update character XP and credits\n    const character = await this.getCharacter(userId);\n    if (character) {\n      const newXp = character.xp + habit[0].xpReward;\n      const newCredits = character.credits + habit[0].creditsReward;\n      \n      // Check for level up\n      let newLevel = character.level;\n      let xpToNext = character.xpToNext;\n      if (newXp >= character.xpToNext) {\n        newLevel++;\n        xpToNext = Math.floor(character.xpToNext * 1.5);\n      }\n\n      await this.updateCharacter(userId, {\n        xp: newXp,\n        credits: newCredits,\n        level: newLevel,\n        xpToNext,\n      });\n    }\n\n    return completion[0];\n  }\n\n  async getHabitCompletions(userId: string, date?: Date): Promise<HabitCompletion[]> {\n    let whereConditions = [eq(schema.habitCompletions.userId, userId)];\n    \n    if (date) {\n      const startOfDay = new Date(date);\n      startOfDay.setHours(0, 0, 0, 0);\n      const endOfDay = new Date(date);\n      endOfDay.setHours(23, 59, 59, 999);\n      \n      // Add date range filter if needed\n      // whereConditions.push(gte(schema.habitCompletions.completedAt, startOfDay));\n      // whereConditions.push(lte(schema.habitCompletions.completedAt, endOfDay));\n    }\n\n    return await db.select().from(schema.habitCompletions)\n      .where(and(...whereConditions))\n      .orderBy(desc(schema.habitCompletions.completedAt));\n  }\n\n  async getTodos(userId: string): Promise<Todo[]> {\n    return await db.select().from(schema.todos)\n      .where(eq(schema.todos.userId, userId))\n      .orderBy(desc(schema.todos.createdAt));\n  }\n\n  async createTodo(todo: InsertTodo): Promise<Todo> {\n    const result = await db.insert(schema.todos).values(todo).returning();\n    return result[0];\n  }\n\n  async updateTodo(todoId: string, updates: Partial<Todo>): Promise<Todo> {\n    const result = await db.update(schema.todos)\n      .set(updates)\n      .where(eq(schema.todos.id, todoId))\n      .returning();\n    return result[0];\n  }\n\n  async deleteTodo(todoId: string): Promise<void> {\n    await db.delete(schema.todos).where(eq(schema.todos.id, todoId));\n  }\n\n  async completeTodo(todoId: string): Promise<Todo> {\n    const todo = await db.select().from(schema.todos).where(eq(schema.todos.id, todoId)).limit(1);\n    if (!todo[0]) throw new Error(\"Todo not found\");\n\n    const result = await db.update(schema.todos)\n      .set({ \n        isCompleted: true,\n        completedAt: new Date()\n      })\n      .where(eq(schema.todos.id, todoId))\n      .returning();\n\n    // Update character XP and credits\n    const character = await this.getCharacter(todo[0].userId);\n    if (character) {\n      const newXp = character.xp + todo[0].xpReward;\n      const newCredits = character.credits + todo[0].creditsReward;\n      \n      // Check for level up\n      let newLevel = character.level;\n      let xpToNext = character.xpToNext;\n      if (newXp >= character.xpToNext) {\n        newLevel++;\n        xpToNext = Math.floor(character.xpToNext * 1.5);\n      }\n\n      await this.updateCharacter(todo[0].userId, {\n        xp: newXp,\n        credits: newCredits,\n        level: newLevel,\n        xpToNext,\n      });\n    }\n\n    return result[0];\n  }\n\n  // Dailies methods\n  async getDailies(userId: string): Promise<Daily[]> {\n    return await db.select().from(schema.dailies)\n      .where(and(eq(schema.dailies.userId, userId), eq(schema.dailies.isActive, true)))\n      .orderBy(desc(schema.dailies.createdAt));\n  }\n\n  async createDaily(daily: InsertDaily): Promise<Daily> {\n    const result = await db.insert(schema.dailies).values(daily).returning();\n    return result[0];\n  }\n\n  async updateDaily(dailyId: string, updates: Partial<Daily>): Promise<Daily> {\n    const result = await db.update(schema.dailies)\n      .set(updates)\n      .where(eq(schema.dailies.id, dailyId))\n      .returning();\n    return result[0];\n  }\n\n  async deleteDaily(dailyId: string): Promise<void> {\n    await db.delete(schema.dailies).where(eq(schema.dailies.id, dailyId));\n  }\n\n  async completeDaily(dailyId: string, userId: string): Promise<Daily> {\n    const daily = await db.select().from(schema.dailies).where(eq(schema.dailies.id, dailyId)).limit(1);\n    if (!daily[0]) throw new Error(\"Daily not found\");\n\n    const today = new Date().toISOString().split('T')[0]; // Get YYYY-MM-DD format\n    const isAlreadyCompletedToday = daily[0].lastCompletedDate === today;\n\n    if (isAlreadyCompletedToday) {\n      throw new Error(\"Daily already completed today\");\n    }\n\n    // Update streak: increment if completed yesterday, reset if gap\n    let newStreak = daily[0].streak;\n    const yesterday = new Date();\n    yesterday.setDate(yesterday.getDate() - 1);\n    const yesterdayStr = yesterday.toISOString().split('T')[0];\n\n    if (daily[0].lastCompletedDate === yesterdayStr) {\n      newStreak += 1; // Consecutive day\n    } else if (daily[0].lastCompletedDate === null || daily[0].lastCompletedDate !== today) {\n      newStreak = 1; // First completion or gap in streak\n    }\n\n    const result = await db.update(schema.dailies)\n      .set({ \n        isCompletedToday: true,\n        lastCompletedDate: today,\n        streak: newStreak\n      })\n      .where(eq(schema.dailies.id, dailyId))\n      .returning();\n\n    // Update character XP and credits\n    const character = await this.getCharacter(userId);\n    if (character) {\n      const newXp = character.xp + daily[0].xpReward;\n      const newCredits = character.credits + daily[0].creditsReward;\n      \n      // Check for level up\n      let newLevel = character.level;\n      let xpToNext = character.xpToNext;\n      if (newXp >= character.xpToNext) {\n        newLevel++;\n        xpToNext = Math.floor(character.xpToNext * 1.5);\n      }\n\n      await this.updateCharacter(userId, {\n        xp: newXp,\n        credits: newCredits,\n        level: newLevel,\n        xpToNext,\n      });\n    }\n\n    return result[0];\n  }\n\n  async resetDailies(userId: string): Promise<void> {\n    // Reset all dailies for a new day - called by a daily cron job\n    await db.update(schema.dailies)\n      .set({ isCompletedToday: false })\n      .where(and(eq(schema.dailies.userId, userId), eq(schema.dailies.isActive, true)));\n  }\n\n  async getRewards(userId: string): Promise<Reward[]> {\n    return await db.select().from(schema.rewards)\n      .where(and(eq(schema.rewards.userId, userId), eq(schema.rewards.isAvailable, true)))\n      .orderBy(schema.rewards.cost);\n  }\n\n  async createReward(reward: InsertReward): Promise<Reward> {\n    const result = await db.insert(schema.rewards).values(reward).returning();\n    return result[0];\n  }\n\n  async purchaseReward(rewardId: string, userId: string): Promise<boolean> {\n    const reward = await db.select().from(schema.rewards).where(eq(schema.rewards.id, rewardId)).limit(1);\n    const character = await this.getCharacter(userId);\n    \n    if (!reward[0] || !character || character.credits < reward[0].cost) {\n      return false;\n    }\n\n    await this.updateCharacter(userId, {\n      credits: character.credits - reward[0].cost\n    });\n\n    return true;\n  }\n\n  async getEquipment(userId: string): Promise<Equipment[]> {\n    return await db.select().from(schema.equipment)\n      .where(eq(schema.equipment.userId, userId))\n      .orderBy(desc(schema.equipment.isEquipped));\n  }\n\n  async createEquipment(equipment: InsertEquipment): Promise<Equipment> {\n    const result = await db.insert(schema.equipment).values(equipment).returning();\n    return result[0];\n  }\n\n  async equipItem(equipmentId: string, userId: string): Promise<Equipment> {\n    // First, unequip all items of the same type\n    const equipment = await db.select().from(schema.equipment).where(eq(schema.equipment.id, equipmentId)).limit(1);\n    if (!equipment[0]) throw new Error(\"Equipment not found\");\n\n    await db.update(schema.equipment)\n      .set({ isEquipped: false })\n      .where(and(\n        eq(schema.equipment.userId, userId),\n        eq(schema.equipment.type, equipment[0].type)\n      ));\n\n    // Then equip the selected item\n    const result = await db.update(schema.equipment)\n      .set({ isEquipped: true })\n      .where(eq(schema.equipment.id, equipmentId))\n      .returning();\n\n    return result[0];\n  }\n\n  async getAchievements(userId: string): Promise<Achievement[]> {\n    return await db.select().from(schema.achievements)\n      .where(eq(schema.achievements.userId, userId))\n      .orderBy(desc(schema.achievements.unlockedAt));\n  }\n\n  async unlockAchievement(userId: string, name: string, description: string): Promise<Achievement> {\n    const result = await db.insert(schema.achievements).values({\n      userId,\n      name,\n      description,\n    }).returning();\n\n    // Grant achievement rewards\n    const character = await this.getCharacter(userId);\n    if (character) {\n      await this.updateCharacter(userId, {\n        xp: character.xp + result[0].xpReward,\n        credits: character.credits + result[0].creditsReward,\n      });\n    }\n\n    return result[0];\n  }\n}\n\nexport const storage = new DatabaseStorage();\n","size_bytes":15030},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, integer, boolean, timestamp, jsonb, index } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\n// Session storage table for Replit Auth\nexport const sessions = pgTable(\n  \"sessions\",\n  {\n    sid: varchar(\"sid\").primaryKey(),\n    sess: jsonb(\"sess\").notNull(),\n    expire: timestamp(\"expire\").notNull(),\n  },\n  (table) => [index(\"IDX_session_expire\").on(table.expire)],\n);\n\n// User storage table for Replit Auth + character system\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  email: varchar(\"email\").unique(), // Nullable for Replit Auth\n  username: text(\"username\").unique(), // Keep for character system, nullable for Replit users\n  firstName: varchar(\"first_name\"),\n  lastName: varchar(\"last_name\"),\n  profileImageUrl: varchar(\"profile_image_url\"),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n  updatedAt: timestamp(\"updated_at\").defaultNow().notNull(),\n});\n\nexport const characters = pgTable(\"characters\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id, { onDelete: \"cascade\" }),\n  name: text(\"name\").notNull(),\n  specialization: text(\"specialization\").notNull().default(\"netrunner\"), // netrunner, street_samurai, techie, solo\n  level: integer(\"level\").notNull().default(1),\n  xp: integer(\"xp\").notNull().default(0),\n  xpToNext: integer(\"xp_to_next\").notNull().default(100),\n  hp: integer(\"hp\").notNull().default(100),\n  maxHp: integer(\"max_hp\").notNull().default(100),\n  credits: integer(\"credits\").notNull().default(0),\n  streak: integer(\"streak\").notNull().default(0),\n  avatarData: jsonb(\"avatar_data\").default({}),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\nexport const habits = pgTable(\"habits\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id, { onDelete: \"cascade\" }),\n  title: text(\"title\").notNull(),\n  description: text(\"description\"),\n  difficulty: text(\"difficulty\").notNull().default(\"medium\"), // easy, medium, hard\n  xpReward: integer(\"xp_reward\").notNull().default(25),\n  creditsReward: integer(\"credits_reward\").notNull().default(10),\n  streak: integer(\"streak\").notNull().default(0),\n  color: text(\"color\").notNull().default(\"primary\"),\n  isActive: boolean(\"is_active\").notNull().default(true),\n  lastCompleted: timestamp(\"last_completed\"),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\nexport const habitCompletions = pgTable(\"habit_completions\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  habitId: varchar(\"habit_id\").notNull().references(() => habits.id, { onDelete: \"cascade\" }),\n  userId: varchar(\"user_id\").notNull().references(() => users.id, { onDelete: \"cascade\" }),\n  completedAt: timestamp(\"completed_at\").defaultNow().notNull(),\n  xpGained: integer(\"xp_gained\").notNull(),\n  creditsGained: integer(\"credits_gained\").notNull(),\n});\n\nexport const todos = pgTable(\"todos\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id, { onDelete: \"cascade\" }),\n  title: text(\"title\").notNull(),\n  description: text(\"description\"),\n  priority: text(\"priority\").notNull().default(\"medium\"), // low, medium, high\n  xpReward: integer(\"xp_reward\").notNull().default(50),\n  creditsReward: integer(\"credits_reward\").notNull().default(25),\n  isCompleted: boolean(\"is_completed\").notNull().default(false),\n  completedAt: timestamp(\"completed_at\"),\n  dueDate: timestamp(\"due_date\"),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\nexport const dailies = pgTable(\"dailies\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id, { onDelete: \"cascade\" }),\n  title: text(\"title\").notNull(),\n  description: text(\"description\"),\n  difficulty: text(\"difficulty\").notNull().default(\"medium\"), // easy, medium, hard\n  xpReward: integer(\"xp_reward\").notNull().default(20),\n  creditsReward: integer(\"credits_reward\").notNull().default(8),\n  streak: integer(\"streak\").notNull().default(0),\n  isCompletedToday: boolean(\"is_completed_today\").notNull().default(false),\n  lastCompletedDate: text(\"last_completed_date\"), // Store as YYYY-MM-DD string for easy date comparison\n  isActive: boolean(\"is_active\").notNull().default(true),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\nexport const rewards = pgTable(\"rewards\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id, { onDelete: \"cascade\" }),\n  title: text(\"title\").notNull(),\n  description: text(\"description\"),\n  cost: integer(\"cost\").notNull(),\n  icon: text(\"icon\").notNull().default(\"gift\"),\n  isAvailable: boolean(\"is_available\").notNull().default(true),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\nexport const equipment = pgTable(\"equipment\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id, { onDelete: \"cascade\" }),\n  name: text(\"name\").notNull(),\n  type: text(\"type\").notNull(), // armor, weapon, accessory\n  description: text(\"description\"),\n  stats: jsonb(\"stats\").default({}), // { defense: 15, focus: 5 }\n  icon: text(\"icon\").notNull().default(\"shield\"),\n  isEquipped: boolean(\"is_equipped\").notNull().default(false),\n  cost: integer(\"cost\").notNull().default(0),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\nexport const achievements = pgTable(\"achievements\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id, { onDelete: \"cascade\" }),\n  name: text(\"name\").notNull(),\n  description: text(\"description\").notNull(),\n  icon: text(\"icon\").notNull().default(\"award\"),\n  xpReward: integer(\"xp_reward\").notNull().default(100),\n  creditsReward: integer(\"credits_reward\").notNull().default(50),\n  unlockedAt: timestamp(\"unlocked_at\").defaultNow().notNull(),\n});\n\n// Insert schemas\nexport const insertUserSchema = createInsertSchema(users).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\n// Replit Auth specific schemas\nexport const upsertUserSchema = createInsertSchema(users).omit({\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const insertCharacterSchema = createInsertSchema(characters).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertHabitSchema = createInsertSchema(habits).omit({\n  id: true,\n  createdAt: true,\n  lastCompleted: true,\n});\n\nexport const insertTodoSchema = createInsertSchema(todos).omit({\n  id: true,\n  createdAt: true,\n  completedAt: true,\n}).extend({\n  dueDate: z.string().optional().transform((val) => val ? new Date(val) : undefined),\n});\n\nexport const insertDailySchema = createInsertSchema(dailies).omit({\n  id: true,\n  createdAt: true,\n  lastCompletedDate: true,\n});\n\nexport const insertRewardSchema = createInsertSchema(rewards).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertEquipmentSchema = createInsertSchema(equipment).omit({\n  id: true,\n  createdAt: true,\n});\n\n// Types\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type UpsertUser = z.infer<typeof upsertUserSchema>;\nexport type User = typeof users.$inferSelect;\nexport type InsertCharacter = z.infer<typeof insertCharacterSchema>;\nexport type Character = typeof characters.$inferSelect;\nexport type InsertHabit = z.infer<typeof insertHabitSchema>;\nexport type Habit = typeof habits.$inferSelect;\nexport type HabitCompletion = typeof habitCompletions.$inferSelect;\nexport type InsertTodo = z.infer<typeof insertTodoSchema>;\nexport type Todo = typeof todos.$inferSelect;\nexport type InsertDaily = z.infer<typeof insertDailySchema>;\nexport type Daily = typeof dailies.$inferSelect;\nexport type InsertReward = z.infer<typeof insertRewardSchema>;\nexport type Reward = typeof rewards.$inferSelect;\nexport type InsertEquipment = z.infer<typeof insertEquipmentSchema>;\nexport type Equipment = typeof equipment.$inferSelect;\nexport type Achievement = typeof achievements.$inferSelect;\n","size_bytes":8326},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport NotFound from \"@/pages/not-found\";\nimport Dashboard from \"@/pages/dashboard\";\nimport Landing from \"@/pages/landing\";\nimport CharacterCreation from \"@/pages/character-creation\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { useQuery } from \"@tanstack/react-query\";\n\nfunction Router() {\n  const { isAuthenticated, isLoading: authLoading } = useAuth();\n  \n  // Check if user has a character only when authenticated\n  const { data: character, isLoading: characterLoading } = useQuery({\n    queryKey: [\"/api/character\"],\n    enabled: isAuthenticated,\n    retry: false,\n  });\n\n  if (authLoading) {\n    return (\n      <div className=\"min-h-screen bg-background cyber-grid flex items-center justify-center\">\n        <div className=\"w-16 h-16 border-4 border-primary/20 border-t-primary rounded-full animate-spin\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <Switch>\n      {!isAuthenticated ? (\n        <Route path=\"/\" component={Landing} />\n      ) : characterLoading ? (\n        <div className=\"min-h-screen bg-background cyber-grid flex items-center justify-center\">\n          <div className=\"w-16 h-16 border-4 border-primary/20 border-t-primary rounded-full animate-spin\"></div>\n        </div>\n      ) : !character ? (\n        <>\n          <Route path=\"/create-character\" component={CharacterCreation} />\n          <Route path=\"/\" component={CharacterCreation} />\n        </>\n      ) : (\n        <>\n          <Route path=\"/\" component={Dashboard} />\n          <Route path=\"/habits\" component={Dashboard} />\n          <Route path=\"/dailies\" component={Dashboard} />\n          <Route path=\"/todos\" component={Dashboard} />\n          <Route path=\"/rewards\" component={Dashboard} />\n          <Route path=\"/crew\" component={Dashboard} />\n          <Route path=\"/market\" component={Dashboard} />\n        </>\n      )}\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":2361},"client/src/index.css":{"content":"@import url('https://api.fontshare.com/v2/css?f[]=satoshi@300,400,500,600,700,800,900&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Fira+Code:wght@300;400;500;600&display=swap');\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  /* Cyberpunk Color System */\n  --background: hsl(240, 30%, 4%);\n  --foreground: hsl(240, 10%, 96%);\n  --card: hsl(240, 20%, 6%);\n  --card-foreground: hsl(240, 10%, 90%);\n  --popover: hsl(240, 20%, 8%);\n  --popover-foreground: hsl(240, 10%, 95%);\n  --primary: hsl(260, 100%, 80%);\n  --primary-foreground: hsl(240, 100%, 10%);\n  --secondary: hsl(320, 80%, 60%);\n  --secondary-foreground: hsl(320, 100%, 10%);\n  --muted: hsl(240, 15%, 35%);\n  --muted-foreground: hsl(240, 10%, 65%);\n  --accent: hsl(320, 100%, 60%);\n  --accent-foreground: hsl(320, 100%, 10%);\n  --destructive: hsl(0, 62%, 60%);\n  --destructive-foreground: hsl(0, 85%, 95%);\n  --border: hsl(240, 20%, 15%);\n  --input: hsl(240, 20%, 8%);\n  --input-foreground: hsl(240, 10%, 85%);\n  --ring: hsl(260, 100%, 70%);\n  --chart-1: hsl(260, 100%, 80%);\n  --chart-2: hsl(180, 100%, 60%);\n  --chart-3: hsl(58, 100%, 70%);\n  --chart-4: hsl(320, 100%, 60%);\n  --chart-5: hsl(285, 100%, 60%);\n  --sidebar: hsl(240, 20%, 6%);\n  --sidebar-foreground: hsl(240, 10%, 90%);\n  --sidebar-primary: hsl(260, 100%, 80%);\n  --sidebar-primary-foreground: hsl(240, 100%, 10%);\n  --sidebar-accent: hsl(320, 100%, 60%);\n  --sidebar-accent-foreground: hsl(320, 100%, 10%);\n  --sidebar-border: hsl(240, 20%, 15%);\n  --sidebar-ring: hsl(260, 100%, 70%);\n\n  /* Typography */\n  --font-sans: 'Satoshi', -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: 'Fira Code', 'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', Consolas, 'Courier New', monospace;\n  --radius: 0.5rem;\n\n  /* Cyberpunk specific colors */\n  --neon-cyan: hsl(180, 100%, 60%);\n  --neon-pink: hsl(320, 100%, 70%);\n  --neon-yellow: hsl(58, 100%, 70%);\n  --retro-purple: hsl(285, 100%, 60%);\n\n  /* Shadows */\n  --shadow-2xs: 0px 2px 0px 0px hsl(260, 100%, 70%, 0.1);\n  --shadow-xs: 0px 2px 0px 0px hsl(260, 100%, 70%, 0.1);\n  --shadow-sm: 0px 2px 0px 0px hsl(260, 100%, 70%, 0.1), 0px 1px 2px -1px hsl(260, 100%, 70%, 0.1);\n  --shadow: 0px 2px 0px 0px hsl(260, 100%, 70%, 0.1), 0px 1px 2px -1px hsl(260, 100%, 70%, 0.1);\n  --shadow-md: 0px 2px 0px 0px hsl(260, 100%, 70%, 0.1), 0px 2px 4px -1px hsl(260, 100%, 70%, 0.1);\n  --shadow-lg: 0px 2px 0px 0px hsl(260, 100%, 70%, 0.1), 0px 4px 6px -1px hsl(260, 100%, 70%, 0.1);\n  --shadow-xl: 0px 2px 0px 0px hsl(260, 100%, 70%, 0.1), 0px 8px 10px -1px hsl(260, 100%, 70%, 0.1);\n  --shadow-2xl: 0px 2px 0px 0px hsl(260, 100%, 70%, 0.1);\n  --tracking-normal: 0em;\n  --spacing: 0.25rem;\n\n  /* Type scale from typography.css */\n  --type-scale-ratio: 1.25;\n  --font-size-base: clamp(1rem, 0.875rem + 0.5vw, 1.125rem);\n  --font-size-xs: calc(var(--font-size-base) / var(--type-scale-ratio) / var(--type-scale-ratio));\n  --font-size-sm: calc(var(--font-size-base) / var(--type-scale-ratio));\n  --font-size-lg: calc(var(--font-size-base) * var(--type-scale-ratio));\n  --font-size-xl: calc(var(--font-size-base) * var(--type-scale-ratio) * var(--type-scale-ratio));\n  --font-size-2xl: calc(var(--font-size-xl) * var(--type-scale-ratio));\n  --font-size-3xl: calc(var(--font-size-2xl) * var(--type-scale-ratio));\n  --font-size-4xl: calc(var(--font-size-3xl) * var(--type-scale-ratio));\n  \n  /* Font weights */\n  --font-weight-light: 300;\n  --font-weight-normal: 400;\n  --font-weight-medium: 500;\n  --font-weight-semibold: 600;\n  --font-weight-bold: 700;\n  --font-weight-extrabold: 800;\n  --font-weight-black: 900;\n\n  /* Line heights */\n  --line-height-tight: 1.1;\n  --line-height-snug: 1.2;\n  --line-height-normal: 1.4;\n  --line-height-relaxed: 1.6;\n  --line-height-loose: 1.8;\n\n  /* Letter spacing */\n  --letter-spacing-tighter: -0.05em;\n  --letter-spacing-tight: -0.025em;\n  --letter-spacing-normal: 0em;\n  --letter-spacing-wide: 0.025em;\n  --letter-spacing-wider: 0.05em;\n  --letter-spacing-widest: 0.1em;\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n    font-family: var(--font-sans);\n  }\n\n  .mono { \n    font-family: var(--font-mono);\n    font-feature-settings: 'liga' 1, 'calt' 1;\n  }\n}\n\n@layer components {\n  .glow-primary {\n    box-shadow: 0 0 20px hsla(260, 100%, 70%, 0.3);\n  }\n  \n  .glow-accent {\n    box-shadow: 0 0 20px hsla(320, 100%, 60%, 0.3);\n  }\n  \n  .glow-cyan {\n    box-shadow: 0 0 20px hsla(180, 100%, 60%, 0.3);\n  }\n  \n  .glow-yellow {\n    box-shadow: 0 0 15px hsla(58, 100%, 70%, 0.4);\n  }\n  \n  .text-glow {\n    text-shadow: 0 0 10px currentColor;\n  }\n  \n  .gradient-primary {\n    background: linear-gradient(135deg, var(--primary), var(--accent));\n  }\n  \n  .border-gradient {\n    background: linear-gradient(135deg, var(--primary), var(--accent)) padding-box,\n                linear-gradient(135deg, var(--primary), var(--accent)) border-box;\n    border: 1px solid transparent;\n  }\n  \n  .cyber-grid {\n    background-image: \n      linear-gradient(rgba(134, 116, 246, 0.1) 1px, transparent 1px),\n      linear-gradient(90deg, rgba(134, 116, 246, 0.1) 1px, transparent 1px);\n    background-size: 20px 20px;\n  }\n\n  .hp-bar::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    background: linear-gradient(90deg, #ff2975, #ff901f);\n    width: var(--hp-width, 85%);\n    border-radius: inherit;\n  }\n  \n  .xp-bar::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    background: linear-gradient(90deg, var(--primary), var(--neon-cyan));\n    width: var(--xp-width, 65%);\n    border-radius: inherit;\n  }\n\n  /* Typography classes from the provided system */\n  .text-display-xl {\n    font: var(--font-weight-black) var(--font-size-4xl)/var(--line-height-tight) var(--font-sans);\n    letter-spacing: var(--letter-spacing-tighter);\n  }\n\n  .text-display-lg {\n    font: var(--font-weight-extrabold) var(--font-size-3xl)/var(--line-height-tight) var(--font-sans);\n    letter-spacing: var(--letter-spacing-tighter);\n  }\n\n  .text-display-md {\n    font: var(--font-weight-extrabold) var(--font-size-2xl)/var(--line-height-tight) var(--font-sans);\n    letter-spacing: var(--letter-spacing-tight);\n  }\n\n  .text-display-sm {\n    font: var(--font-weight-bold) var(--font-size-xl)/var(--line-height-snug) var(--font-sans);\n    letter-spacing: var(--letter-spacing-tight);\n  }\n\n  .text-button {\n    font-family: var(--font-sans);\n    font-size: var(--font-size-sm);\n    font-weight: var(--font-weight-semibold);\n    letter-spacing: var(--letter-spacing-wide);\n    line-height: 1;\n  }\n\n  .text-button-lg {\n    font-family: var(--font-sans);\n    font-size: var(--font-size-base);\n    font-weight: var(--font-weight-semibold);\n    letter-spacing: var(--letter-spacing-wide);\n    line-height: 1;\n  }\n\n  .text-label {\n    font-family: var(--font-sans);\n    font-size: var(--font-size-xs);\n    font-weight: var(--font-weight-medium);\n    letter-spacing: var(--letter-spacing-widest);\n    text-transform: uppercase;\n  }\n}\n\n@layer utilities {\n  .animate-pulse-neon {\n    animation: pulse-neon 2s infinite;\n  }\n\n  @keyframes pulse-neon {\n    0%, 100% { opacity: 1; }\n    50% { opacity: 0.7; }\n  }\n}\n","size_bytes":7323},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/character-profile.tsx":{"content":"import type { Character } from \"@shared/schema\";\nimport { User } from \"lucide-react\";\n\ninterface CharacterProfileProps {\n  character: Character;\n}\n\nexport function CharacterProfile({ character }: CharacterProfileProps) {\n  const hpPercentage = (character.hp / character.maxHp) * 100;\n  const xpPercentage = (character.xp / character.xpToNext) * 100;\n\n  return (\n    <div className=\"p-6 border-b border-border\">\n      <div className=\"flex items-center gap-4\">\n        {/* Cyberpunk avatar placeholder with neon border */}\n        <div className=\"relative\">\n          <div className=\"w-16 h-16 rounded-lg bg-gradient-to-br from-primary/20 to-accent/20 border border-primary/50 glow-primary flex items-center justify-center\">\n            <User className=\"w-8 h-8 text-primary\" />\n          </div>\n          <div className=\"absolute -top-1 -right-1 w-4 h-4 bg-accent rounded-full animate-pulse-neon\"></div>\n        </div>\n        <div>\n          <h2 className=\"text-lg font-bold text-primary text-glow\" data-testid=\"text-character-name\">\n            {character.name}\n          </h2>\n          <p className=\"text-sm text-muted-foreground mono\">\n            Level <span data-testid=\"text-character-level\">{character.level}</span> NetRunner\n          </p>\n        </div>\n      </div>\n      \n      {/* Stats Bars */}\n      <div className=\"mt-4 space-y-3\">\n        {/* HP Bar */}\n        <div>\n          <div className=\"flex justify-between text-xs mb-1\">\n            <span className=\"text-muted-foreground\">HEALTH</span>\n            <span className=\"mono text-destructive\" data-testid=\"text-character-hp\">\n              {character.hp}/{character.maxHp}\n            </span>\n          </div>\n          <div className=\"relative h-2 bg-muted/30 rounded-full overflow-hidden\">\n            <div \n              className=\"hp-bar absolute inset-0\" \n              style={{ \"--hp-width\": `${hpPercentage}%` } as React.CSSProperties}\n            ></div>\n          </div>\n        </div>\n        \n        {/* XP Bar */}\n        <div>\n          <div className=\"flex justify-between text-xs mb-1\">\n            <span className=\"text-muted-foreground\">EXPERIENCE</span>\n            <span className=\"mono text-primary\" data-testid=\"text-character-xp\">\n              {character.xp.toLocaleString()}/{character.xpToNext.toLocaleString()}\n            </span>\n          </div>\n          <div className=\"relative h-2 bg-muted/30 rounded-full overflow-hidden glow-primary\">\n            <div \n              className=\"xp-bar absolute inset-0\" \n              style={{ \"--xp-width\": `${xpPercentage}%` } as React.CSSProperties}\n            ></div>\n          </div>\n        </div>\n        \n        {/* Currency */}\n        <div className=\"flex justify-between items-center pt-2\">\n          <span className=\"text-xs text-muted-foreground\">CREDITS</span>\n          <span className=\"mono text-neon-yellow font-bold\" data-testid=\"text-character-credits\">\n            ₡{character.credits.toLocaleString()}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":3031},"client/src/components/habit-tracker.tsx":{"content":"import { useState } from \"react\";\nimport { useHabits } from \"@/hooks/use-habits\";\nimport { Button } from \"@/components/ui/button\";\nimport { Plus, Minus, Flame, Calendar, MoreHorizontal } from \"lucide-react\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\nimport { HabitForm } from \"@/components/habit-form\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { formatDistanceToNow } from \"date-fns\";\n\nexport function HabitTracker() {\n  const { habits, completeHabit, isLoading } = useHabits();\n  const { toast } = useToast();\n  const [isCreateDialogOpen, setIsCreateDialogOpen] = useState(false);\n\n  const handleComplete = async (habitId: string) => {\n    try {\n      await completeHabit(habitId);\n      toast({\n        title: \"Habit Completed!\",\n        description: \"XP and credits gained\",\n      });\n    } catch (error) {\n      toast({\n        variant: \"destructive\",\n        title: \"Error\",\n        description: \"Failed to complete habit\",\n      });\n    }\n  };\n\n  const getColorClasses = (color: string) => {\n    switch (color) {\n      case \"primary\":\n        return \"bg-primary glow-primary\";\n      case \"accent\":\n        return \"bg-accent glow-accent\";\n      case \"cyan\":\n        return \"bg-neon-cyan glow-cyan\";\n      case \"yellow\":\n        return \"bg-neon-yellow\";\n      default:\n        return \"bg-primary glow-primary\";\n    }\n  };\n\n  const getDifficultyLabel = (difficulty: string) => {\n    switch (difficulty) {\n      case \"easy\":\n        return \"EASY\";\n      case \"hard\":\n        return \"HARD\";\n      default:\n        return \"MEDIUM\";\n    }\n  };\n\n  const canCompleteToday = (lastCompleted: string | Date | null) => {\n    if (!lastCompleted) return true;\n    \n    const lastCompletedDate = lastCompleted instanceof Date ? lastCompleted : new Date(lastCompleted);\n    const today = new Date();\n    \n    // Check if last completed was today\n    return lastCompletedDate.toDateString() !== today.toDateString();\n  };\n\n  const getStreakColor = (streak: number) => {\n    if (streak >= 30) return \"text-neon-yellow\";\n    if (streak >= 14) return \"text-accent\";\n    if (streak >= 7) return \"text-primary\";\n    return \"text-muted-foreground\";\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"bg-card rounded-lg border border-border p-6\">\n        <div className=\"text-center text-muted-foreground\">Loading habits...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-card rounded-lg border border-border p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <h3 className=\"text-xl font-semibold text-primary\">NEURAL HABITS</h3>\n        <Dialog open={isCreateDialogOpen} onOpenChange={setIsCreateDialogOpen}>\n          <DialogTrigger asChild>\n            <Button \n              className=\"px-3 py-1 bg-primary/10 text-primary rounded border border-primary/20 text-sm hover:bg-primary/20 transition-colors\"\n              data-testid=\"button-new-habit\"\n            >\n              + NEW HABIT\n            </Button>\n          </DialogTrigger>\n          <DialogContent className=\"bg-card border-border max-w-lg\">\n            <DialogHeader>\n              <DialogTitle className=\"text-primary\">Create Neural Habit</DialogTitle>\n            </DialogHeader>\n            <HabitForm onSuccess={() => setIsCreateDialogOpen(false)} />\n          </DialogContent>\n        </Dialog>\n      </div>\n      \n      <div className=\"space-y-4\">\n        {habits.length === 0 ? (\n          <div className=\"text-center text-muted-foreground py-8\">\n            No neural habits established. Create your first habit to start building behavioral patterns!\n          </div>\n        ) : (\n          habits.map((habit) => {\n            const canComplete = canCompleteToday(habit.lastCompleted);\n            \n            return (\n              <div \n                key={habit.id}\n                className=\"group p-4 bg-background rounded-lg border border-border hover:border-primary/30 transition-all\"\n                data-testid={`habit-${habit.id}`}\n              >\n                <div className=\"flex items-center justify-between mb-3\">\n                  <div className=\"flex items-center gap-3\">\n                    <div className={`w-4 h-4 rounded-full ${getColorClasses(habit.color)}`}></div>\n                    <div>\n                      <h4 className=\"font-medium text-foreground\" data-testid={`habit-title-${habit.id}`}>\n                        {habit.title}\n                      </h4>\n                      {habit.description && (\n                        <p className=\"text-xs text-muted-foreground mt-1\">\n                          {habit.description}\n                        </p>\n                      )}\n                    </div>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <Button\n                      size=\"sm\"\n                      onClick={() => canComplete && handleComplete(habit.id)}\n                      disabled={!canComplete}\n                      className={`w-8 h-8 rounded transition-colors ${\n                        canComplete \n                          ? \"bg-accent/10 border border-accent/30 text-accent hover:bg-accent/20\" \n                          : \"bg-accent/5 border border-accent/10 text-accent/50 cursor-not-allowed\"\n                      }`}\n                      data-testid={`button-complete-habit-${habit.id}`}\n                    >\n                      <Plus className=\"w-4 h-4\" />\n                    </Button>\n                    <div className=\"opacity-0 group-hover:opacity-100 transition-opacity\">\n                      <Button \n                        variant=\"ghost\" \n                        size=\"sm\"\n                        className=\"p-1 hover:bg-muted/20 rounded\"\n                        data-testid={`button-habit-menu-${habit.id}`}\n                      >\n                        <MoreHorizontal className=\"w-4 h-4\" />\n                      </Button>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-center justify-between text-xs\">\n                  <div className=\"flex items-center gap-4\">\n                    <div className=\"flex items-center gap-1\">\n                      <Flame className={`w-3 h-3 ${getStreakColor(habit.streak)}`} />\n                      <span className={`mono ${getStreakColor(habit.streak)}`} data-testid={`habit-streak-${habit.id}`}>\n                        {habit.streak} day streak\n                      </span>\n                    </div>\n                    \n                    <div className=\"flex items-center gap-1 text-muted-foreground\">\n                      <span className=\"mono\">{getDifficultyLabel(habit.difficulty)}</span>\n                      <span>•</span>\n                      <span className=\"mono text-accent\">+{habit.xpReward} XP</span>\n                      <span>•</span>\n                      <span className=\"mono text-neon-cyan\">+₡{habit.creditsReward}</span>\n                    </div>\n                  </div>\n                  \n                  {habit.lastCompleted && (\n                    <div className=\"flex items-center gap-1 text-muted-foreground\">\n                      <Calendar className=\"w-3 h-3\" />\n                      <span className=\"mono text-xs\">\n                        {formatDistanceToNow(new Date(habit.lastCompleted), { addSuffix: true })}\n                      </span>\n                    </div>\n                  )}\n                  \n                  {!canComplete && (\n                    <span className=\"text-xs text-accent mono\">\n                      ✓ COMPLETED TODAY\n                    </span>\n                  )}\n                </div>\n              </div>\n            );\n          })\n        )}\n      </div>\n    </div>\n  );\n}\n","size_bytes":7820},"client/src/components/loadout-section.tsx":{"content":"import { Shield, Zap, Cpu } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\n\nexport function LoadoutSection() {\n  const equipment = [\n    {\n      id: \"1\",\n      name: \"Neural Firewall v2.1\",\n      description: \"+15 Defense • +5 Focus\",\n      icon: Shield,\n      equipped: true,\n      rarity: \"primary\"\n    },\n    {\n      id: \"2\",\n      name: \"Quantum Processor\",\n      description: \"+20 Intelligence • +10 XP Boost\",\n      icon: Zap,\n      equipped: true,\n      rarity: \"accent\"\n    },\n    {\n      id: \"3\",\n      name: \"Matrix Interface\",\n      description: \"+25 Skill • +15% Habit Bonus\",\n      icon: Cpu,\n      equipped: true,\n      rarity: \"cyan\"\n    },\n  ];\n\n  const getRarityClasses = (rarity: string) => {\n    switch (rarity) {\n      case \"primary\":\n        return \"from-primary/20 to-accent/20 border-primary/50\";\n      case \"accent\":\n        return \"from-accent/20 to-primary/20 border-accent/50\";\n      case \"cyan\":\n        return \"from-neon-cyan/20 to-accent/20 border-neon-cyan/50 glow-cyan\";\n      default:\n        return \"from-primary/20 to-accent/20 border-primary/50\";\n    }\n  };\n\n  const getRarityTextColor = (rarity: string) => {\n    switch (rarity) {\n      case \"primary\":\n        return \"text-primary\";\n      case \"accent\":\n        return \"text-accent\";\n      case \"cyan\":\n        return \"text-neon-cyan\";\n      default:\n        return \"text-primary\";\n    }\n  };\n\n  return (\n    <div className=\"bg-card rounded-lg border border-border p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <h3 className=\"text-xl font-semibold text-primary\">LOADOUT</h3>\n        <Button \n          className=\"px-3 py-1 bg-primary/10 text-primary rounded border border-primary/20 text-sm hover:bg-primary/20 transition-colors\"\n          data-testid=\"button-customize-loadout\"\n        >\n          CUSTOMIZE\n        </Button>\n      </div>\n      \n      <div className=\"space-y-4\">\n        {equipment.map((item) => {\n          const Icon = item.icon;\n          \n          return (\n            <div \n              key={item.id}\n              className=\"flex items-center gap-4 p-3 bg-muted/10 rounded border border-muted/20\"\n              data-testid={`equipment-${item.id}`}\n            >\n              <div className={`w-10 h-10 bg-gradient-to-br rounded border flex items-center justify-center ${getRarityClasses(item.rarity)}`}>\n                <Icon className={`w-5 h-5 ${getRarityTextColor(item.rarity)}`} />\n              </div>\n              <div className=\"flex-1\">\n                <h4 className=\"font-medium text-sm\" data-testid={`equipment-name-${item.id}`}>\n                  {item.name}\n                </h4>\n                <p className=\"text-xs text-muted-foreground\" data-testid={`equipment-description-${item.id}`}>\n                  {item.description}\n                </p>\n              </div>\n              <span className={`text-xs mono ${getRarityTextColor(item.rarity)}`} data-testid={`equipment-status-${item.id}`}>\n                {item.equipped ? \"EQUIPPED\" : \"AVAILABLE\"}\n              </span>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","size_bytes":3141},"client/src/components/mission-control.tsx":{"content":"import { useState } from \"react\";\nimport { useTodos } from \"@/hooks/use-todos\";\nimport { Button } from \"@/components/ui/button\";\nimport { Check, MoreHorizontal, Calendar, AlertTriangle } from \"lucide-react\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\nimport { TodoForm } from \"@/components/todo-form\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { format, isPast, isToday } from \"date-fns\";\n\nexport function MissionControl() {\n  const { todos, completeTodo, isLoading } = useTodos();\n  const { toast } = useToast();\n  const [isCreateDialogOpen, setIsCreateDialogOpen] = useState(false);\n\n  const handleComplete = async (todoId: string) => {\n    try {\n      await completeTodo(todoId);\n      toast({\n        title: \"Mission Completed!\",\n        description: \"XP and credits gained\",\n      });\n    } catch (error) {\n      toast({\n        variant: \"destructive\",\n        title: \"Error\",\n        description: \"Failed to complete mission\",\n      });\n    }\n  };\n\n  const getPriorityLabel = (priority: string) => {\n    switch (priority) {\n      case \"high\":\n        return \"HIGH PRIORITY\";\n      case \"medium\":\n        return \"MEDIUM\";\n      case \"low\":\n        return \"LOW\";\n      default:\n        return \"MEDIUM\";\n    }\n  };\n\n  const getPriorityColor = (priority: string) => {\n    switch (priority) {\n      case \"high\":\n        return \"text-destructive\";\n      case \"medium\":\n        return \"text-accent\";\n      case \"low\":\n        return \"text-primary\";\n      default:\n        return \"text-accent\";\n    }\n  };\n\n  const getDueDateInfo = (dueDate: string | Date | null) => {\n    if (!dueDate) return null;\n    \n    const date = dueDate instanceof Date ? dueDate : new Date(dueDate);\n    const isOverdue = isPast(date) && !isToday(date);\n    const isDueToday = isToday(date);\n    \n    return {\n      date,\n      isOverdue,\n      isDueToday,\n      formatted: format(date, \"MMM d\"),\n    };\n  };\n\n  // Separate completed and active todos, then sort by priority and due date\n  const activeTodos = todos.filter(t => !t.isCompleted).sort((a, b) => {\n    // First sort by priority\n    const priorityOrder = { high: 3, medium: 2, low: 1 };\n    const aPriority = priorityOrder[a.priority as keyof typeof priorityOrder] || 1;\n    const bPriority = priorityOrder[b.priority as keyof typeof priorityOrder] || 1;\n    \n    if (aPriority !== bPriority) return bPriority - aPriority;\n    \n    // Then by due date (overdue first, then today, then future)\n    const aDue = a.dueDate ? new Date(a.dueDate) : null;\n    const bDue = b.dueDate ? new Date(b.dueDate) : null;\n    \n    if (aDue && bDue) return aDue.getTime() - bDue.getTime();\n    if (aDue) return -1;\n    if (bDue) return 1;\n    return 0;\n  });\n  \n  const completedTodos = todos.filter(t => t.isCompleted);\n\n  if (isLoading) {\n    return (\n      <div className=\"bg-card rounded-lg border border-border p-6\">\n        <div className=\"text-center text-muted-foreground\">Loading missions...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-card rounded-lg border border-border p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <h3 className=\"text-xl font-semibold text-accent\">MISSION CONTROL</h3>\n        <Dialog open={isCreateDialogOpen} onOpenChange={setIsCreateDialogOpen}>\n          <DialogTrigger asChild>\n            <Button \n              className=\"px-3 py-1 bg-accent/10 text-accent rounded border border-accent/20 text-sm hover:bg-accent/20 transition-colors\"\n              data-testid=\"button-new-mission\"\n            >\n              + NEW MISSION\n            </Button>\n          </DialogTrigger>\n          <DialogContent className=\"bg-card border-border max-w-lg\">\n            <DialogHeader>\n              <DialogTitle className=\"text-primary\">Create New Mission</DialogTitle>\n            </DialogHeader>\n            <TodoForm onSuccess={() => setIsCreateDialogOpen(false)} />\n          </DialogContent>\n        </Dialog>\n      </div>\n      \n      <div className=\"space-y-3\">\n        {todos.length === 0 ? (\n          <div className=\"text-center text-muted-foreground py-8\">\n            No active missions. Create your first mission to start earning rewards!\n          </div>\n        ) : (\n          <>\n            {/* Active Missions */}\n            {activeTodos.length > 0 && (\n              <div className=\"space-y-3\">\n                <h4 className=\"text-sm font-medium text-primary border-b border-border pb-2\">\n                  ACTIVE MISSIONS ({activeTodos.length})\n                </h4>\n                {activeTodos.map((todo) => {\n                  const dueDateInfo = getDueDateInfo(todo.dueDate);\n                  \n                  return (\n                    <div \n                      key={todo.id}\n                      className={`flex items-center gap-3 p-3 rounded border transition-all group ${\n                        todo.isCompleted \n                          ? \"bg-accent/5 border-accent/20 hover:border-accent/40\" \n                          : \"bg-muted/10 border-muted/20 hover:border-accent/30\"\n                      }`}\n                      data-testid={`todo-${todo.id}`}\n                    >\n                      <Button\n                        size=\"sm\"\n                        onClick={() => !todo.isCompleted && handleComplete(todo.id)}\n                        disabled={todo.isCompleted}\n                        className={`w-5 h-5 rounded border transition-colors ${\n                          todo.isCompleted\n                            ? \"bg-accent/20 border-accent flex items-center justify-center\"\n                            : \"border-accent/50 hover:bg-accent/20\"\n                        }`}\n                        data-testid={`button-complete-todo-${todo.id}`}\n                      >\n                        {todo.isCompleted && <Check className=\"w-3 h-3 text-accent\" />}\n                      </Button>\n                      <div className=\"flex-1\">\n                        <div \n                          className={`font-medium text-sm ${\n                            todo.isCompleted ? \"line-through text-muted-foreground\" : \"\"\n                          }`}\n                          data-testid={`todo-title-${todo.id}`}\n                        >\n                          {todo.title}\n                        </div>\n                        <div className=\"text-xs text-muted-foreground mono flex items-center gap-2\">\n                          <span className={getPriorityColor(todo.priority)}>\n                            {getPriorityLabel(todo.priority)}\n                          </span>\n                          <span>•</span>\n                          <span>+{todo.xpReward} XP • +₡{todo.creditsReward}</span>\n                          {dueDateInfo && (\n                            <>\n                              <span>•</span>\n                              <div className={`flex items-center gap-1 ${\n                                dueDateInfo.isOverdue ? \"text-destructive\" :\n                                dueDateInfo.isDueToday ? \"text-accent\" :\n                                \"text-muted-foreground\"\n                              }`}>\n                                {dueDateInfo.isOverdue && <AlertTriangle className=\"w-3 h-3\" />}\n                                <Calendar className=\"w-3 h-3\" />\n                                <span>{dueDateInfo.formatted}</span>\n                                {dueDateInfo.isOverdue && <span className=\"font-medium\">OVERDUE</span>}\n                                {dueDateInfo.isDueToday && <span className=\"font-medium\">DUE TODAY</span>}\n                              </div>\n                            </>\n                          )}\n                        </div>\n                      </div>\n                      <div className=\"opacity-0 group-hover:opacity-100 transition-opacity\">\n                        <Button \n                          variant=\"ghost\" \n                          size=\"sm\"\n                          className=\"p-1 hover:bg-muted/20 rounded\"\n                          data-testid={`button-todo-menu-${todo.id}`}\n                        >\n                          <MoreHorizontal className=\"w-4 h-4\" />\n                        </Button>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            )}\n\n            {/* Completed Missions */}\n            {completedTodos.length > 0 && (\n              <div className=\"space-y-3 mt-6\">\n                <h4 className=\"text-sm font-medium text-muted-foreground border-b border-border pb-2\">\n                  COMPLETED MISSIONS ({completedTodos.length})\n                </h4>\n                {completedTodos.slice(0, 5).map((todo) => (\n            <div \n              key={todo.id}\n              className={`flex items-center gap-3 p-3 rounded border transition-all group ${\n                todo.isCompleted \n                  ? \"bg-accent/5 border-accent/20 hover:border-accent/40\" \n                  : \"bg-muted/10 border-muted/20 hover:border-accent/30\"\n              }`}\n              data-testid={`todo-${todo.id}`}\n            >\n              <Button\n                size=\"sm\"\n                onClick={() => !todo.isCompleted && handleComplete(todo.id)}\n                disabled={todo.isCompleted}\n                className={`w-5 h-5 rounded border transition-colors ${\n                  todo.isCompleted\n                    ? \"bg-accent/20 border-accent flex items-center justify-center\"\n                    : \"border-accent/50 hover:bg-accent/20\"\n                }`}\n                data-testid={`button-complete-todo-${todo.id}`}\n              >\n                {todo.isCompleted && <Check className=\"w-3 h-3 text-accent\" />}\n              </Button>\n              <div className=\"flex-1\">\n                <div \n                  className={`font-medium text-sm ${\n                    todo.isCompleted ? \"line-through text-muted-foreground\" : \"\"\n                  }`}\n                  data-testid={`todo-title-${todo.id}`}\n                >\n                  {todo.title}\n                </div>\n                <div className=\"text-xs text-muted-foreground mono\">\n                  <span className={getPriorityColor(todo.priority)}>\n                    {getPriorityLabel(todo.priority)}\n                  </span>\n                  {\" • +\"}\n                  {todo.xpReward} XP • +₡{todo.creditsReward}\n                </div>\n              </div>\n              <div className=\"opacity-0 group-hover:opacity-100 transition-opacity\">\n                <Button \n                  variant=\"ghost\" \n                  size=\"sm\"\n                  className=\"p-1 hover:bg-muted/20 rounded\"\n                  data-testid={`button-todo-menu-${todo.id}`}\n                >\n                  <MoreHorizontal className=\"w-4 h-4\" />\n                </Button>\n              </div>\n            </div>\n                ))}\n                {completedTodos.length > 5 && (\n                  <div className=\"text-center text-xs text-muted-foreground py-2\">\n                    ... and {completedTodos.length - 5} more completed missions\n                  </div>\n                )}\n              </div>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n","size_bytes":11280},"client/src/components/navigation.tsx":{"content":"import { Grid3X3, Target, CheckSquare, ListTodo, Gift, Users, ShoppingBag } from \"lucide-react\";\nimport { Link, useLocation } from \"wouter\";\n\nconst navigationItems = [\n  { icon: Grid3X3, label: \"DASHBOARD\", href: \"/\" },\n  { icon: Target, label: \"HABITS\", href: \"/habits\" },\n  { icon: CheckSquare, label: \"DAILIES\", href: \"/dailies\" },\n  { icon: ListTodo, label: \"TO-DOS\", href: \"/todos\" },\n  { icon: Gift, label: \"REWARDS\", href: \"/rewards\" },\n  { icon: Users, label: \"CREW\", href: \"/crew\" },\n  { icon: ShoppingBag, label: \"MARKET\", href: \"/market\" },\n];\n\nexport function Navigation() {\n  const [location] = useLocation();\n\n  return (\n    <nav className=\"flex-1 p-4\">\n      <ul className=\"space-y-2\">\n        {navigationItems.map((item) => {\n          const Icon = item.icon;\n          const isActive = location === item.href;\n          return (\n            <li key={item.label}>\n              <Link \n                href={item.href}\n                className={`flex items-center gap-3 px-3 py-2 rounded-md transition-colors ${\n                  isActive \n                    ? \"bg-primary/10 text-primary border border-primary/20 glow-primary\" \n                    : \"text-muted-foreground hover:text-foreground hover:bg-muted/10\"\n                }`}\n                data-testid={`nav-${item.label.toLowerCase().replace(/[^a-z0-9]/g, '-')}`}\n              >\n                <Icon className=\"w-4 h-4\" />\n                <span className=\"font-medium\">{item.label}</span>\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </nav>\n  );\n}\n","size_bytes":1565},"client/src/components/progress-overview.tsx":{"content":"import { Calendar, TrendingUp, Award } from \"lucide-react\";\n\nexport function ProgressOverview() {\n  // Mock data for now - in real app this would come from hooks\n  const weekData = [\n    { day: \"MON\", percentage: 90 },\n    { day: \"TUE\", percentage: 75 },\n    { day: \"WED\", percentage: 100 },\n    { day: \"THU\", percentage: 85 },\n    { day: \"FRI\", percentage: 65 },\n    { day: \"SAT\", percentage: 0 },\n    { day: \"SUN\", percentage: 0 },\n  ];\n\n  const dailyHabits = [\n    { id: \"1\", name: \"Morning Workout\", completed: false },\n    { id: \"2\", name: \"Code Review\", completed: false },\n    { id: \"3\", name: \"Meditation\", completed: true },\n  ];\n\n  return (\n    <section className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n      {/* Daily Progress */}\n      <div className=\"bg-card rounded-lg border border-border p-6 glow-primary\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h3 className=\"text-lg font-semibold text-primary\">DAILY SYNC</h3>\n          <Calendar className=\"w-5 h-5 text-primary\" />\n        </div>\n        <div className=\"space-y-4\">\n          {dailyHabits.map((habit) => (\n            <div \n              key={habit.id}\n              className={`flex items-center justify-between p-3 rounded border ${\n                habit.completed \n                  ? \"bg-accent/10 border-accent/30\" \n                  : \"bg-muted/20 border-muted/30\"\n              }`}\n              data-testid={`daily-habit-${habit.id}`}\n            >\n              <div className=\"flex items-center gap-3\">\n                <div className=\"w-2 h-2 bg-accent rounded-full animate-pulse-neon\"></div>\n                <span className={`text-sm ${habit.completed ? \"line-through text-muted-foreground\" : \"\"}`}>\n                  {habit.name}\n                </span>\n              </div>\n              <div className={`w-6 h-6 rounded border flex items-center justify-center ${\n                habit.completed \n                  ? \"bg-accent/20 border-accent\" \n                  : \"border-primary/50 hover:bg-primary/20 transition-colors cursor-pointer\"\n              }`}>\n                {habit.completed && <div className=\"w-4 h-4 text-accent\">✓</div>}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Weekly Progress Chart */}\n      <div className=\"bg-card rounded-lg border border-border p-6\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h3 className=\"text-lg font-semibold text-accent\">WEEK ANALYSIS</h3>\n          <TrendingUp className=\"w-5 h-5 text-accent\" />\n        </div>\n        <div className=\"space-y-3\">\n          {weekData.map((day) => (\n            <div key={day.day} className=\"flex items-center justify-between\">\n              <span className=\"text-xs text-muted-foreground mono\">{day.day}</span>\n              <div className=\"flex-1 mx-2 h-2 bg-muted/30 rounded-full overflow-hidden\">\n                <div \n                  className=\"h-full bg-gradient-to-r from-primary to-accent rounded-full transition-all duration-500\"\n                  style={{ width: `${day.percentage}%` }}\n                ></div>\n              </div>\n              <span className=\"text-xs mono\">{day.percentage}%</span>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Achievement Showcase */}\n      <div className=\"bg-card rounded-lg border border-border p-6 glow-accent\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h3 className=\"text-lg font-semibold text-accent\">RECENT UNLOCK</h3>\n          <Award className=\"w-5 h-5 text-accent\" />\n        </div>\n        <div className=\"text-center\">\n          <div className=\"w-16 h-16 mx-auto mb-3 bg-gradient-to-br from-accent/20 to-primary/20 rounded-lg border border-accent/50 glow-accent flex items-center justify-center\">\n            <div className=\"w-8 h-8 text-accent\">⚡</div>\n          </div>\n          <h4 className=\"font-semibold text-accent mb-1\" data-testid=\"text-achievement-name\">\n            Code Warrior\n          </h4>\n          <p className=\"text-xs text-muted-foreground\" data-testid=\"text-achievement-description\">\n            Complete 100 coding tasks\n          </p>\n          <div className=\"mt-3 text-xs mono text-primary\">+500 XP • +₡250</div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":4303},"client/src/components/rewards-section.tsx":{"content":"import { Coffee, Gamepad2, ShoppingBag, Music } from \"lucide-react\";\n\nexport function RewardsSection() {\n  const rewards = [\n    { id: \"1\", name: \"Coffee Break\", cost: 25, icon: Coffee },\n    { id: \"2\", name: \"Game Session\", cost: 75, icon: Gamepad2 },\n    { id: \"3\", name: \"New Gear\", cost: 200, icon: ShoppingBag },\n    { id: \"4\", name: \"Music Album\", cost: 50, icon: Music },\n  ];\n\n  // Mock available credits\n  const availableCredits = 1247;\n\n  return (\n    <div className=\"bg-card rounded-lg border border-border p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <h3 className=\"text-xl font-semibold text-neon-yellow text-glow\">REWARD CACHE</h3>\n        <div className=\"mono text-neon-yellow\" data-testid=\"text-available-credits\">\n          ₡{availableCredits.toLocaleString()} available\n        </div>\n      </div>\n      \n      <div className=\"grid grid-cols-2 gap-4\">\n        {rewards.map((reward) => {\n          const Icon = reward.icon;\n          const canAfford = availableCredits >= reward.cost;\n          \n          return (\n            <div \n              key={reward.id}\n              className={`p-4 bg-muted/10 rounded-lg border transition-all cursor-pointer group ${\n                canAfford \n                  ? \"border-muted/20 hover:border-neon-yellow/30\" \n                  : \"border-muted/20 opacity-50\"\n              }`}\n              data-testid={`reward-${reward.id}`}\n            >\n              <div className=\"w-12 h-12 mx-auto mb-3 bg-gradient-to-br from-neon-yellow/20 to-accent/20 rounded-lg border border-neon-yellow/50 flex items-center justify-center glow-yellow group-hover:shadow-lg group-hover:shadow-neon-yellow/20 transition-all duration-300\">\n                <Icon className=\"w-6 h-6 text-neon-yellow drop-shadow-[0_0_8px_rgba(255,215,0,0.6)] group-hover:drop-shadow-[0_0_12px_rgba(255,215,0,0.8)] transition-all duration-300\" />\n              </div>\n              <h4 className=\"text-sm font-medium text-center mb-1\" data-testid={`reward-name-${reward.id}`}>\n                {reward.name}\n              </h4>\n              <p className=\"text-xs text-center text-muted-foreground mono\" data-testid={`reward-cost-${reward.id}`}>\n                ₡{reward.cost}\n              </p>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","size_bytes":2325},"client/src/hooks/use-character.ts":{"content":"import { useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { getAuthHeaders } from \"@/lib/auth\";\nimport type { Character } from \"@shared/schema\";\n\nexport function useCharacter() {\n  const queryClient = useQueryClient();\n\n  const { data: character, isLoading, error } = useQuery<Character>({\n    queryKey: [\"/api/character\"],\n    queryFn: async () => {\n      const response = await fetch(\"/api/character\", {\n        headers: getAuthHeaders(),\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch character\");\n      }\n      return response.json();\n    },\n    staleTime: 1000 * 60 * 5, // 5 minutes\n  });\n\n  const updateCharacter = (updates: Partial<Character>) => {\n    if (character) {\n      queryClient.setQueryData([\"/api/character\"], { ...character, ...updates });\n    }\n  };\n\n  return {\n    character,\n    isLoading,\n    error,\n    updateCharacter,\n  };\n}\n","size_bytes":897},"client/src/hooks/use-habits.ts":{"content":"import { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { getAuthHeaders } from \"@/lib/auth\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport type { Habit, HabitCompletion } from \"@shared/schema\";\n\nexport function useHabits() {\n  const queryClient = useQueryClient();\n\n  const { data: habits = [], isLoading } = useQuery<Habit[]>({\n    queryKey: [\"/api/habits\"],\n    queryFn: async () => {\n      const response = await fetch(\"/api/habits\", {\n        headers: getAuthHeaders(),\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch habits\");\n      }\n      return response.json();\n    },\n  });\n\n  const completeHabitMutation = useMutation({\n    mutationFn: async (habitId: string) => {\n      const response = await apiRequest(\"POST\", `/api/habits/${habitId}/complete`);\n      return response.json();\n    },\n    onSuccess: (completion: HabitCompletion, habitId: string) => {\n      // Update habit streak and last completed\n      queryClient.setQueryData([\"/api/habits\"], (oldHabits: Habit[] = []) =>\n        oldHabits.map((habit) =>\n          habit.id === habitId\n            ? { ...habit, streak: habit.streak + 1, lastCompleted: new Date().toISOString() }\n            : habit\n        )\n      );\n      \n      // Invalidate character data to refresh XP/credits\n      queryClient.invalidateQueries({ queryKey: [\"/api/character\"] });\n    },\n  });\n\n  const createHabitMutation = useMutation({\n    mutationFn: async (habitData: { title: string; description?: string; difficulty: string; color: string }) => {\n      const response = await apiRequest(\"POST\", \"/api/habits\", habitData);\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/habits\"] });\n    },\n  });\n\n  return {\n    habits,\n    isLoading,\n    completeHabit: completeHabitMutation.mutateAsync,\n    createHabit: createHabitMutation.mutateAsync,\n    isCompleting: completeHabitMutation.isPending,\n    isCreating: createHabitMutation.isPending,\n  };\n}\n","size_bytes":2026},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/hooks/use-todos.ts":{"content":"import { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { getAuthHeaders } from \"@/lib/auth\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport type { Todo } from \"@shared/schema\";\n\nexport function useTodos() {\n  const queryClient = useQueryClient();\n\n  const { data: todos = [], isLoading } = useQuery<Todo[]>({\n    queryKey: [\"/api/todos\"],\n    queryFn: async () => {\n      const response = await fetch(\"/api/todos\", {\n        headers: getAuthHeaders(),\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch todos\");\n      }\n      return response.json();\n    },\n  });\n\n  const completeTodoMutation = useMutation({\n    mutationFn: async (todoId: string) => {\n      const response = await apiRequest(\"POST\", `/api/todos/${todoId}/complete`);\n      return response.json();\n    },\n    onSuccess: (completedTodo: Todo) => {\n      // Update todo completion status\n      queryClient.setQueryData([\"/api/todos\"], (oldTodos: Todo[] = []) =>\n        oldTodos.map((todo) =>\n          todo.id === completedTodo.id\n            ? { ...todo, isCompleted: true, completedAt: new Date().toISOString() }\n            : todo\n        )\n      );\n      \n      // Invalidate character data to refresh XP/credits\n      queryClient.invalidateQueries({ queryKey: [\"/api/character\"] });\n    },\n  });\n\n  const createTodoMutation = useMutation({\n    mutationFn: async (todoData: { title: string; description?: string; priority: string; dueDate?: string }) => {\n      const response = await apiRequest(\"POST\", \"/api/todos\", todoData);\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/todos\"] });\n    },\n  });\n\n  return {\n    todos,\n    isLoading,\n    completeTodo: completeTodoMutation.mutateAsync,\n    createTodo: createTodoMutation.mutateAsync,\n    isCompleting: completeTodoMutation.isPending,\n    isCreating: createTodoMutation.isPending,\n  };\n}\n","size_bytes":1945},"client/src/hooks/useAuth.ts":{"content":"import { useQuery } from \"@tanstack/react-query\";\n\nexport function useAuth() {\n  const { data: user, isLoading, error } = useQuery({\n    queryKey: [\"/api/auth/user\"],\n    retry: false,\n    refetchOnWindowFocus: false,\n  });\n\n  return {\n    user,\n    isLoading,\n    isAuthenticated: !!user && !error,\n  };\n}","size_bytes":306},"client/src/lib/auth.ts":{"content":"// Legacy auth file - functionality moved to useAuth hook\n// This file is kept for backward compatibility during migration\n\nexport function getAuthHeaders(): Record<string, string> {\n  // Headers are no longer needed with Replit Auth session-based authentication\n  return {};\n}\n","size_bytes":278},"client/src/lib/authUtils.ts":{"content":"export function isUnauthorizedError(error: Error): boolean {\n  return /^401: .*Unauthorized/.test(error.message);\n}","size_bytes":115},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const headers: Record<string, string> = {};\n  \n  if (data) {\n    headers[\"Content-Type\"] = \"application/json\";\n  }\n\n  const res = await fetch(url, {\n    method,\n    headers,\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1449},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/dashboard.tsx":{"content":"import { CharacterProfile } from \"@/components/character-profile\";\nimport { Navigation } from \"@/components/navigation\";\nimport { ProgressOverview } from \"@/components/progress-overview\";\nimport { HabitTracker } from \"@/components/habit-tracker\";\nimport { MissionControl } from \"@/components/mission-control\";\nimport { DailiesTracker } from \"@/components/dailies-tracker\";\nimport { RewardsSection } from \"@/components/rewards-section\";\nimport { LoadoutSection } from \"@/components/loadout-section\";\nimport { useCharacter } from \"@/hooks/use-character\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { Settings, Calendar, Target, TrendingUp, LogOut } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { useLocation } from \"wouter\";\nimport { \n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\n\nexport default function Dashboard() {\n  const { character, isLoading } = useCharacter();\n  const [location] = useLocation();\n  \n  const getPageTitle = () => {\n    switch (location) {\n      case \"/habits\": return \"HABIT PROTOCOLS\";\n      case \"/dailies\": return \"DAILY ROUTINES\"; \n      case \"/todos\": return \"MISSION OBJECTIVES\";\n      case \"/rewards\": return \"REWARD MATRIX\";\n      case \"/crew\": return \"NEURAL CREW\";\n      case \"/market\": return \"CYBER MARKET\";\n      default: return \"NEURAL DASHBOARD\";\n    }\n  };\n\n  const getPageDescription = () => {\n    switch (location) {\n      case \"/habits\": return \"Automated behavioral enhancement protocols\";\n      case \"/dailies\": return \"Critical daily maintenance routines\";\n      case \"/todos\": return \"Active mission objectives and tasks\";\n      case \"/rewards\": return \"Available reward packages and upgrades\";\n      case \"/crew\": return \"Connected NetRunners and team status\";\n      case \"/market\": return \"Equipment and upgrade marketplace\";\n      default: return \"Data stream initialized // System status: OPTIMAL\";\n    }\n  };\n\n  const handleLogout = () => {\n    window.location.href = \"/api/logout\";\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-background flex items-center justify-center\">\n        <div className=\"text-primary text-glow\">Loading Neural Interface...</div>\n      </div>\n    );\n  }\n\n  if (!character) {\n    return (\n      <div className=\"min-h-screen bg-background flex items-center justify-center\">\n        <div className=\"text-destructive\">Character not found</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex h-screen bg-background\">\n      {/* Sidebar */}\n      <div className=\"w-80 bg-card border-r border-border flex flex-col cyber-grid\">\n        <CharacterProfile character={character} />\n        <Navigation />\n        \n        {/* Quick Actions */}\n        <div className=\"p-4 border-t border-border\">\n          <Button \n            className=\"w-full bg-accent text-accent-foreground hover:bg-accent/90 glow-accent\"\n            onClick={() => {\n              // Quick habit completion or other action\n              alert(\"Neural link activated! Quick actions coming soon...\");\n            }}\n            data-testid=\"button-jack-in\"\n          >\n            JACK IN\n          </Button>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"flex-1 overflow-auto\">\n        {/* Header */}\n        <header className=\"bg-card/50 backdrop-blur-sm border-b border-border p-6 sticky top-0 z-10\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-primary text-glow\">{getPageTitle()}</h1>\n              <p className=\"text-muted-foreground mt-1\">{getPageDescription()}</p>\n            </div>\n            <div className=\"flex items-center gap-4\">\n              {/* Quick stats */}\n              <div className=\"flex gap-6 text-sm\">\n                <div className=\"text-center\">\n                  <div className=\"text-lg font-bold text-accent mono\" data-testid=\"text-streak\">\n                    {character.streak}\n                  </div>\n                  <div className=\"text-xs text-muted-foreground\">STREAK</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-lg font-bold text-primary mono\" data-testid=\"text-level\">\n                    {character.level}\n                  </div>\n                  <div className=\"text-xs text-muted-foreground\">LEVEL</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-lg font-bold text-neon-cyan mono\" data-testid=\"text-credits\">\n                    ₡{character.credits}\n                  </div>\n                  <div className=\"text-xs text-muted-foreground\">CREDITS</div>\n                </div>\n              </div>\n              \n              {/* Settings */}\n              <DropdownMenu>\n                <DropdownMenuTrigger asChild>\n                  <Button \n                    variant=\"ghost\" \n                    size=\"sm\"\n                    className=\"p-2 rounded-md border border-border hover:bg-muted/10 transition-colors\"\n                    data-testid=\"button-settings\"\n                  >\n                    <Settings className=\"w-5 h-5\" />\n                  </Button>\n                </DropdownMenuTrigger>\n                <DropdownMenuContent align=\"end\" className=\"w-48 bg-card border-border\">\n                  <DropdownMenuItem onClick={handleLogout} className=\"text-destructive cursor-pointer\">\n                    <LogOut className=\"w-4 h-4 mr-2\" />\n                    Disconnect\n                  </DropdownMenuItem>\n                </DropdownMenuContent>\n              </DropdownMenu>\n            </div>\n          </div>\n        </header>\n\n        {/* Dashboard Content */}\n        <main className=\"p-6 space-y-6\">\n          {location === \"/\" ? (\n            <>\n              {/* Progress Overview */}\n              <ProgressOverview />\n\n              {/* Active Tasks & Habits */}\n              <section className=\"grid grid-cols-1 xl:grid-cols-2 gap-6\">\n                <HabitTracker />\n                <MissionControl />\n              </section>\n\n              {/* Rewards & Equipment */}\n              <section className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                <RewardsSection />\n                <LoadoutSection />\n              </section>\n            </>\n          ) : location === \"/habits\" ? (\n            <HabitTracker />\n          ) : location === \"/dailies\" ? (\n            <DailiesTracker />\n          ) : location === \"/todos\" ? (\n            <MissionControl />\n          ) : location === \"/rewards\" ? (\n            <RewardsSection />\n          ) : (\n            <div className=\"text-center py-20\">\n              <h2 className=\"text-2xl font-bold text-primary text-glow mb-4\">\n                {getPageTitle()}\n              </h2>\n              <p className=\"text-muted-foreground mb-8\">\n                This neural interface module is currently under development.\n              </p>\n              <p className=\"text-sm text-muted-foreground\">\n                Check back soon for enhanced functionality in this sector.\n              </p>\n            </div>\n          )}\n        </main>\n      </div>\n    </div>\n  );\n}\n","size_bytes":7255},"client/src/pages/landing.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Zap, Shield, Target, Trophy } from \"lucide-react\";\n\nexport default function Landing() {\n  const handleLogin = () => {\n    window.location.href = \"/api/login\";\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background cyber-grid\">\n      {/* Header */}\n      <header className=\"border-b border-border/50 bg-card/20 backdrop-blur-sm\">\n        <div className=\"container mx-auto px-4 py-6 flex justify-between items-center\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"w-10 h-10 bg-gradient-to-br from-primary/20 to-accent/20 rounded-lg border border-primary/50 glow-primary flex items-center justify-center\">\n              <Zap className=\"w-6 h-6 text-primary\" />\n            </div>\n            <div>\n              <h1 className=\"text-2xl font-bold text-primary text-glow\">NETRUNNER</h1>\n              <p className=\"text-xs text-muted-foreground mono\">v2.077</p>\n            </div>\n          </div>\n          <Button \n            onClick={handleLogin}\n            className=\"bg-primary hover:bg-primary/80 text-primary-foreground glow-primary\"\n            data-testid=\"button-login\"\n          >\n            JACK IN\n          </Button>\n        </div>\n      </header>\n\n      {/* Hero Section */}\n      <section className=\"container mx-auto px-4 py-20 text-center\">\n        <div className=\"max-w-4xl mx-auto\">\n          <h2 className=\"text-5xl md:text-7xl font-bold mb-6\">\n            <span className=\"text-primary text-glow\">CYBER</span>\n            <span className=\"text-foreground\">HABITS</span>\n          </h2>\n          <p className=\"text-xl text-muted-foreground mb-8 max-w-2xl mx-auto\">\n            Gamify your daily routines in a cyberpunk universe. Complete habits, earn XP, \n            level up your character, and become the ultimate NetRunner.\n          </p>\n          <Button \n            onClick={handleLogin}\n            size=\"lg\"\n            className=\"bg-gradient-to-r from-primary to-accent hover:from-primary/80 hover:to-accent/80 text-primary-foreground text-lg px-8 py-6 glow-primary\"\n            data-testid=\"button-get-started\"\n          >\n            INITIALIZE NEURAL LINK\n          </Button>\n        </div>\n      </section>\n\n      {/* Features Grid */}\n      <section className=\"container mx-auto px-4 py-20\">\n        <div className=\"grid md:grid-cols-3 gap-8 max-w-5xl mx-auto\">\n          <Card className=\"bg-card/50 border-border glow-cyan\">\n            <CardHeader className=\"text-center\">\n              <Shield className=\"w-12 h-12 text-accent mx-auto mb-4\" />\n              <CardTitle className=\"text-accent\">Habit Tracking</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <CardDescription className=\"text-center\">\n                Transform daily routines into cyberpunk missions. Track habits and build streaks \n                to enhance your digital avatar.\n              </CardDescription>\n            </CardContent>\n          </Card>\n\n          <Card className=\"bg-card/50 border-border glow-primary\">\n            <CardHeader className=\"text-center\">\n              <Target className=\"w-12 h-12 text-primary mx-auto mb-4\" />\n              <CardTitle className=\"text-primary\">RPG Progression</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <CardDescription className=\"text-center\">\n                Gain XP, level up, and unlock new abilities. Your real-world progress \n                powers your virtual character.\n              </CardDescription>\n            </CardContent>\n          </Card>\n\n          <Card className=\"bg-card/50 border-border glow-yellow\">\n            <CardHeader className=\"text-center\">\n              <Trophy className=\"w-12 h-12 text-yellow-400 mx-auto mb-4\" />\n              <CardTitle className=\"text-yellow-400\">Rewards System</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <CardDescription className=\"text-center\">\n                Earn credits through completed tasks and spend them on custom rewards \n                and character upgrades.\n              </CardDescription>\n            </CardContent>\n          </Card>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"container mx-auto px-4 py-20 text-center\">\n        <Card className=\"max-w-2xl mx-auto bg-gradient-to-br from-primary/10 to-accent/10 border-primary/50 glow-primary\">\n          <CardContent className=\"pt-8\">\n            <h3 className=\"text-3xl font-bold mb-4 text-primary text-glow\">\n              Ready to Jack In?\n            </h3>\n            <p className=\"text-muted-foreground mb-6\">\n              Join the resistance and start building better habits in the neon-lit world of tomorrow.\n            </p>\n            <Button \n              onClick={handleLogin}\n              size=\"lg\"\n              className=\"bg-primary hover:bg-primary/80 text-primary-foreground glow-primary\"\n              data-testid=\"button-cta-login\"\n            >\n              CONNECT TO MATRIX\n            </Button>\n          </CardContent>\n        </Card>\n      </section>\n    </div>\n  );\n}","size_bytes":5223},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { AlertTriangle, ArrowLeft } from \"lucide-react\";\nimport { Link } from \"wouter\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-background cyber-grid\">\n      <Card className=\"w-full max-w-md mx-4 bg-card/80 backdrop-blur-sm border-border\">\n        <CardContent className=\"pt-6 text-center space-y-6\">\n          <div className=\"flex flex-col items-center gap-4\">\n            <div className=\"w-16 h-16 rounded-full bg-destructive/20 border border-destructive/50 flex items-center justify-center\">\n              <AlertTriangle className=\"h-8 w-8 text-destructive\" />\n            </div>\n            <div>\n              <h1 className=\"text-2xl font-bold text-foreground mb-2\">404 - NEURAL LINK BROKEN</h1>\n              <p className=\"text-muted-foreground\">\n                This sector of the Matrix doesn't exist in our database.\n              </p>\n            </div>\n          </div>\n\n          <Link href=\"/\">\n            <Button className=\"w-full bg-primary hover:bg-primary/80 text-primary-foreground glow-primary\">\n              <ArrowLeft className=\"w-4 h-4 mr-2\" />\n              RETURN TO NEURAL DASHBOARD\n            </Button>\n          </Link>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":1397},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium text-[hsl(var(--input-foreground))] placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":806},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background text-[hsl(var(--input-foreground))] placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":725},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/pages/character-creation.tsx":{"content":"import { useState } from \"react\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { z } from \"zod\";\nimport { Zap, User, Cpu, Shield, Brain, Sword, Wrench, Target } from \"lucide-react\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\n\nconst createCharacterSchema = z.object({\n  username: z.string()\n    .min(3, \"Username must be at least 3 characters\")\n    .max(20, \"Username must be less than 20 characters\")\n    .regex(/^[a-zA-Z0-9_-]+$/, \"Username can only contain letters, numbers, hyphens, and underscores\"),\n  specialization: z.enum([\"netrunner\", \"street_samurai\", \"techie\", \"solo\"], {\n    required_error: \"Please select a specialization\",\n  }),\n  appearance: z.object({\n    avatar: z.enum([\"cyber_punk\", \"neon_ghost\", \"data_warrior\", \"code_ninja\"]),\n    primaryColor: z.enum([\"neon_blue\", \"electric_purple\", \"cyber_yellow\", \"matrix_green\"]),\n  }),\n});\n\ntype CreateCharacterForm = z.infer<typeof createCharacterSchema>;\n\nconst getSpecializationIcon = (specialization: string) => {\n  switch (specialization) {\n    case \"netrunner\":\n      return <Brain className=\"w-8 h-8 text-purple-400\" />;\n    case \"street_samurai\":\n      return <Sword className=\"w-8 h-8 text-purple-400\" />;\n    case \"techie\":\n      return <Wrench className=\"w-8 h-8 text-purple-400\" />;\n    case \"solo\":\n      return <Target className=\"w-8 h-8 text-purple-400\" />;\n    default:\n      return <Brain className=\"w-8 h-8 text-purple-400\" />;\n  }\n};\n\nconst getSpecializationName = (specialization: string) => {\n  switch (specialization) {\n    case \"netrunner\":\n      return \"NetRunner\";\n    case \"street_samurai\":\n      return \"Street Samurai\";\n    case \"techie\":\n      return \"Techie\";\n    case \"solo\":\n      return \"Solo\";\n    default:\n      return \"NetRunner\";\n  }\n};\n\nconst getSpecializationBonus = (specialization: string) => {\n  switch (specialization) {\n    case \"netrunner\":\n      return \"+5 XP bonus on habits\";\n    case \"street_samurai\":\n      return \"+10 HP bonus\";\n    case \"techie\":\n      return \"+25₡ bonus on todos\";\n    case \"solo\":\n      return \"Double daily streak bonus\";\n    default:\n      return \"+5 XP bonus on habits\";\n  }\n};\n\nexport default function CharacterCreation() {\n  const [, setLocation] = useLocation();\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const form = useForm<CreateCharacterForm>({\n    resolver: zodResolver(createCharacterSchema),\n    defaultValues: {\n      username: \"\",\n      specialization: \"netrunner\",\n      appearance: {\n        avatar: \"cyber_punk\",\n        primaryColor: \"neon_blue\",\n      },\n    },\n  });\n\n  const createCharacterMutation = useMutation({\n    mutationFn: async (data: CreateCharacterForm) => {\n      return apiRequest(\"POST\", \"/api/setup-character\", data);\n    },\n    onSuccess: () => {\n      toast({\n        title: \"Neural Interface Activated!\",\n        description: \"Your character has been successfully created. Welcome to the Matrix, NetRunner.\",\n      });\n      \n      // Invalidate queries to refresh user and character data\n      queryClient.invalidateQueries({ queryKey: [\"/api/auth/user\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/character\"] });\n      \n      // Redirect to dashboard\n      setLocation(\"/\");\n    },\n    onError: (error: Error) => {\n      toast({\n        variant: \"destructive\",\n        title: \"Character Creation Failed\",\n        description: error.message || \"Failed to create character. Please try again.\",\n      });\n    },\n  });\n\n  const onSubmit = (data: CreateCharacterForm) => {\n    createCharacterMutation.mutate(data);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background cyber-grid flex items-center justify-center p-4\">\n      <Card className=\"w-full max-w-2xl bg-card/80 backdrop-blur-sm border-primary/50 glow-primary\">\n        <CardHeader className=\"text-center space-y-6\">\n          <div className=\"flex justify-center\">\n            <div className=\"w-20 h-20 bg-gradient-to-br from-primary/20 to-accent/20 rounded-full border-2 border-primary/50 glow-primary flex items-center justify-center\">\n              <Zap className=\"w-10 h-10 text-primary\" />\n            </div>\n          </div>\n          <div>\n            <CardTitle className=\"text-3xl font-bold text-primary text-glow mb-2\">\n              NEURAL INTERFACE INITIALIZATION\n            </CardTitle>\n            <CardDescription className=\"text-lg text-muted-foreground\">\n              Configure your NetRunner persona to begin your journey in the cyber realm\n            </CardDescription>\n          </div>\n        </CardHeader>\n\n        <CardContent className=\"space-y-8\">\n          {/* Character Preview */}\n          <div className=\"grid md:grid-cols-4 gap-4\">\n            <div className=\"flex flex-col items-center space-y-2 p-4 border border-accent/30 rounded-lg bg-accent/10\">\n              <User className=\"w-8 h-8 text-accent\" />\n              <span className=\"text-sm font-medium text-accent\">Identity</span>\n              <span className=\"text-xs text-muted-foreground mono\">\n                CYBER-{form.watch(\"username\")?.toUpperCase() || \"...\"}\n              </span>\n            </div>\n            <div className=\"flex flex-col items-center space-y-2 p-4 border border-primary/30 rounded-lg bg-primary/10\">\n              <Cpu className=\"w-8 h-8 text-primary\" />\n              <span className=\"text-sm font-medium text-primary\">Neural Core</span>\n              <span className=\"text-xs text-muted-foreground\">Level 1 • 0 XP</span>\n            </div>\n            <div className=\"flex flex-col items-center space-y-2 p-4 border border-yellow-400/30 rounded-lg bg-yellow-400/10\">\n              <Shield className=\"w-8 h-8 text-yellow-400\" />\n              <span className=\"text-sm font-medium text-yellow-400\">Firewall</span>\n              <span className=\"text-xs text-muted-foreground\">100 HP • 0₡</span>\n            </div>\n            <div className=\"flex flex-col items-center space-y-2 p-4 border border-purple-400/30 rounded-lg bg-purple-400/10\">\n              {getSpecializationIcon(form.watch(\"specialization\"))}\n              <span className=\"text-sm font-medium text-purple-400\">\n                {getSpecializationName(form.watch(\"specialization\"))}\n              </span>\n              <span className=\"text-xs text-muted-foreground\">\n                {getSpecializationBonus(form.watch(\"specialization\"))}\n              </span>\n            </div>\n          </div>\n\n          {/* Username Form */}\n          <Form {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n              <FormField\n                control={form.control}\n                name=\"username\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel className=\"text-primary text-lg font-semibold\">\n                      NetRunner Callsign\n                    </FormLabel>\n                    <FormControl>\n                      <div className=\"relative\">\n                        <Input\n                          {...field}\n                          placeholder=\"Enter your username\"\n                          className=\"text-lg py-6 pl-4 pr-12 bg-background/50 border-primary/50 focus:border-primary focus:ring-primary\"\n                          disabled={createCharacterMutation.isPending}\n                          data-testid=\"input-username\"\n                        />\n                        <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2\">\n                          <span className=\"text-xs font-mono text-muted-foreground\">\n                            CYBER-{field.value ? field.value.toUpperCase() : \"...\"}\n                          </span>\n                        </div>\n                      </div>\n                    </FormControl>\n                    <FormMessage />\n                    <p className=\"text-sm text-muted-foreground\">\n                      Choose a unique callsign for your NetRunner identity.\n                    </p>\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name=\"specialization\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel className=\"text-accent text-lg font-semibold\">\n                      Cyberpunk Specialization\n                    </FormLabel>\n                    <Select onValueChange={field.onChange} defaultValue={field.value}>\n                      <FormControl>\n                        <SelectTrigger className=\"text-lg py-6 bg-background/50 border-accent/50 focus:border-accent focus:ring-accent\">\n                          <SelectValue placeholder=\"Choose your path\" />\n                        </SelectTrigger>\n                      </FormControl>\n                      <SelectContent>\n                        <SelectItem value=\"netrunner\" className=\"text-lg p-4\">\n                          <div className=\"flex items-center space-x-3\">\n                            <Brain className=\"w-5 h-5 text-primary\" />\n                            <div>\n                              <div className=\"font-semibold\">NetRunner</div>\n                              <div className=\"text-sm text-muted-foreground\">Master of the digital realm</div>\n                            </div>\n                          </div>\n                        </SelectItem>\n                        <SelectItem value=\"street_samurai\" className=\"text-lg p-4\">\n                          <div className=\"flex items-center space-x-3\">\n                            <Sword className=\"w-5 h-5 text-destructive\" />\n                            <div>\n                              <div className=\"font-semibold\">Street Samurai</div>\n                              <div className=\"text-sm text-muted-foreground\">Warrior of the urban jungle</div>\n                            </div>\n                          </div>\n                        </SelectItem>\n                        <SelectItem value=\"techie\" className=\"text-lg p-4\">\n                          <div className=\"flex items-center space-x-3\">\n                            <Wrench className=\"w-5 h-5 text-yellow-400\" />\n                            <div>\n                              <div className=\"font-semibold\">Techie</div>\n                              <div className=\"text-sm text-muted-foreground\">Hardware and system specialist</div>\n                            </div>\n                          </div>\n                        </SelectItem>\n                        <SelectItem value=\"solo\" className=\"text-lg p-4\">\n                          <div className=\"flex items-center space-x-3\">\n                            <Target className=\"w-5 h-5 text-accent\" />\n                            <div>\n                              <div className=\"font-semibold\">Solo</div>\n                              <div className=\"text-sm text-muted-foreground\">Independent operative</div>\n                            </div>\n                          </div>\n                        </SelectItem>\n                      </SelectContent>\n                    </Select>\n                    <FormMessage />\n                    <p className=\"text-sm text-muted-foreground\">\n                      Your specialization affects starting bonuses and gameplay advantages.\n                    </p>\n                  </FormItem>\n                )}\n              />\n\n              <Button\n                type=\"submit\"\n                size=\"lg\"\n                className=\"w-full bg-gradient-to-r from-primary to-accent hover:from-primary/80 hover:to-accent/80 text-primary-foreground text-lg py-6 glow-primary\"\n                disabled={createCharacterMutation.isPending}\n                data-testid=\"button-create-character\"\n              >\n                {createCharacterMutation.isPending ? (\n                  <div className=\"flex items-center space-x-2\">\n                    <div className=\"w-5 h-5 border-2 border-primary-foreground/20 border-t-primary-foreground rounded-full animate-spin\"></div>\n                    <span>INITIALIZING NEURAL LINK...</span>\n                  </div>\n                ) : (\n                  \"JACK INTO THE MATRIX\"\n                )}\n              </Button>\n            </form>\n          </Form>\n\n          {/* Info Text */}\n          <div className=\"text-center space-y-2\">\n            <p className=\"text-sm text-muted-foreground\">\n              By creating your character, you'll gain access to:\n            </p>\n            <div className=\"flex flex-wrap justify-center gap-4 text-xs\">\n              <span className=\"text-primary\">• Habit Tracking System</span>\n              <span className=\"text-accent\">• XP & Leveling</span>\n              <span className=\"text-yellow-400\">• Credits & Rewards</span>\n              <span className=\"text-purple-400\">• Equipment & Upgrades</span>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}","size_bytes":13552},"client/src/components/dailies-tracker.tsx":{"content":"import { useState } from \"react\";\nimport { useDailies } from \"@/hooks/use-dailies\";\nimport { Button } from \"@/components/ui/button\";\nimport { CheckCircle, Circle, MoreHorizontal } from \"lucide-react\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\nimport { DailyForm } from \"@/components/daily-form\";\nimport { useToast } from \"@/hooks/use-toast\";\n\nexport function DailiesTracker() {\n  const { dailies, completeDaily, isLoading } = useDailies();\n  const { toast } = useToast();\n  const [isCreateDialogOpen, setIsCreateDialogOpen] = useState(false);\n\n  const handleComplete = async (dailyId: string) => {\n    try {\n      await completeDaily(dailyId);\n      toast({\n        title: \"Daily Completed!\",\n        description: \"XP and credits gained • Streak continued\",\n      });\n    } catch (error) {\n      toast({\n        variant: \"destructive\",\n        title: \"Error\",\n        description: error instanceof Error ? error.message : \"Failed to complete daily\",\n      });\n    }\n  };\n\n  const getDifficultyLabel = (difficulty: string) => {\n    switch (difficulty) {\n      case \"hard\":\n        return \"HARD\";\n      case \"medium\":\n        return \"MEDIUM\";\n      case \"easy\":\n        return \"EASY\";\n      default:\n        return \"MEDIUM\";\n    }\n  };\n\n  const getDifficultyColor = (difficulty: string) => {\n    switch (difficulty) {\n      case \"hard\":\n        return \"text-destructive\";\n      case \"medium\":\n        return \"text-accent\";\n      case \"easy\":\n        return \"text-primary\";\n      default:\n        return \"text-accent\";\n    }\n  };\n\n  const getStreakColor = (streak: number) => {\n    if (streak >= 30) return \"text-yellow-400\"; // Gold\n    if (streak >= 14) return \"text-purple-400\"; // Purple\n    if (streak >= 7) return \"text-blue-400\"; // Blue\n    if (streak >= 3) return \"text-green-400\"; // Green\n    return \"text-muted-foreground\";\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"bg-card rounded-lg border border-border p-6\">\n        <div className=\"text-center text-muted-foreground\">Loading dailies...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-card rounded-lg border border-border p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <h3 className=\"text-xl font-semibold text-primary\">DAILY ROUTINES</h3>\n        <Dialog open={isCreateDialogOpen} onOpenChange={setIsCreateDialogOpen}>\n          <DialogTrigger asChild>\n            <Button \n              className=\"px-3 py-1 bg-primary/10 text-primary rounded border border-primary/20 text-sm hover:bg-primary/20 transition-colors\"\n              data-testid=\"button-new-daily\"\n            >\n              + NEW DAILY\n            </Button>\n          </DialogTrigger>\n          <DialogContent className=\"bg-card border-border max-w-lg\">\n            <DialogHeader>\n              <DialogTitle className=\"text-primary\">Create Daily Routine</DialogTitle>\n            </DialogHeader>\n            <DailyForm onSuccess={() => setIsCreateDialogOpen(false)} />\n          </DialogContent>\n        </Dialog>\n      </div>\n      \n      <div className=\"space-y-3\">\n        {dailies.length === 0 ? (\n          <div className=\"text-center text-muted-foreground py-8\">\n            No daily routines configured. Create your first daily to build consistent habits!\n          </div>\n        ) : (\n          dailies.map((daily) => {\n            const isCompleted = daily.isCompletedToday;\n            const today = new Date().toISOString().split('T')[0];\n            const canComplete = !isCompleted;\n\n            return (\n              <div \n                key={daily.id}\n                className={`flex items-center gap-3 p-3 rounded border transition-all group ${\n                  isCompleted \n                    ? \"bg-primary/5 border-primary/20 hover:border-primary/40\" \n                    : \"bg-muted/10 border-muted/20 hover:border-primary/30\"\n                }`}\n                data-testid={`daily-${daily.id}`}\n              >\n                <Button\n                  size=\"sm\"\n                  onClick={() => canComplete && handleComplete(daily.id)}\n                  disabled={!canComplete}\n                  className={`w-6 h-6 rounded-full border transition-colors p-0 ${\n                    isCompleted\n                      ? \"bg-primary/20 border-primary text-primary hover:bg-primary/30\"\n                      : \"border-primary/50 hover:bg-primary/20 hover:border-primary\"\n                  }`}\n                  data-testid={`button-complete-daily-${daily.id}`}\n                >\n                  {isCompleted ? (\n                    <CheckCircle className=\"w-4 h-4\" />\n                  ) : (\n                    <Circle className=\"w-4 h-4\" />\n                  )}\n                </Button>\n                \n                <div className=\"flex-1\">\n                  <div \n                    className={`font-medium text-sm ${\n                      isCompleted ? \"line-through text-muted-foreground\" : \"\"\n                    }`}\n                    data-testid={`daily-title-${daily.id}`}\n                  >\n                    {daily.title}\n                  </div>\n                  <div className=\"text-xs text-muted-foreground mono flex items-center gap-2\">\n                    <span className={getDifficultyColor(daily.difficulty)}>\n                      {getDifficultyLabel(daily.difficulty)}\n                    </span>\n                    <span>•</span>\n                    <span>+{daily.xpReward} XP • +₡{daily.creditsReward}</span>\n                    <span>•</span>\n                    <span className={getStreakColor(daily.streak)}>\n                      🔥 {daily.streak} day streak\n                    </span>\n                  </div>\n                </div>\n                \n                <div className=\"opacity-0 group-hover:opacity-100 transition-opacity\">\n                  <Button \n                    variant=\"ghost\" \n                    size=\"sm\"\n                    className=\"p-1 hover:bg-muted/20 rounded\"\n                    data-testid={`button-daily-menu-${daily.id}`}\n                  >\n                    <MoreHorizontal className=\"w-4 h-4\" />\n                  </Button>\n                </div>\n              </div>\n            );\n          })\n        )}\n      </div>\n    </div>\n  );\n}","size_bytes":6313},"client/src/components/daily-form.tsx":{"content":"import { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Plus } from \"lucide-react\";\nimport { useDailies } from \"@/hooks/use-dailies\";\nimport { useToast } from \"@/hooks/use-toast\";\n\ninterface DailyFormProps {\n  onSuccess?: () => void;\n  onCancel?: () => void;\n}\n\nexport function DailyForm({ onSuccess, onCancel }: DailyFormProps) {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [difficulty, setDifficulty] = useState(\"medium\");\n  const { createDaily, isCreating } = useDailies();\n  const { toast } = useToast();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!title.trim()) {\n      toast({\n        variant: \"destructive\",\n        title: \"Error\",\n        description: \"Daily routine title is required\",\n      });\n      return;\n    }\n\n    try {\n      await createDaily({\n        title: title.trim(),\n        description: description.trim() || undefined,\n        difficulty,\n      });\n      \n      toast({\n        title: \"Daily Routine Created!\",\n        description: \"New daily habit added to your routine\",\n      });\n      \n      // Reset form\n      setTitle(\"\");\n      setDescription(\"\");\n      setDifficulty(\"medium\");\n      \n      onSuccess?.();\n    } catch (error) {\n      toast({\n        variant: \"destructive\",\n        title: \"Error\",\n        description: \"Failed to create daily routine\",\n      });\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"daily-title\" className=\"text-primary font-medium\">\n          Daily Routine Title *\n        </Label>\n        <Input\n          id=\"daily-title\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          placeholder=\"Enter daily routine...\"\n          className=\"bg-background border-border focus:border-primary text-foreground\"\n          data-testid=\"input-daily-title\"\n        />\n      </div>\n\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"daily-description\" className=\"text-primary font-medium\">\n          Description\n        </Label>\n        <Textarea\n          id=\"daily-description\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          placeholder=\"Detailed description of this daily routine...\"\n          className=\"bg-background border-border focus:border-primary text-foreground min-h-[80px]\"\n          data-testid=\"input-daily-description\"\n        />\n      </div>\n\n      <div className=\"space-y-2\">\n        <Label className=\"text-primary font-medium\">Difficulty Level</Label>\n        <Select value={difficulty} onValueChange={setDifficulty}>\n          <SelectTrigger className=\"bg-background border-border focus:border-primary text-foreground\" data-testid=\"select-daily-difficulty\">\n            <SelectValue />\n          </SelectTrigger>\n          <SelectContent className=\"bg-card border-border\">\n            <SelectItem value=\"easy\">EASY (20 XP • 8₡)</SelectItem>\n            <SelectItem value=\"medium\">MEDIUM (30 XP • 12₡)</SelectItem>\n            <SelectItem value=\"hard\">HARD (40 XP • 16₡)</SelectItem>\n          </SelectContent>\n        </Select>\n      </div>\n\n      <div className=\"flex gap-2 pt-4\">\n        <Button\n          type=\"submit\"\n          disabled={isCreating}\n          className=\"flex-1 bg-primary hover:bg-primary/80 text-primary-foreground\"\n          data-testid=\"button-create-daily\"\n        >\n          <Plus className=\"w-4 h-4 mr-2\" />\n          {isCreating ? \"Creating...\" : \"Create Daily Routine\"}\n        </Button>\n        \n        {onCancel && (\n          <Button\n            type=\"button\"\n            variant=\"outline\"\n            onClick={onCancel}\n            className=\"border-border hover:bg-muted/10\"\n            data-testid=\"button-cancel-daily\"\n          >\n            Cancel\n          </Button>\n        )}\n      </div>\n    </form>\n  );\n}","size_bytes":4212},"client/src/components/todo-form.tsx":{"content":"import { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\";\nimport { Calendar as CalendarIcon, Plus } from \"lucide-react\";\nimport { format } from \"date-fns\";\nimport { useTodos } from \"@/hooks/use-todos\";\nimport { useToast } from \"@/hooks/use-toast\";\n\ninterface TodoFormProps {\n  onSuccess?: () => void;\n  onCancel?: () => void;\n}\n\nexport function TodoForm({ onSuccess, onCancel }: TodoFormProps) {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [priority, setPriority] = useState(\"medium\");\n  const [dueDate, setDueDate] = useState<Date | undefined>(undefined);\n  const { createTodo, isCreating } = useTodos();\n  const { toast } = useToast();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!title.trim()) {\n      toast({\n        variant: \"destructive\",\n        title: \"Error\",\n        description: \"Mission title is required\",\n      });\n      return;\n    }\n\n    try {\n      await createTodo({\n        title: title.trim(),\n        description: description.trim() || undefined,\n        priority,\n        dueDate: dueDate?.toISOString(),\n      });\n      \n      toast({\n        title: \"Mission Created!\",\n        description: \"New objective added to your mission log\",\n      });\n      \n      // Reset form\n      setTitle(\"\");\n      setDescription(\"\");\n      setPriority(\"medium\");\n      setDueDate(undefined);\n      \n      onSuccess?.();\n    } catch (error) {\n      toast({\n        variant: \"destructive\",\n        title: \"Error\",\n        description: \"Failed to create mission\",\n      });\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"todo-title\" className=\"text-primary font-medium\">\n          Mission Title *\n        </Label>\n        <Input\n          id=\"todo-title\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          placeholder=\"Enter mission objective...\"\n          className=\"bg-background border-border focus:border-primary text-foreground\"\n          data-testid=\"input-todo-title\"\n        />\n      </div>\n\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"todo-description\" className=\"text-primary font-medium\">\n          Mission Brief\n        </Label>\n        <Textarea\n          id=\"todo-description\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          placeholder=\"Detailed mission description (optional)...\"\n          className=\"bg-background border-border focus:border-primary text-foreground min-h-[80px]\"\n          data-testid=\"input-todo-description\"\n        />\n      </div>\n\n      <div className=\"grid grid-cols-2 gap-4\">\n        <div className=\"space-y-2\">\n          <Label className=\"text-primary font-medium\">Priority Level</Label>\n          <Select value={priority} onValueChange={setPriority}>\n            <SelectTrigger className=\"bg-background border-border focus:border-primary text-foreground\" data-testid=\"select-todo-priority\">\n              <SelectValue />\n            </SelectTrigger>\n            <SelectContent className=\"bg-card border-border\">\n              <SelectItem value=\"low\">LOW (50 XP • 25₡)</SelectItem>\n              <SelectItem value=\"medium\">MEDIUM (75 XP • 38₡)</SelectItem>\n              <SelectItem value=\"high\">HIGH (100 XP • 50₡)</SelectItem>\n            </SelectContent>\n          </Select>\n        </div>\n\n        <div className=\"space-y-2\">\n          <Label className=\"text-primary font-medium\">Due Date</Label>\n          <Popover>\n            <PopoverTrigger asChild>\n              <Button\n                variant=\"outline\"\n                className=\"w-full justify-start bg-background border-border hover:border-primary text-foreground\"\n                data-testid=\"button-todo-due-date\"\n              >\n                <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                {dueDate ? format(dueDate, \"PPP\") : \"Select date\"}\n              </Button>\n            </PopoverTrigger>\n            <PopoverContent className=\"w-auto p-0 bg-card border-border\">\n              <Calendar\n                mode=\"single\"\n                selected={dueDate}\n                onSelect={setDueDate}\n                disabled={(date) => date < new Date()}\n                initialFocus\n              />\n            </PopoverContent>\n          </Popover>\n        </div>\n      </div>\n\n      <div className=\"flex gap-2 pt-4\">\n        <Button\n          type=\"submit\"\n          disabled={isCreating}\n          className=\"flex-1 bg-accent hover:bg-accent/80 text-accent-foreground\"\n          data-testid=\"button-create-todo\"\n        >\n          <Plus className=\"w-4 h-4 mr-2\" />\n          {isCreating ? \"Creating...\" : \"Create Mission\"}\n        </Button>\n        \n        {onCancel && (\n          <Button\n            type=\"button\"\n            variant=\"outline\"\n            onClick={onCancel}\n            className=\"border-border hover:bg-muted/10\"\n            data-testid=\"button-cancel-todo\"\n          >\n            Cancel\n          </Button>\n        )}\n      </div>\n    </form>\n  );\n}","size_bytes":5521},"client/src/hooks/use-dailies.ts":{"content":"import { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { getAuthHeaders } from \"@/lib/auth\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport type { Daily } from \"@shared/schema\";\n\nexport function useDailies() {\n  const queryClient = useQueryClient();\n\n  const { data: dailies = [], isLoading } = useQuery<Daily[]>({\n    queryKey: [\"/api/dailies\"],\n    queryFn: async () => {\n      const response = await fetch(\"/api/dailies\", {\n        headers: getAuthHeaders(),\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch dailies\");\n      }\n      return response.json();\n    },\n  });\n\n  const completeDailyMutation = useMutation({\n    mutationFn: async (dailyId: string) => {\n      const response = await apiRequest(\"POST\", `/api/dailies/${dailyId}/complete`);\n      return response.json();\n    },\n    onSuccess: (completedDaily: Daily, dailyId: string) => {\n      // Update daily completion status\n      queryClient.setQueryData([\"/api/dailies\"], (oldDailies: Daily[] = []) =>\n        oldDailies.map((daily) =>\n          daily.id === dailyId\n            ? { \n                ...daily, \n                isCompletedToday: true, \n                lastCompletedDate: new Date().toISOString().split('T')[0],\n                streak: completedDaily.streak\n              }\n            : daily\n        )\n      );\n      \n      // Invalidate character data to refresh XP/credits\n      queryClient.invalidateQueries({ queryKey: [\"/api/character\"] });\n    },\n  });\n\n  const createDailyMutation = useMutation({\n    mutationFn: async (dailyData: { title: string; description?: string; difficulty: string }) => {\n      const response = await apiRequest(\"POST\", \"/api/dailies\", dailyData);\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/dailies\"] });\n    },\n  });\n\n  return {\n    dailies,\n    isLoading,\n    completeDaily: completeDailyMutation.mutateAsync,\n    createDaily: createDailyMutation.mutateAsync,\n    isCompleting: completeDailyMutation.isPending,\n    isCreating: createDailyMutation.isPending,\n  };\n}","size_bytes":2119},"client/src/components/habit-form.tsx":{"content":"import { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Plus, Palette } from \"lucide-react\";\nimport { useHabits } from \"@/hooks/use-habits\";\nimport { useToast } from \"@/hooks/use-toast\";\n\ninterface HabitFormProps {\n  onSuccess?: () => void;\n  onCancel?: () => void;\n}\n\nconst HABIT_COLORS = [\n  { value: \"primary\", label: \"Neural Purple\", class: \"bg-primary\" },\n  { value: \"accent\", label: \"Neon Pink\", class: \"bg-accent\" },\n  { value: \"cyan\", label: \"Cyber Cyan\", class: \"bg-neon-cyan\" },\n  { value: \"yellow\", label: \"Electric Yellow\", class: \"bg-neon-yellow\" },\n];\n\nexport function HabitForm({ onSuccess, onCancel }: HabitFormProps) {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [difficulty, setDifficulty] = useState(\"medium\");\n  const [color, setColor] = useState(\"primary\");\n  const { createHabit, isCreating } = useHabits();\n  const { toast } = useToast();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!title.trim()) {\n      toast({\n        variant: \"destructive\",\n        title: \"Error\",\n        description: \"Habit title is required\",\n      });\n      return;\n    }\n\n    try {\n      await createHabit({\n        title: title.trim(),\n        description: description.trim() || undefined,\n        difficulty,\n        color,\n      });\n      \n      toast({\n        title: \"Habit Created!\",\n        description: \"New behavior pattern added to your routine\",\n      });\n      \n      // Reset form\n      setTitle(\"\");\n      setDescription(\"\");\n      setDifficulty(\"medium\");\n      setColor(\"primary\");\n      \n      onSuccess?.();\n    } catch (error) {\n      toast({\n        variant: \"destructive\",\n        title: \"Error\",\n        description: \"Failed to create habit\",\n      });\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"habit-title\" className=\"text-primary font-medium\">\n          Habit Title *\n        </Label>\n        <Input\n          id=\"habit-title\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          placeholder=\"Enter habit to build...\"\n          className=\"bg-background border-border focus:border-primary text-foreground\"\n          data-testid=\"input-habit-title\"\n        />\n      </div>\n\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"habit-description\" className=\"text-primary font-medium\">\n          Description\n        </Label>\n        <Textarea\n          id=\"habit-description\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          placeholder=\"Describe this habit and why you want to build it...\"\n          className=\"bg-background border-border focus:border-primary text-foreground min-h-[80px]\"\n          data-testid=\"input-habit-description\"\n        />\n      </div>\n\n      <div className=\"grid grid-cols-2 gap-4\">\n        <div className=\"space-y-2\">\n          <Label className=\"text-primary font-medium\">Difficulty Level</Label>\n          <Select value={difficulty} onValueChange={setDifficulty}>\n            <SelectTrigger className=\"bg-background border-border focus:border-primary text-foreground\" data-testid=\"select-habit-difficulty\">\n              <SelectValue />\n            </SelectTrigger>\n            <SelectContent className=\"bg-card border-border\">\n              <SelectItem value=\"easy\">EASY (25 XP • 10₡)</SelectItem>\n              <SelectItem value=\"medium\">MEDIUM (38 XP • 15₡)</SelectItem>\n              <SelectItem value=\"hard\">HARD (50 XP • 20₡)</SelectItem>\n            </SelectContent>\n          </Select>\n        </div>\n\n        <div className=\"space-y-2\">\n          <Label className=\"text-primary font-medium\">Color Theme</Label>\n          <Select value={color} onValueChange={setColor}>\n            <SelectTrigger className=\"bg-background border-border focus:border-primary text-foreground\" data-testid=\"select-habit-color\">\n              <SelectValue />\n            </SelectTrigger>\n            <SelectContent className=\"bg-card border-border\">\n              {HABIT_COLORS.map((colorOption) => (\n                <SelectItem key={colorOption.value} value={colorOption.value}>\n                  <div className=\"flex items-center gap-2\">\n                    <div className={`w-3 h-3 rounded-full ${colorOption.class}`}></div>\n                    {colorOption.label}\n                  </div>\n                </SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n        </div>\n      </div>\n\n      <div className=\"flex gap-2 pt-4\">\n        <Button\n          type=\"submit\"\n          disabled={isCreating}\n          className=\"flex-1 bg-primary hover:bg-primary/80 text-primary-foreground\"\n          data-testid=\"button-create-habit\"\n        >\n          <Plus className=\"w-4 h-4 mr-2\" />\n          {isCreating ? \"Creating...\" : \"Create Habit\"}\n        </Button>\n        \n        {onCancel && (\n          <Button\n            type=\"button\"\n            variant=\"outline\"\n            onClick={onCancel}\n            className=\"border-border hover:bg-muted/10\"\n            data-testid=\"button-cancel-habit\"\n          >\n            Cancel\n          </Button>\n        )}\n      </div>\n    </form>\n  );\n}","size_bytes":5549}},"version":1}